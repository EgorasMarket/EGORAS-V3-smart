{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "martGTPADDRESS_",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "addBNBLiquidity",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountIn",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "addTokenLiquidity",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountIn",
						"type": "uint256"
					},
					{
						"internalType": "address[]",
						"name": "path",
						"type": "address[]"
					},
					{
						"internalType": "address[]",
						"name": "routerPath",
						"type": "address[]"
					}
				],
				"name": "getAmountsOut",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "amounts",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isOwner",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "to",
						"type": "address"
					}
				],
				"name": "removeBNBLiquidity",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "removeTokenLiquidity",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountOutMin",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "tokenOut",
						"type": "address"
					},
					{
						"internalType": "address[]",
						"name": "routerPath",
						"type": "address[]"
					}
				],
				"name": "swapExactBNBForEUSD",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountOutMin",
						"type": "uint256"
					},
					{
						"internalType": "address[]",
						"name": "path",
						"type": "address[]"
					},
					{
						"internalType": "address[]",
						"name": "routerPath",
						"type": "address[]"
					}
				],
				"name": "swapExactEUSDForTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountOutMin",
						"type": "uint256"
					},
					{
						"internalType": "address[]",
						"name": "routerPath",
						"type": "address[]"
					}
				],
				"name": "swapExactEUSDforBNB",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountOutMin",
						"type": "uint256"
					},
					{
						"internalType": "address[]",
						"name": "path",
						"type": "address[]"
					},
					{
						"internalType": "address[]",
						"name": "routerPath",
						"type": "address[]"
					}
				],
				"name": "swapExactTokensForEUSD",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"isOwner()": {
					"details": "Returns true if the caller is the current owner."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"smart contract/SwapCryptoLoanUpdate/contracts/facets/VolumeGenerator.sol": "VolumeGenerator"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"smart contract/SwapCryptoLoanUpdate/contracts/extensions/Ownable.sol": {
			"keccak256": "0xc37b30ecce27409de651b3c68b857c4532798604ad244267d1a77b46491c261f",
			"license": "MIT",
			"urls": [
				"bzz-raw://c11276a34380890a477c0bf187e52ba565021f8c8ae33e92d046a89088d466fc",
				"dweb:/ipfs/QmVGS9Vf49MGF2FUh6KoAfL6c2qXoBcT3FDifyXyvteKC1"
			]
		},
		"smart contract/SwapCryptoLoanUpdate/contracts/facets/VolumeGenerator.sol": {
			"keccak256": "0x50f701c2194c192a853b498258d33030708d01c74db1627b89b30d0c326416d2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6c2487de89ba39db642b69ecf5bab419d1ffacd79b87231b95102aaf0b99ccaf",
				"dweb:/ipfs/QmT5M4wrWpKnSAVEcawAbSSJFwjRB1qxYvBKc1rBp6gU1Z"
			]
		},
		"smart contract/SwapCryptoLoanUpdate/contracts/interfaces/IERC20.sol": {
			"keccak256": "0xa73c8bf6e4f819df7388c1cc386104d0114d0c744ed8367344324ac85d4af133",
			"license": "MIT",
			"urls": [
				"bzz-raw://13d8d6d406674665fba1fcaeef1f06913ee799e651662c770226c4083ff9f22b",
				"dweb:/ipfs/QmcEfnHXrw6vj4FobPd9nunzYghC7oA6SQFiZTQhwkSTV7"
			]
		},
		"smart contract/SwapCryptoLoanUpdate/contracts/interfaces/IPancakeSwap.sol": {
			"keccak256": "0x6a1983a9845f630fbf155eab31e4261eb7693cf02e846cce89005c37c70c987e",
			"license": "MIT",
			"urls": [
				"bzz-raw://9ef010041fe85912643aab7736920b81514b6784c1afd694e8113e6b781c600a",
				"dweb:/ipfs/QmP2MjEEdidVN8p6xQA6TXHYYGq4kkH9UzFitqKJ5Eg1gs"
			]
		},
		"smart contract/SwapCryptoLoanUpdate/contracts/libraries/SafeMath.sol": {
			"keccak256": "0x32b3bc6a0c948063e8e21287584c180be2653c8d590a9537abd6aaa767885f3b",
			"license": "MIT",
			"urls": [
				"bzz-raw://37a515286727d38a84d2a4acb3fa0b527ae130b7af8bfe321203d20dae5f7f1d",
				"dweb:/ipfs/QmYLztAGbmx96aSZwS4Bzsp8V12DEoerSYLLJpyJSTpazk"
			]
		},
		"smart contract/SwapCryptoLoanUpdate/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		}
	},
	"version": 1
}