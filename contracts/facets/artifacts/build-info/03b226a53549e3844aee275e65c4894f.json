{
	"id": "03b226a53549e3844aee275e65c4894f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/facets/PriceOracleFacet.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\npragma experimental ABIEncoderV2;\nimport \"../libraries/LibDiamond.sol\";\nimport \"./AppStorage.sol\";\n\ncontract PriceOracleFacet {\n    AppStorage internal s;\n\n    event PythiaAdded(address _pythia, address _addBy, uint _time);\n    event PythiaSuspended(address _pythia, address _addBy, uint _time);\n    event PriceUpdated(\n        string _ticker,\n        uint _price,\n        address _pythia,\n        uint _time\n    );\n    event PrinceChanged(uint _time);\n    modifier onlyOwner() {\n        require(\n            msg.sender == LibDiamond.contractOwner(),\n            \"Access denied, Only owner is allowed!\"\n        );\n        _;\n    }\n\n    modifier onlyPythia() {\n        require(s.pythia[msg.sender], \"Access denied. Only Pythia is allowed!\");\n        _;\n    }\n\n    // function updateTickerPrices(\n    //     uint256[] calldata _prices,\n    //     string[] calldata _tickers\n    // ) external onlyPythia {\n    //     require(\n    //         _prices.length == _tickers.length,\n    //         \"Prices and tickers must be of equal length\"\n    //     );\n    //     for (uint256 i; i < _prices.length; i++) {\n    //         s.ticker[this.converter(_tickers[i])] = _prices[i];\n    //         emit PriceUpdated(\n    //             _tickers[i],\n    //             _prices[i],\n    //             msg.sender,\n    //             block.timestamp\n    //         );\n    //     }\n    //     emit PrinceChanged(block.timestamp);\n    // }\n\n    // function isPythia(address _pythia) external view returns (bool) {\n    //     return s.pythia[_pythia];\n    // }\n\n    // function price(string memory _ticker) external view returns (uint) {\n    //     return s.ticker[this.converter(_ticker)];\n    // }\n\n    // function setEGCUSDTicker(string memory _ticker) external onlyOwner {\n    //     s.egcusd = this.converter(_ticker);\n    // }\n\n    function setNairaUSDTicker(string memory _ticker) external onlyOwner {\n        s.naira = this.converter(_ticker);\n    }\n\n    function getStakingAndBuyingTokenPrices()\n        external\n        view\n        returns (uint256, uint256)\n    {\n        return (s.ticker[s.naira], s.ticker[s.egcusd]);\n    }\n\n    // function setPythia(address _pythia) external onlyOwner {\n    //     s.pythia[_pythia] = true;\n    //     emit PythiaAdded(_pythia, msg.sender, block.timestamp);\n    // }\n\n    // function suspendPythia(address _pythia) external onlyOwner {\n    //     s.pythia[_pythia] = false;\n    //     emit PythiaSuspended(_pythia, msg.sender, block.timestamp);\n    // }\n\n    function converter(\n        string memory _source\n    ) external pure returns (bytes memory) {\n        return bytes(upper(_source));\n    }\n\n    function upper(string memory _base) internal pure returns (string memory) {\n        bytes memory _baseBytes = bytes(_base);\n        for (uint i = 0; i < _baseBytes.length; i++) {\n            _baseBytes[i] = _upper(_baseBytes[i]);\n        }\n        return string(_baseBytes);\n    }\n\n    function _upper(bytes1 _b1) private pure returns (bytes1) {\n        if (_b1 >= 0x61 && _b1 <= 0x7A) {\n            return bytes1(uint8(_b1) - 32);\n        }\n\n        return _b1;\n    }\n}\n"
			},
			"contracts/facets/AppStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nstruct AppStorage {\n    mapping(bytes => uint256) ticker;\n    mapping(address => bool) pythia;\n    mapping(address => address[]) myReferrals;\n    mapping(address => uint256) staffId;\n    address eusdAddr;\n    address egcAddr;\n    bytes egcusd;\n    mapping(address => bool) member;\n    mapping(uint256 => uint256) plan;\n    mapping(uint256 => uint256) stakingPlan;\n    mapping(address => uint256) expiryDate;\n    mapping(address => uint256) userTotalStake;\n    mapping(address => uint256) userTotalStakeUsd;\n    mapping(address => uint256) dailyRoyalty;\n    mapping(address => uint256) lockPeriod;\n    mapping(address => uint256) nextRoyaltyTakePeriod;\n    mapping(address => uint256) totalRoyaltyTaken;\n    mapping(address => mapping(bool => uint256)) userTotalSwap;\n    mapping(bool => uint256) totalSwap;\n    // needed for swap to work\n    address _priceOracle;\n    bytes _price;\n    // needed for swap to work\n\n    //Member ship\n    uint256 nextSpillIndex;\n    mapping(address => address) referredBy;\n    mapping(address => uint256) referralRewardBalance;\n    mapping(address => uint256) referralCount;\n    mapping(address => bool) alreadyMember;\n    uint256 referralBurnBalance;\n    mapping(address => bytes) referralLink;\n    mapping(bytes => address) referralAddress;\n    mapping(bytes => address) token_address;\n    mapping(bytes => uint) fee;\n    mapping(bytes => bool) isListed;\n    mapping(bytes => mapping(address => uint)) liquidity;\n    mapping(uint => mapping(uint => uint)) soldProductAmount;\n    mapping(uint => mapping(uint => address)) soldProductBuyer;\n    uint totalStake;\n    uint totalPenaltyStake;\n    uint totalUnStake;\n    uint initProductCount;\n    mapping(uint => mapping(address => uint)) userActivity;\n    mapping(address => uint) allUserActivity;\n    mapping(uint => uint) currentAllActivity;\n    uint allActivity;\n    uint rewardPeriod;\n    uint nextRewardPeriod;\n    mapping(uint => mapping(address => bool)) currentPerfomers;\n    uint totalRewardTokenRemaining;\n    uint totalRewardDistributed;\n    mapping(address => uint) userTotalRewardRecieved;\n    mapping(address => uint) lockedRewardForStaking;\n    uint stakingPlanForSixMonths;\n    mapping(uint256 => uint256) dealersPlan;\n    address _token_addres;\n    mapping(address => uint256) dealerExpiryDate;\n    mapping(address => bool) isADealer;\n    mapping(address => uint256) dealerPlan;\n    address dealerSubcriptionCollector;\n    mapping(address => uint256) referralDealerRewardBalance;\n    uint256 dealerSubcriptionCollectorBalance;\n    mapping(address => address) deallerReferredBy;\n    mapping(address => uint256) deallerReferralCount;\n    bytes naira;\n    uint256 totalProcurementAmount;\n    mapping(uint256 => uint256) yesVotes;\n    mapping(uint256 => uint256) noVotes;\n    mapping(uint256 => uint256) vottingPeriod;\n    mapping(address => mapping(uint256 => bool)) hasVoted;\n}\n"
			},
			"contracts/libraries/LibDiamond.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\npragma experimental ABIEncoderV2;\n\n/******************************************************************************\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\n/******************************************************************************/\nimport \"../interfaces/IDiamondCut.sol\";\n\nlibrary LibDiamond {\n    bytes32 constant DIAMOND_STORAGE_POSITION =\n        keccak256(\"diamond.standard.diamond.storage\");\n\n    struct FacetAddressAndSelectorPosition {\n        address facetAddress;\n        uint16 selectorPosition;\n    }\n\n    struct DiamondStorage {\n        // function selector => facet address and selector position in selectors array\n        mapping(bytes4 => FacetAddressAndSelectorPosition) facetAddressAndSelectorPosition;\n        bytes4[] selectors;\n        mapping(bytes4 => bool) supportedInterfaces;\n        // owner of the contract\n        address contractOwner;\n    }\n\n    function diamondStorage()\n        internal\n        pure\n        returns (DiamondStorage storage ds)\n    {\n        bytes32 position = DIAMOND_STORAGE_POSITION;\n        assembly {\n            ds.slot := position\n        }\n    }\n\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    function setContractOwner(address _newOwner) internal {\n        DiamondStorage storage ds = diamondStorage();\n        address previousOwner = ds.contractOwner;\n        ds.contractOwner = _newOwner;\n        emit OwnershipTransferred(previousOwner, _newOwner);\n    }\n\n    function contractOwner() internal view returns (address contractOwner_) {\n        contractOwner_ = diamondStorage().contractOwner;\n    }\n\n    function enforceIsContractOwner() internal view {\n        require(\n            msg.sender == diamondStorage().contractOwner,\n            \"LibDiamond: Must be contract owner\"\n        );\n    }\n\n    event DiamondCut(\n        IDiamondCut.FacetCut[] _diamondCut,\n        address _init,\n        bytes _calldata\n    );\n\n    // Internal function version of diamondCut\n    function diamondCut(\n        IDiamondCut.FacetCut[] memory _diamondCut,\n        address _init,\n        bytes memory _calldata\n    ) internal {\n        for (\n            uint256 facetIndex;\n            facetIndex < _diamondCut.length;\n            facetIndex++\n        ) {\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\n            if (action == IDiamondCut.FacetCutAction.Add) {\n                addFunctions(\n                    _diamondCut[facetIndex].facetAddress,\n                    _diamondCut[facetIndex].functionSelectors\n                );\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\n                replaceFunctions(\n                    _diamondCut[facetIndex].facetAddress,\n                    _diamondCut[facetIndex].functionSelectors\n                );\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\n                removeFunctions(\n                    _diamondCut[facetIndex].facetAddress,\n                    _diamondCut[facetIndex].functionSelectors\n                );\n            } else {\n                revert(\"LibDiamondCut: Incorrect FacetCutAction\");\n            }\n        }\n        emit DiamondCut(_diamondCut, _init, _calldata);\n        initializeDiamondCut(_init, _calldata);\n    }\n\n    function addFunctions(\n        address _facetAddress,\n        bytes4[] memory _functionSelectors\n    ) internal {\n        require(\n            _functionSelectors.length > 0,\n            \"LibDiamondCut: No selectors in facet to cut\"\n        );\n        DiamondStorage storage ds = diamondStorage();\n        uint16 selectorCount = uint16(ds.selectors.length);\n        require(\n            _facetAddress != address(0),\n            \"LibDiamondCut: Add facet can't be address(0)\"\n        );\n        enforceHasContractCode(\n            _facetAddress,\n            \"LibDiamondCut: Add facet has no code\"\n        );\n        for (\n            uint256 selectorIndex;\n            selectorIndex < _functionSelectors.length;\n            selectorIndex++\n        ) {\n            bytes4 selector = _functionSelectors[selectorIndex];\n            address oldFacetAddress = ds\n                .facetAddressAndSelectorPosition[selector]\n                .facetAddress;\n            require(\n                oldFacetAddress == address(0),\n                \"LibDiamondCut: Can't add function that already exists\"\n            );\n            ds.facetAddressAndSelectorPosition[\n                    selector\n                ] = FacetAddressAndSelectorPosition(\n                _facetAddress,\n                selectorCount\n            );\n            ds.selectors.push(selector);\n            selectorCount++;\n        }\n    }\n\n    function replaceFunctions(\n        address _facetAddress,\n        bytes4[] memory _functionSelectors\n    ) internal {\n        require(\n            _functionSelectors.length > 0,\n            \"LibDiamondCut: No selectors in facet to cut\"\n        );\n        DiamondStorage storage ds = diamondStorage();\n        require(\n            _facetAddress != address(0),\n            \"LibDiamondCut: Replace facet can't be address(0)\"\n        );\n        enforceHasContractCode(\n            _facetAddress,\n            \"LibDiamondCut: Replace facet has no code\"\n        );\n        for (\n            uint256 selectorIndex;\n            selectorIndex < _functionSelectors.length;\n            selectorIndex++\n        ) {\n            bytes4 selector = _functionSelectors[selectorIndex];\n            address oldFacetAddress = ds\n                .facetAddressAndSelectorPosition[selector]\n                .facetAddress;\n            // can't replace immutable functions -- functions defined directly in the diamond\n            require(\n                oldFacetAddress != address(this),\n                \"LibDiamondCut: Can't replace immutable function\"\n            );\n            require(\n                oldFacetAddress != _facetAddress,\n                \"LibDiamondCut: Can't replace function with same function\"\n            );\n            require(\n                oldFacetAddress != address(0),\n                \"LibDiamondCut: Can't replace function that doesn't exist\"\n            );\n            // replace old facet address\n            ds\n                .facetAddressAndSelectorPosition[selector]\n                .facetAddress = _facetAddress;\n        }\n    }\n\n    function removeFunctions(\n        address _facetAddress,\n        bytes4[] memory _functionSelectors\n    ) internal {\n        require(\n            _functionSelectors.length > 0,\n            \"LibDiamondCut: No selectors in facet to cut\"\n        );\n        DiamondStorage storage ds = diamondStorage();\n        uint256 selectorCount = ds.selectors.length;\n        require(\n            _facetAddress == address(0),\n            \"LibDiamondCut: Remove facet address must be address(0)\"\n        );\n        for (\n            uint256 selectorIndex;\n            selectorIndex < _functionSelectors.length;\n            selectorIndex++\n        ) {\n            bytes4 selector = _functionSelectors[selectorIndex];\n            FacetAddressAndSelectorPosition\n                memory oldFacetAddressAndSelectorPosition = ds\n                    .facetAddressAndSelectorPosition[selector];\n            require(\n                oldFacetAddressAndSelectorPosition.facetAddress != address(0),\n                \"LibDiamondCut: Can't remove function that doesn't exist\"\n            );\n            // can't remove immutable functions -- functions defined directly in the diamond\n            require(\n                oldFacetAddressAndSelectorPosition.facetAddress !=\n                    address(this),\n                \"LibDiamondCut: Can't remove immutable function.\"\n            );\n            // replace selector with last selector\n            selectorCount--;\n            if (\n                oldFacetAddressAndSelectorPosition.selectorPosition !=\n                selectorCount\n            ) {\n                bytes4 lastSelector = ds.selectors[selectorCount];\n                ds.selectors[\n                    oldFacetAddressAndSelectorPosition.selectorPosition\n                ] = lastSelector;\n                ds\n                    .facetAddressAndSelectorPosition[lastSelector]\n                    .selectorPosition = oldFacetAddressAndSelectorPosition\n                    .selectorPosition;\n            }\n            // delete last selector\n            ds.selectors.pop();\n            delete ds.facetAddressAndSelectorPosition[selector];\n        }\n    }\n\n    function initializeDiamondCut(address _init, bytes memory _calldata)\n        internal\n    {\n        if (_init == address(0)) {\n            require(\n                _calldata.length == 0,\n                \"LibDiamondCut: _init is address(0) but_calldata is not empty\"\n            );\n        } else {\n            require(\n                _calldata.length > 0,\n                \"LibDiamondCut: _calldata is empty but _init is not address(0)\"\n            );\n            if (_init != address(this)) {\n                enforceHasContractCode(\n                    _init,\n                    \"LibDiamondCut: _init address has no code\"\n                );\n            }\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\n            if (!success) {\n                if (error.length > 0) {\n                    // bubble up the error\n                    revert(string(error));\n                } else {\n                    revert(\"LibDiamondCut: _init function reverted\");\n                }\n            }\n        }\n    }\n\n    function enforceHasContractCode(\n        address _contract,\n        string memory _errorMessage\n    ) internal view {\n        uint256 contractSize;\n        assembly {\n            contractSize := extcodesize(_contract)\n        }\n        require(contractSize > 0, _errorMessage);\n    }\n}\n"
			},
			"contracts/interfaces/IDiamondCut.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\npragma experimental ABIEncoderV2;\n\n/******************************************************************************\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\n/******************************************************************************/\n\ninterface IDiamondCut {\n    enum FacetCutAction {\n        Add,\n        Replace,\n        Remove\n    }\n    // Add=0, Replace=1, Remove=2\n\n    struct FacetCut {\n        address facetAddress;\n        FacetCutAction action;\n        bytes4[] functionSelectors;\n    }\n\n    /// @notice Add/replace/remove any number of functions and optionally execute\n    ///         a function with delegatecall\n    /// @param _diamondCut Contains the facet addresses and function selectors\n    /// @param _init The address of the contract or facet to execute _calldata\n    /// @param _calldata A function call, including function selector and arguments\n    ///                  _calldata is executed with delegatecall on _init\n    function diamondCut(\n        FacetCut[] calldata _diamondCut,\n        address _init,\n        bytes calldata _calldata\n    ) external;\n\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/facets/PriceOracleFacet.sol": {
				"PriceOracleFacet": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_ticker",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_pythia",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_time",
									"type": "uint256"
								}
							],
							"name": "PriceUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_time",
									"type": "uint256"
								}
							],
							"name": "PrinceChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_pythia",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_addBy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_time",
									"type": "uint256"
								}
							],
							"name": "PythiaAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_pythia",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_addBy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_time",
									"type": "uint256"
								}
							],
							"name": "PythiaSuspended",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_source",
									"type": "string"
								}
							],
							"name": "converter",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStakingAndBuyingTokenPrices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_ticker",
									"type": "string"
								}
							],
							"name": "setNairaUSDTicker",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/facets/PriceOracleFacet.sol\":165:3165  contract PriceOracleFacet {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/facets/PriceOracleFacet.sol\":165:3165  contract PriceOracleFacet {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x267561c8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x94a72f1c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfc3a49e0\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/facets/PriceOracleFacet.sol\":1881:2000  function setNairaUSDTicker(string memory _ticker) external onlyOwner {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/facets/PriceOracleFacet.sol\":2551:2689  function converter(... */\n    tag_4:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_11:\n      tag_12\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/facets/PriceOracleFacet.sol\":2006:2180  function getStakingAndBuyingTokenPrices()... */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap3\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/facets/PriceOracleFacet.sol\":1881:2000  function setNairaUSDTicker(string memory _ticker) external onlyOwner {... */\n    tag_9:\n        /* \"contracts/facets/PriceOracleFacet.sol\":588:614  LibDiamond.contractOwner() */\n      tag_20\n        /* \"contracts/facets/PriceOracleFacet.sol\":588:612  LibDiamond.contractOwner */\n      tag_21\n        /* \"contracts/facets/PriceOracleFacet.sol\":588:614  LibDiamond.contractOwner() */\n      jump\t// in\n    tag_20:\n        /* \"contracts/facets/PriceOracleFacet.sol\":574:614  msg.sender == LibDiamond.contractOwner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/facets/PriceOracleFacet.sol\":574:584  msg.sender */\n      caller\n        /* \"contracts/facets/PriceOracleFacet.sol\":574:614  msg.sender == LibDiamond.contractOwner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/facets/PriceOracleFacet.sol\":553:677  require(... */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"contracts/facets/PriceOracleFacet.sol\":1970:1974  this */\n      address\n        /* \"contracts/facets/PriceOracleFacet.sol\":1970:1984  this.converter */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x94a72f1c\n        /* \"contracts/facets/PriceOracleFacet.sol\":1985:1992  _ticker */\n      dup3\n        /* \"contracts/facets/PriceOracleFacet.sol\":1970:1993  this.converter(_ticker) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_29:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"contracts/facets/PriceOracleFacet.sol\":1960:1961  s */\n      0x00\n        /* \"contracts/facets/PriceOracleFacet.sol\":1960:1967  s.naira */\n      0x3d\n      add\n        /* \"contracts/facets/PriceOracleFacet.sol\":1960:1993  s.naira = this.converter(_ticker) */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_32\n      swap3\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      pop\n        /* \"contracts/facets/PriceOracleFacet.sol\":1881:2000  function setNairaUSDTicker(string memory _ticker) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/facets/PriceOracleFacet.sol\":2551:2689  function converter(... */\n    tag_12:\n        /* \"contracts/facets/PriceOracleFacet.sol\":2630:2642  bytes memory */\n      0x60\n        /* \"contracts/facets/PriceOracleFacet.sol\":2667:2681  upper(_source) */\n      tag_35\n        /* \"contracts/facets/PriceOracleFacet.sol\":2673:2680  _source */\n      dup3\n        /* \"contracts/facets/PriceOracleFacet.sol\":2667:2672  upper */\n      tag_36\n        /* \"contracts/facets/PriceOracleFacet.sol\":2667:2681  upper(_source) */\n      jump\t// in\n    tag_35:\n        /* \"contracts/facets/PriceOracleFacet.sol\":2654:2682  return bytes(upper(_source)) */\n      swap1\n      pop\n        /* \"contracts/facets/PriceOracleFacet.sol\":2551:2689  function converter(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/facets/PriceOracleFacet.sol\":2006:2180  function getStakingAndBuyingTokenPrices()... */\n    tag_16:\n        /* \"contracts/facets/PriceOracleFacet.sol\":2095:2102  uint256 */\n      0x00\n        /* \"contracts/facets/PriceOracleFacet.sol\":2104:2111  uint256 */\n      dup1\n        /* \"contracts/facets/PriceOracleFacet.sol\":2135:2136  s */\n      0x00\n        /* \"contracts/facets/PriceOracleFacet.sol\":2135:2143  s.ticker */\n      dup1\n      add\n        /* \"contracts/facets/PriceOracleFacet.sol\":2144:2145  s */\n      0x00\n        /* \"contracts/facets/PriceOracleFacet.sol\":2144:2151  s.naira */\n      0x3d\n      add\n        /* \"contracts/facets/PriceOracleFacet.sol\":2135:2152  s.ticker[s.naira] */\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/facets/PriceOracleFacet.sol\":2154:2155  s */\n      0x00\n        /* \"contracts/facets/PriceOracleFacet.sol\":2154:2162  s.ticker */\n      dup1\n      add\n        /* \"contracts/facets/PriceOracleFacet.sol\":2163:2164  s */\n      0x00\n        /* \"contracts/facets/PriceOracleFacet.sol\":2163:2171  s.egcusd */\n      0x06\n      add\n        /* \"contracts/facets/PriceOracleFacet.sol\":2154:2172  s.ticker[s.egcusd] */\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_40:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      sload\n        /* \"contracts/facets/PriceOracleFacet.sol\":2127:2173  return (s.ticker[s.naira], s.ticker[s.egcusd]) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/facets/PriceOracleFacet.sol\":2006:2180  function getStakingAndBuyingTokenPrices()... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"contracts/libraries/LibDiamond.sol\":1669:1805  function contractOwner() internal view returns (address contractOwner_) {... */\n    tag_21:\n        /* \"contracts/libraries/LibDiamond.sol\":1717:1739  address contractOwner_ */\n      0x00\n        /* \"contracts/libraries/LibDiamond.sol\":1768:1784  diamondStorage() */\n      tag_42\n        /* \"contracts/libraries/LibDiamond.sol\":1768:1782  diamondStorage */\n      tag_43\n        /* \"contracts/libraries/LibDiamond.sol\":1768:1784  diamondStorage() */\n      jump\t// in\n    tag_42:\n        /* \"contracts/libraries/LibDiamond.sol\":1768:1798  diamondStorage().contractOwner */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/LibDiamond.sol\":1751:1798  contractOwner_ = diamondStorage().contractOwner */\n      swap1\n      pop\n        /* \"contracts/libraries/LibDiamond.sol\":1669:1805  function contractOwner() internal view returns (address contractOwner_) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/facets/PriceOracleFacet.sol\":2695:2975  function upper(string memory _base) internal pure returns (string memory) {... */\n    tag_36:\n        /* \"contracts/facets/PriceOracleFacet.sol\":2754:2767  string memory */\n      0x60\n        /* \"contracts/facets/PriceOracleFacet.sol\":2779:2802  bytes memory _baseBytes */\n      0x00\n        /* \"contracts/facets/PriceOracleFacet.sol\":2811:2816  _base */\n      dup3\n        /* \"contracts/facets/PriceOracleFacet.sol\":2779:2817  bytes memory _baseBytes = bytes(_base) */\n      swap1\n      pop\n        /* \"contracts/facets/PriceOracleFacet.sol\":2832:2838  uint i */\n      0x00\n        /* \"contracts/facets/PriceOracleFacet.sol\":2827:2934  for (uint i = 0; i < _baseBytes.length; i++) {... */\n    tag_45:\n        /* \"contracts/facets/PriceOracleFacet.sol\":2848:2858  _baseBytes */\n      dup2\n        /* \"contracts/facets/PriceOracleFacet.sol\":2848:2865  _baseBytes.length */\n      mload\n        /* \"contracts/facets/PriceOracleFacet.sol\":2844:2845  i */\n      dup2\n        /* \"contracts/facets/PriceOracleFacet.sol\":2844:2865  i < _baseBytes.length */\n      lt\n        /* \"contracts/facets/PriceOracleFacet.sol\":2827:2934  for (uint i = 0; i < _baseBytes.length; i++) {... */\n      iszero\n      tag_46\n      jumpi\n        /* \"contracts/facets/PriceOracleFacet.sol\":2902:2923  _upper(_baseBytes[i]) */\n      tag_48\n        /* \"contracts/facets/PriceOracleFacet.sol\":2909:2919  _baseBytes */\n      dup3\n        /* \"contracts/facets/PriceOracleFacet.sol\":2920:2921  i */\n      dup3\n        /* \"contracts/facets/PriceOracleFacet.sol\":2909:2922  _baseBytes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_49\n      jumpi\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n    tag_49:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/facets/PriceOracleFacet.sol\":2902:2908  _upper */\n      tag_52\n        /* \"contracts/facets/PriceOracleFacet.sol\":2902:2923  _upper(_baseBytes[i]) */\n      jump\t// in\n    tag_48:\n        /* \"contracts/facets/PriceOracleFacet.sol\":2886:2896  _baseBytes */\n      dup3\n        /* \"contracts/facets/PriceOracleFacet.sol\":2897:2898  i */\n      dup3\n        /* \"contracts/facets/PriceOracleFacet.sol\":2886:2899  _baseBytes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_53\n      jumpi\n      tag_54\n      tag_51\n      jump\t// in\n    tag_54:\n    tag_53:\n      0x20\n      add\n      add\n        /* \"contracts/facets/PriceOracleFacet.sol\":2886:2923  _baseBytes[i] = _upper(_baseBytes[i]) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/facets/PriceOracleFacet.sol\":2867:2870  i++ */\n      dup1\n      dup1\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      swap2\n      pop\n      pop\n        /* \"contracts/facets/PriceOracleFacet.sol\":2827:2934  for (uint i = 0; i < _baseBytes.length; i++) {... */\n      jump(tag_45)\n    tag_46:\n      pop\n        /* \"contracts/facets/PriceOracleFacet.sol\":2957:2967  _baseBytes */\n      dup1\n        /* \"contracts/facets/PriceOracleFacet.sol\":2943:2968  return string(_baseBytes) */\n      swap2\n      pop\n      pop\n        /* \"contracts/facets/PriceOracleFacet.sol\":2695:2975  function upper(string memory _base) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/libraries/LibDiamond.sol\":1056:1281  function diamondStorage()... */\n    tag_43:\n        /* \"contracts/libraries/LibDiamond.sol\":1129:1154  DiamondStorage storage ds */\n      0x00\n        /* \"contracts/libraries/LibDiamond.sol\":1170:1186  bytes32 position */\n      dup1\n        /* \"contracts/libraries/LibDiamond.sol\":530:575  keccak256(\"diamond.standard.diamond.storage\") */\n      0xc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c\n        /* \"contracts/libraries/LibDiamond.sol\":1170:1213  bytes32 position = DIAMOND_STORAGE_POSITION */\n      swap1\n      pop\n        /* \"contracts/libraries/LibDiamond.sol\":1257:1265  position */\n      dup1\n        /* \"contracts/libraries/LibDiamond.sol\":1246:1265  ds.slot := position */\n      swap2\n      pop\n        /* \"contracts/libraries/LibDiamond.sol\":1232:1275  {... */\n      pop\n        /* \"contracts/libraries/LibDiamond.sol\":1056:1281  function diamondStorage()... */\n      swap1\n      jump\t// out\n        /* \"contracts/facets/PriceOracleFacet.sol\":2981:3163  function _upper(bytes1 _b1) private pure returns (bytes1) {... */\n    tag_52:\n        /* \"contracts/facets/PriceOracleFacet.sol\":3031:3037  bytes1 */\n      0x00\n        /* \"contracts/facets/PriceOracleFacet.sol\":3060:3064  0x61 */\n      0x61\n        /* \"contracts/facets/PriceOracleFacet.sol\":3053:3064  _b1 >= 0x61 */\n      0xf8\n      shl\n        /* \"contracts/facets/PriceOracleFacet.sol\":3053:3056  _b1 */\n      dup3\n        /* \"contracts/facets/PriceOracleFacet.sol\":3053:3064  _b1 >= 0x61 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      lt\n      iszero\n        /* \"contracts/facets/PriceOracleFacet.sol\":3053:3079  _b1 >= 0x61 && _b1 <= 0x7A */\n      dup1\n      iszero\n      tag_59\n      jumpi\n      pop\n        /* \"contracts/facets/PriceOracleFacet.sol\":3075:3079  0x7A */\n      0x7a\n        /* \"contracts/facets/PriceOracleFacet.sol\":3068:3079  _b1 <= 0x7A */\n      0xf8\n      shl\n        /* \"contracts/facets/PriceOracleFacet.sol\":3068:3071  _b1 */\n      dup3\n        /* \"contracts/facets/PriceOracleFacet.sol\":3068:3079  _b1 <= 0x7A */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      gt\n      iszero\n        /* \"contracts/facets/PriceOracleFacet.sol\":3053:3079  _b1 >= 0x61 && _b1 <= 0x7A */\n    tag_59:\n        /* \"contracts/facets/PriceOracleFacet.sol\":3049:3136  if (_b1 >= 0x61 && _b1 <= 0x7A) {... */\n      iszero\n      tag_60\n      jumpi\n        /* \"contracts/facets/PriceOracleFacet.sol\":3122:3124  32 */\n      0x20\n        /* \"contracts/facets/PriceOracleFacet.sol\":3115:3118  _b1 */\n      dup3\n        /* \"contracts/facets/PriceOracleFacet.sol\":3109:3119  uint8(_b1) */\n      0xf8\n      shr\n        /* \"contracts/facets/PriceOracleFacet.sol\":3109:3124  uint8(_b1) - 32 */\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"contracts/facets/PriceOracleFacet.sol\":3102:3125  bytes1(uint8(_b1) - 32) */\n      0xf8\n      shl\n        /* \"contracts/facets/PriceOracleFacet.sol\":3095:3125  return bytes1(uint8(_b1) - 32) */\n      swap1\n      pop\n      jump(tag_58)\n        /* \"contracts/facets/PriceOracleFacet.sol\":3049:3136  if (_b1 >= 0x61 && _b1 <= 0x7A) {... */\n    tag_60:\n        /* \"contracts/facets/PriceOracleFacet.sol\":3153:3156  _b1 */\n      dup2\n        /* \"contracts/facets/PriceOracleFacet.sol\":3146:3156  return _b1 */\n      swap1\n      pop\n        /* \"contracts/facets/PriceOracleFacet.sol\":2981:3163  function _upper(bytes1 _b1) private pure returns (bytes1) {... */\n    tag_58:\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_33:\n      dup3\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_66\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_65)\n    tag_66:\n      dup3\n      0x1f\n      lt\n      tag_67\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_65)\n    tag_67:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_65\n      jumpi\n      swap2\n      dup3\n      add\n    tag_68:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_69\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_68)\n    tag_69:\n    tag_65:\n      pop\n      swap1\n      pop\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      pop\n      swap1\n      jump\t// out\n    tag_71:\n    tag_72:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_72)\n    tag_73:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_74:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_75:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_76:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_77:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_78:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      dup1\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:682   */\n    tag_79:\n        /* \"#utility.yul\":621:627   */\n      0x00\n        /* \"#utility.yul\":672:674   */\n      0x1f\n        /* \"#utility.yul\":668:675   */\n      not\n        /* \"#utility.yul\":663:665   */\n      0x1f\n        /* \"#utility.yul\":656:661   */\n      dup4\n        /* \"#utility.yul\":652:666   */\n      add\n        /* \"#utility.yul\":648:676   */\n      and\n        /* \"#utility.yul\":638:676   */\n      swap1\n      pop\n        /* \"#utility.yul\":580:682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":688:868   */\n    tag_80:\n        /* \"#utility.yul\":736:813   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":733:734   */\n      0x00\n        /* \"#utility.yul\":726:814   */\n      mstore\n        /* \"#utility.yul\":833:837   */\n      0x41\n        /* \"#utility.yul\":830:831   */\n      0x04\n        /* \"#utility.yul\":823:838   */\n      mstore\n        /* \"#utility.yul\":857:861   */\n      0x24\n        /* \"#utility.yul\":854:855   */\n      0x00\n        /* \"#utility.yul\":847:862   */\n      revert\n        /* \"#utility.yul\":874:1155   */\n    tag_81:\n        /* \"#utility.yul\":957:984   */\n      tag_116\n        /* \"#utility.yul\":979:983   */\n      dup3\n        /* \"#utility.yul\":957:984   */\n      tag_79\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":949:955   */\n      dup2\n        /* \"#utility.yul\":945:985   */\n      add\n        /* \"#utility.yul\":1087:1093   */\n      dup2\n        /* \"#utility.yul\":1075:1085   */\n      dup2\n        /* \"#utility.yul\":1072:1094   */\n      lt\n        /* \"#utility.yul\":1051:1069   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1039:1049   */\n      dup3\n        /* \"#utility.yul\":1036:1070   */\n      gt\n        /* \"#utility.yul\":1033:1095   */\n      or\n        /* \"#utility.yul\":1030:1118   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":1098:1116   */\n      tag_118\n      tag_80\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1030:1118   */\n    tag_117:\n        /* \"#utility.yul\":1138:1148   */\n      dup1\n        /* \"#utility.yul\":1134:1136   */\n      0x40\n        /* \"#utility.yul\":1127:1149   */\n      mstore\n        /* \"#utility.yul\":917:1155   */\n      pop\n        /* \"#utility.yul\":874:1155   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1161:1290   */\n    tag_82:\n        /* \"#utility.yul\":1195:1201   */\n      0x00\n        /* \"#utility.yul\":1222:1242   */\n      tag_120\n      tag_74\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1212:1242   */\n      swap1\n      pop\n        /* \"#utility.yul\":1251:1284   */\n      tag_121\n        /* \"#utility.yul\":1279:1283   */\n      dup3\n        /* \"#utility.yul\":1271:1277   */\n      dup3\n        /* \"#utility.yul\":1251:1284   */\n      tag_81\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":1161:1290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1296:1604   */\n    tag_83:\n        /* \"#utility.yul\":1358:1362   */\n      0x00\n        /* \"#utility.yul\":1448:1466   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1440:1446   */\n      dup3\n        /* \"#utility.yul\":1437:1467   */\n      gt\n        /* \"#utility.yul\":1434:1490   */\n      iszero\n      tag_123\n      jumpi\n        /* \"#utility.yul\":1470:1488   */\n      tag_124\n      tag_80\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1434:1490   */\n    tag_123:\n        /* \"#utility.yul\":1508:1537   */\n      tag_125\n        /* \"#utility.yul\":1530:1536   */\n      dup3\n        /* \"#utility.yul\":1508:1537   */\n      tag_79\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":1500:1537   */\n      swap1\n      pop\n        /* \"#utility.yul\":1592:1596   */\n      0x20\n        /* \"#utility.yul\":1586:1590   */\n      dup2\n        /* \"#utility.yul\":1582:1597   */\n      add\n        /* \"#utility.yul\":1574:1597   */\n      swap1\n      pop\n        /* \"#utility.yul\":1296:1604   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1764   */\n    tag_84:\n        /* \"#utility.yul\":1694:1700   */\n      dup3\n        /* \"#utility.yul\":1689:1692   */\n      dup2\n        /* \"#utility.yul\":1684:1687   */\n      dup4\n        /* \"#utility.yul\":1671:1701   */\n      calldatacopy\n        /* \"#utility.yul\":1756:1757   */\n      0x00\n        /* \"#utility.yul\":1747:1753   */\n      dup4\n        /* \"#utility.yul\":1742:1745   */\n      dup4\n        /* \"#utility.yul\":1738:1754   */\n      add\n        /* \"#utility.yul\":1731:1758   */\n      mstore\n        /* \"#utility.yul\":1610:1764   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1770:2182   */\n    tag_85:\n        /* \"#utility.yul\":1848:1853   */\n      0x00\n        /* \"#utility.yul\":1873:1939   */\n      tag_128\n        /* \"#utility.yul\":1889:1938   */\n      tag_129\n        /* \"#utility.yul\":1931:1937   */\n      dup5\n        /* \"#utility.yul\":1889:1938   */\n      tag_83\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":1873:1939   */\n      tag_82\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1864:1939   */\n      swap1\n      pop\n        /* \"#utility.yul\":1962:1968   */\n      dup3\n        /* \"#utility.yul\":1955:1960   */\n      dup2\n        /* \"#utility.yul\":1948:1969   */\n      mstore\n        /* \"#utility.yul\":2000:2004   */\n      0x20\n        /* \"#utility.yul\":1993:1998   */\n      dup2\n        /* \"#utility.yul\":1989:2005   */\n      add\n        /* \"#utility.yul\":2038:2041   */\n      dup5\n        /* \"#utility.yul\":2029:2035   */\n      dup5\n        /* \"#utility.yul\":2024:2027   */\n      dup5\n        /* \"#utility.yul\":2020:2036   */\n      add\n        /* \"#utility.yul\":2017:2042   */\n      gt\n        /* \"#utility.yul\":2014:2126   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":2045:2124   */\n      tag_131\n      tag_78\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2014:2126   */\n    tag_130:\n        /* \"#utility.yul\":2135:2176   */\n      tag_132\n        /* \"#utility.yul\":2169:2175   */\n      dup5\n        /* \"#utility.yul\":2164:2167   */\n      dup3\n        /* \"#utility.yul\":2159:2162   */\n      dup6\n        /* \"#utility.yul\":2135:2176   */\n      tag_84\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":1854:2182   */\n      pop\n        /* \"#utility.yul\":1770:2182   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2202:2542   */\n    tag_86:\n        /* \"#utility.yul\":2258:2263   */\n      0x00\n        /* \"#utility.yul\":2307:2310   */\n      dup3\n        /* \"#utility.yul\":2300:2304   */\n      0x1f\n        /* \"#utility.yul\":2292:2298   */\n      dup4\n        /* \"#utility.yul\":2288:2305   */\n      add\n        /* \"#utility.yul\":2284:2311   */\n      slt\n        /* \"#utility.yul\":2274:2396   */\n      tag_134\n      jumpi\n        /* \"#utility.yul\":2315:2394   */\n      tag_135\n      tag_77\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":2274:2396   */\n    tag_134:\n        /* \"#utility.yul\":2432:2438   */\n      dup2\n        /* \"#utility.yul\":2419:2439   */\n      calldataload\n        /* \"#utility.yul\":2457:2536   */\n      tag_136\n        /* \"#utility.yul\":2532:2535   */\n      dup5\n        /* \"#utility.yul\":2524:2530   */\n      dup3\n        /* \"#utility.yul\":2517:2521   */\n      0x20\n        /* \"#utility.yul\":2509:2515   */\n      dup7\n        /* \"#utility.yul\":2505:2522   */\n      add\n        /* \"#utility.yul\":2457:2536   */\n      tag_85\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2448:2536   */\n      swap2\n      pop\n        /* \"#utility.yul\":2264:2542   */\n      pop\n        /* \"#utility.yul\":2202:2542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2548:3057   */\n    tag_8:\n        /* \"#utility.yul\":2617:2623   */\n      0x00\n        /* \"#utility.yul\":2666:2668   */\n      0x20\n        /* \"#utility.yul\":2654:2663   */\n      dup3\n        /* \"#utility.yul\":2645:2652   */\n      dup5\n        /* \"#utility.yul\":2641:2664   */\n      sub\n        /* \"#utility.yul\":2637:2669   */\n      slt\n        /* \"#utility.yul\":2634:2753   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":2672:2751   */\n      tag_139\n      tag_75\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2634:2753   */\n    tag_138:\n        /* \"#utility.yul\":2820:2821   */\n      0x00\n        /* \"#utility.yul\":2809:2818   */\n      dup3\n        /* \"#utility.yul\":2805:2822   */\n      add\n        /* \"#utility.yul\":2792:2823   */\n      calldataload\n        /* \"#utility.yul\":2850:2868   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2842:2848   */\n      dup2\n        /* \"#utility.yul\":2839:2869   */\n      gt\n        /* \"#utility.yul\":2836:2953   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":2872:2951   */\n      tag_141\n      tag_76\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":2836:2953   */\n    tag_140:\n        /* \"#utility.yul\":2977:3040   */\n      tag_142\n        /* \"#utility.yul\":3032:3039   */\n      dup5\n        /* \"#utility.yul\":3023:3029   */\n      dup3\n        /* \"#utility.yul\":3012:3021   */\n      dup6\n        /* \"#utility.yul\":3008:3030   */\n      add\n        /* \"#utility.yul\":2977:3040   */\n      tag_86\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":2967:3040   */\n      swap2\n      pop\n        /* \"#utility.yul\":2763:3050   */\n      pop\n        /* \"#utility.yul\":2548:3057   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3063:3161   */\n    tag_87:\n        /* \"#utility.yul\":3114:3120   */\n      0x00\n        /* \"#utility.yul\":3148:3153   */\n      dup2\n        /* \"#utility.yul\":3142:3154   */\n      mload\n        /* \"#utility.yul\":3132:3154   */\n      swap1\n      pop\n        /* \"#utility.yul\":3063:3161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3167:3335   */\n    tag_88:\n        /* \"#utility.yul\":3250:3261   */\n      0x00\n        /* \"#utility.yul\":3284:3290   */\n      dup3\n        /* \"#utility.yul\":3279:3282   */\n      dup3\n        /* \"#utility.yul\":3272:3291   */\n      mstore\n        /* \"#utility.yul\":3324:3328   */\n      0x20\n        /* \"#utility.yul\":3319:3322   */\n      dup3\n        /* \"#utility.yul\":3315:3329   */\n      add\n        /* \"#utility.yul\":3300:3329   */\n      swap1\n      pop\n        /* \"#utility.yul\":3167:3335   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3341:3648   */\n    tag_89:\n        /* \"#utility.yul\":3409:3410   */\n      0x00\n        /* \"#utility.yul\":3419:3532   */\n    tag_146:\n        /* \"#utility.yul\":3433:3439   */\n      dup4\n        /* \"#utility.yul\":3430:3431   */\n      dup2\n        /* \"#utility.yul\":3427:3440   */\n      lt\n        /* \"#utility.yul\":3419:3532   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":3518:3519   */\n      dup1\n        /* \"#utility.yul\":3513:3516   */\n      dup3\n        /* \"#utility.yul\":3509:3520   */\n      add\n        /* \"#utility.yul\":3503:3521   */\n      mload\n        /* \"#utility.yul\":3499:3500   */\n      dup2\n        /* \"#utility.yul\":3494:3497   */\n      dup5\n        /* \"#utility.yul\":3490:3501   */\n      add\n        /* \"#utility.yul\":3483:3522   */\n      mstore\n        /* \"#utility.yul\":3455:3457   */\n      0x20\n        /* \"#utility.yul\":3452:3453   */\n      dup2\n        /* \"#utility.yul\":3448:3458   */\n      add\n        /* \"#utility.yul\":3443:3458   */\n      swap1\n      pop\n        /* \"#utility.yul\":3419:3532   */\n      jump(tag_146)\n    tag_148:\n        /* \"#utility.yul\":3550:3556   */\n      dup4\n        /* \"#utility.yul\":3547:3548   */\n      dup2\n        /* \"#utility.yul\":3544:3557   */\n      gt\n        /* \"#utility.yul\":3541:3642   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":3630:3631   */\n      0x00\n        /* \"#utility.yul\":3621:3627   */\n      dup5\n        /* \"#utility.yul\":3616:3619   */\n      dup5\n        /* \"#utility.yul\":3612:3628   */\n      add\n        /* \"#utility.yul\":3605:3632   */\n      mstore\n        /* \"#utility.yul\":3541:3642   */\n    tag_149:\n        /* \"#utility.yul\":3390:3648   */\n      pop\n        /* \"#utility.yul\":3341:3648   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3654:4014   */\n    tag_90:\n        /* \"#utility.yul\":3740:3743   */\n      0x00\n        /* \"#utility.yul\":3768:3806   */\n      tag_151\n        /* \"#utility.yul\":3800:3805   */\n      dup3\n        /* \"#utility.yul\":3768:3806   */\n      tag_87\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":3822:3892   */\n      tag_152\n        /* \"#utility.yul\":3885:3891   */\n      dup2\n        /* \"#utility.yul\":3880:3883   */\n      dup6\n        /* \"#utility.yul\":3822:3892   */\n      tag_88\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":3815:3892   */\n      swap4\n      pop\n        /* \"#utility.yul\":3901:3953   */\n      tag_153\n        /* \"#utility.yul\":3946:3952   */\n      dup2\n        /* \"#utility.yul\":3941:3944   */\n      dup6\n        /* \"#utility.yul\":3934:3938   */\n      0x20\n        /* \"#utility.yul\":3927:3932   */\n      dup7\n        /* \"#utility.yul\":3923:3939   */\n      add\n        /* \"#utility.yul\":3901:3953   */\n      tag_89\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":3978:4007   */\n      tag_154\n        /* \"#utility.yul\":4000:4006   */\n      dup2\n        /* \"#utility.yul\":3978:4007   */\n      tag_79\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":3973:3976   */\n      dup5\n        /* \"#utility.yul\":3969:4008   */\n      add\n        /* \"#utility.yul\":3962:4008   */\n      swap2\n      pop\n        /* \"#utility.yul\":3744:4014   */\n      pop\n        /* \"#utility.yul\":3654:4014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4020:4329   */\n    tag_14:\n        /* \"#utility.yul\":4131:4135   */\n      0x00\n        /* \"#utility.yul\":4169:4171   */\n      0x20\n        /* \"#utility.yul\":4158:4167   */\n      dup3\n        /* \"#utility.yul\":4154:4172   */\n      add\n        /* \"#utility.yul\":4146:4172   */\n      swap1\n      pop\n        /* \"#utility.yul\":4218:4227   */\n      dup2\n        /* \"#utility.yul\":4212:4216   */\n      dup2\n        /* \"#utility.yul\":4208:4228   */\n      sub\n        /* \"#utility.yul\":4204:4205   */\n      0x00\n        /* \"#utility.yul\":4193:4202   */\n      dup4\n        /* \"#utility.yul\":4189:4206   */\n      add\n        /* \"#utility.yul\":4182:4229   */\n      mstore\n        /* \"#utility.yul\":4246:4322   */\n      tag_156\n        /* \"#utility.yul\":4317:4321   */\n      dup2\n        /* \"#utility.yul\":4308:4314   */\n      dup5\n        /* \"#utility.yul\":4246:4322   */\n      tag_90\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":4238:4322   */\n      swap1\n      pop\n        /* \"#utility.yul\":4020:4329   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4335:4412   */\n    tag_91:\n        /* \"#utility.yul\":4372:4379   */\n      0x00\n        /* \"#utility.yul\":4401:4406   */\n      dup2\n        /* \"#utility.yul\":4390:4406   */\n      swap1\n      pop\n        /* \"#utility.yul\":4335:4412   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4418:4536   */\n    tag_92:\n        /* \"#utility.yul\":4505:4529   */\n      tag_159\n        /* \"#utility.yul\":4523:4528   */\n      dup2\n        /* \"#utility.yul\":4505:4529   */\n      tag_91\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":4500:4503   */\n      dup3\n        /* \"#utility.yul\":4493:4530   */\n      mstore\n        /* \"#utility.yul\":4418:4536   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4542:4874   */\n    tag_18:\n        /* \"#utility.yul\":4663:4667   */\n      0x00\n        /* \"#utility.yul\":4701:4703   */\n      0x40\n        /* \"#utility.yul\":4690:4699   */\n      dup3\n        /* \"#utility.yul\":4686:4704   */\n      add\n        /* \"#utility.yul\":4678:4704   */\n      swap1\n      pop\n        /* \"#utility.yul\":4714:4785   */\n      tag_161\n        /* \"#utility.yul\":4782:4783   */\n      0x00\n        /* \"#utility.yul\":4771:4780   */\n      dup4\n        /* \"#utility.yul\":4767:4784   */\n      add\n        /* \"#utility.yul\":4758:4764   */\n      dup6\n        /* \"#utility.yul\":4714:4785   */\n      tag_92\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":4795:4867   */\n      tag_162\n        /* \"#utility.yul\":4863:4865   */\n      0x20\n        /* \"#utility.yul\":4852:4861   */\n      dup4\n        /* \"#utility.yul\":4848:4866   */\n      add\n        /* \"#utility.yul\":4839:4845   */\n      dup5\n        /* \"#utility.yul\":4795:4867   */\n      tag_92\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":4542:4874   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4880:5049   */\n    tag_93:\n        /* \"#utility.yul\":4964:4975   */\n      0x00\n        /* \"#utility.yul\":4998:5004   */\n      dup3\n        /* \"#utility.yul\":4993:4996   */\n      dup3\n        /* \"#utility.yul\":4986:5005   */\n      mstore\n        /* \"#utility.yul\":5038:5042   */\n      0x20\n        /* \"#utility.yul\":5033:5036   */\n      dup3\n        /* \"#utility.yul\":5029:5043   */\n      add\n        /* \"#utility.yul\":5014:5043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4880:5049   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5055:5279   */\n    tag_94:\n        /* \"#utility.yul\":5195:5229   */\n      0x4163636573732064656e6965642c204f6e6c79206f776e657220697320616c6c\n        /* \"#utility.yul\":5191:5192   */\n      0x00\n        /* \"#utility.yul\":5183:5189   */\n      dup3\n        /* \"#utility.yul\":5179:5193   */\n      add\n        /* \"#utility.yul\":5172:5230   */\n      mstore\n        /* \"#utility.yul\":5264:5271   */\n      0x6f77656421000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5259:5261   */\n      0x20\n        /* \"#utility.yul\":5251:5257   */\n      dup3\n        /* \"#utility.yul\":5247:5262   */\n      add\n        /* \"#utility.yul\":5240:5272   */\n      mstore\n        /* \"#utility.yul\":5055:5279   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5285:5651   */\n    tag_95:\n        /* \"#utility.yul\":5427:5430   */\n      0x00\n        /* \"#utility.yul\":5448:5515   */\n      tag_166\n        /* \"#utility.yul\":5512:5514   */\n      0x25\n        /* \"#utility.yul\":5507:5510   */\n      dup4\n        /* \"#utility.yul\":5448:5515   */\n      tag_93\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":5441:5515   */\n      swap2\n      pop\n        /* \"#utility.yul\":5524:5617   */\n      tag_167\n        /* \"#utility.yul\":5613:5616   */\n      dup3\n        /* \"#utility.yul\":5524:5617   */\n      tag_94\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":5642:5644   */\n      0x40\n        /* \"#utility.yul\":5637:5640   */\n      dup3\n        /* \"#utility.yul\":5633:5645   */\n      add\n        /* \"#utility.yul\":5626:5645   */\n      swap1\n      pop\n        /* \"#utility.yul\":5285:5651   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5657:6076   */\n    tag_24:\n        /* \"#utility.yul\":5823:5827   */\n      0x00\n        /* \"#utility.yul\":5861:5863   */\n      0x20\n        /* \"#utility.yul\":5850:5859   */\n      dup3\n        /* \"#utility.yul\":5846:5864   */\n      add\n        /* \"#utility.yul\":5838:5864   */\n      swap1\n      pop\n        /* \"#utility.yul\":5910:5919   */\n      dup2\n        /* \"#utility.yul\":5904:5908   */\n      dup2\n        /* \"#utility.yul\":5900:5920   */\n      sub\n        /* \"#utility.yul\":5896:5897   */\n      0x00\n        /* \"#utility.yul\":5885:5894   */\n      dup4\n        /* \"#utility.yul\":5881:5898   */\n      add\n        /* \"#utility.yul\":5874:5921   */\n      mstore\n        /* \"#utility.yul\":5938:6069   */\n      tag_169\n        /* \"#utility.yul\":6064:6068   */\n      dup2\n        /* \"#utility.yul\":5938:6069   */\n      tag_95\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":5930:6069   */\n      swap1\n      pop\n        /* \"#utility.yul\":5657:6076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6082:6181   */\n    tag_96:\n        /* \"#utility.yul\":6134:6140   */\n      0x00\n        /* \"#utility.yul\":6168:6173   */\n      dup2\n        /* \"#utility.yul\":6162:6174   */\n      mload\n        /* \"#utility.yul\":6152:6174   */\n      swap1\n      pop\n        /* \"#utility.yul\":6082:6181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6187:6551   */\n    tag_97:\n        /* \"#utility.yul\":6275:6278   */\n      0x00\n        /* \"#utility.yul\":6303:6342   */\n      tag_172\n        /* \"#utility.yul\":6336:6341   */\n      dup3\n        /* \"#utility.yul\":6303:6342   */\n      tag_96\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":6358:6429   */\n      tag_173\n        /* \"#utility.yul\":6422:6428   */\n      dup2\n        /* \"#utility.yul\":6417:6420   */\n      dup6\n        /* \"#utility.yul\":6358:6429   */\n      tag_93\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":6351:6429   */\n      swap4\n      pop\n        /* \"#utility.yul\":6438:6490   */\n      tag_174\n        /* \"#utility.yul\":6483:6489   */\n      dup2\n        /* \"#utility.yul\":6478:6481   */\n      dup6\n        /* \"#utility.yul\":6471:6475   */\n      0x20\n        /* \"#utility.yul\":6464:6469   */\n      dup7\n        /* \"#utility.yul\":6460:6476   */\n      add\n        /* \"#utility.yul\":6438:6490   */\n      tag_89\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":6515:6544   */\n      tag_175\n        /* \"#utility.yul\":6537:6543   */\n      dup2\n        /* \"#utility.yul\":6515:6544   */\n      tag_79\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":6510:6513   */\n      dup5\n        /* \"#utility.yul\":6506:6545   */\n      add\n        /* \"#utility.yul\":6499:6545   */\n      swap2\n      pop\n        /* \"#utility.yul\":6279:6551   */\n      pop\n        /* \"#utility.yul\":6187:6551   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6557:6870   */\n    tag_27:\n        /* \"#utility.yul\":6670:6674   */\n      0x00\n        /* \"#utility.yul\":6708:6710   */\n      0x20\n        /* \"#utility.yul\":6697:6706   */\n      dup3\n        /* \"#utility.yul\":6693:6711   */\n      add\n        /* \"#utility.yul\":6685:6711   */\n      swap1\n      pop\n        /* \"#utility.yul\":6757:6766   */\n      dup2\n        /* \"#utility.yul\":6751:6755   */\n      dup2\n        /* \"#utility.yul\":6747:6767   */\n      sub\n        /* \"#utility.yul\":6743:6744   */\n      0x00\n        /* \"#utility.yul\":6732:6741   */\n      dup4\n        /* \"#utility.yul\":6728:6745   */\n      add\n        /* \"#utility.yul\":6721:6768   */\n      mstore\n        /* \"#utility.yul\":6785:6863   */\n      tag_177\n        /* \"#utility.yul\":6858:6862   */\n      dup2\n        /* \"#utility.yul\":6849:6855   */\n      dup5\n        /* \"#utility.yul\":6785:6863   */\n      tag_97\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":6777:6863   */\n      swap1\n      pop\n        /* \"#utility.yul\":6557:6870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6876:7183   */\n    tag_98:\n        /* \"#utility.yul\":6937:6941   */\n      0x00\n        /* \"#utility.yul\":7027:7045   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7019:7025   */\n      dup3\n        /* \"#utility.yul\":7016:7046   */\n      gt\n        /* \"#utility.yul\":7013:7069   */\n      iszero\n      tag_179\n      jumpi\n        /* \"#utility.yul\":7049:7067   */\n      tag_180\n      tag_80\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":7013:7069   */\n    tag_179:\n        /* \"#utility.yul\":7087:7116   */\n      tag_181\n        /* \"#utility.yul\":7109:7115   */\n      dup3\n        /* \"#utility.yul\":7087:7116   */\n      tag_79\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":7079:7116   */\n      swap1\n      pop\n        /* \"#utility.yul\":7171:7175   */\n      0x20\n        /* \"#utility.yul\":7165:7169   */\n      dup2\n        /* \"#utility.yul\":7161:7176   */\n      add\n        /* \"#utility.yul\":7153:7176   */\n      swap1\n      pop\n        /* \"#utility.yul\":6876:7183   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7189:7608   */\n    tag_99:\n        /* \"#utility.yul\":7277:7282   */\n      0x00\n        /* \"#utility.yul\":7302:7367   */\n      tag_183\n        /* \"#utility.yul\":7318:7366   */\n      tag_184\n        /* \"#utility.yul\":7359:7365   */\n      dup5\n        /* \"#utility.yul\":7318:7366   */\n      tag_98\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":7302:7367   */\n      tag_82\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":7293:7367   */\n      swap1\n      pop\n        /* \"#utility.yul\":7390:7396   */\n      dup3\n        /* \"#utility.yul\":7383:7388   */\n      dup2\n        /* \"#utility.yul\":7376:7397   */\n      mstore\n        /* \"#utility.yul\":7428:7432   */\n      0x20\n        /* \"#utility.yul\":7421:7426   */\n      dup2\n        /* \"#utility.yul\":7417:7433   */\n      add\n        /* \"#utility.yul\":7466:7469   */\n      dup5\n        /* \"#utility.yul\":7457:7463   */\n      dup5\n        /* \"#utility.yul\":7452:7455   */\n      dup5\n        /* \"#utility.yul\":7448:7464   */\n      add\n        /* \"#utility.yul\":7445:7470   */\n      gt\n        /* \"#utility.yul\":7442:7554   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":7473:7552   */\n      tag_186\n      tag_78\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":7442:7554   */\n    tag_185:\n        /* \"#utility.yul\":7563:7602   */\n      tag_187\n        /* \"#utility.yul\":7595:7601   */\n      dup5\n        /* \"#utility.yul\":7590:7593   */\n      dup3\n        /* \"#utility.yul\":7585:7588   */\n      dup6\n        /* \"#utility.yul\":7563:7602   */\n      tag_89\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":7283:7608   */\n      pop\n        /* \"#utility.yul\":7189:7608   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7627:7980   */\n    tag_100:\n        /* \"#utility.yul\":7693:7698   */\n      0x00\n        /* \"#utility.yul\":7742:7745   */\n      dup3\n        /* \"#utility.yul\":7735:7739   */\n      0x1f\n        /* \"#utility.yul\":7727:7733   */\n      dup4\n        /* \"#utility.yul\":7723:7740   */\n      add\n        /* \"#utility.yul\":7719:7746   */\n      slt\n        /* \"#utility.yul\":7709:7831   */\n      tag_189\n      jumpi\n        /* \"#utility.yul\":7750:7829   */\n      tag_190\n      tag_77\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":7709:7831   */\n    tag_189:\n        /* \"#utility.yul\":7860:7866   */\n      dup2\n        /* \"#utility.yul\":7854:7867   */\n      mload\n        /* \"#utility.yul\":7885:7974   */\n      tag_191\n        /* \"#utility.yul\":7970:7973   */\n      dup5\n        /* \"#utility.yul\":7962:7968   */\n      dup3\n        /* \"#utility.yul\":7955:7959   */\n      0x20\n        /* \"#utility.yul\":7947:7953   */\n      dup7\n        /* \"#utility.yul\":7943:7960   */\n      add\n        /* \"#utility.yul\":7885:7974   */\n      tag_99\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":7876:7974   */\n      swap2\n      pop\n        /* \"#utility.yul\":7699:7980   */\n      pop\n        /* \"#utility.yul\":7627:7980   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7986:8508   */\n    tag_31:\n        /* \"#utility.yul\":8065:8071   */\n      0x00\n        /* \"#utility.yul\":8114:8116   */\n      0x20\n        /* \"#utility.yul\":8102:8111   */\n      dup3\n        /* \"#utility.yul\":8093:8100   */\n      dup5\n        /* \"#utility.yul\":8089:8112   */\n      sub\n        /* \"#utility.yul\":8085:8117   */\n      slt\n        /* \"#utility.yul\":8082:8201   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":8120:8199   */\n      tag_194\n      tag_75\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":8082:8201   */\n    tag_193:\n        /* \"#utility.yul\":8261:8262   */\n      0x00\n        /* \"#utility.yul\":8250:8259   */\n      dup3\n        /* \"#utility.yul\":8246:8263   */\n      add\n        /* \"#utility.yul\":8240:8264   */\n      mload\n        /* \"#utility.yul\":8291:8309   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8283:8289   */\n      dup2\n        /* \"#utility.yul\":8280:8310   */\n      gt\n        /* \"#utility.yul\":8277:8394   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":8313:8392   */\n      tag_196\n      tag_76\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":8277:8394   */\n    tag_195:\n        /* \"#utility.yul\":8418:8491   */\n      tag_197\n        /* \"#utility.yul\":8483:8490   */\n      dup5\n        /* \"#utility.yul\":8474:8480   */\n      dup3\n        /* \"#utility.yul\":8463:8472   */\n      dup6\n        /* \"#utility.yul\":8459:8481   */\n      add\n        /* \"#utility.yul\":8418:8491   */\n      tag_100\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":8408:8491   */\n      swap2\n      pop\n        /* \"#utility.yul\":8211:8501   */\n      pop\n        /* \"#utility.yul\":7986:8508   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8514:8694   */\n    tag_101:\n        /* \"#utility.yul\":8562:8639   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8559:8560   */\n      0x00\n        /* \"#utility.yul\":8552:8640   */\n      mstore\n        /* \"#utility.yul\":8659:8663   */\n      0x22\n        /* \"#utility.yul\":8656:8657   */\n      0x04\n        /* \"#utility.yul\":8649:8664   */\n      mstore\n        /* \"#utility.yul\":8683:8687   */\n      0x24\n        /* \"#utility.yul\":8680:8681   */\n      0x00\n        /* \"#utility.yul\":8673:8688   */\n      revert\n        /* \"#utility.yul\":8700:9020   */\n    tag_64:\n        /* \"#utility.yul\":8744:8750   */\n      0x00\n        /* \"#utility.yul\":8781:8782   */\n      0x02\n        /* \"#utility.yul\":8775:8779   */\n      dup3\n        /* \"#utility.yul\":8771:8783   */\n      div\n        /* \"#utility.yul\":8761:8783   */\n      swap1\n      pop\n        /* \"#utility.yul\":8828:8829   */\n      0x01\n        /* \"#utility.yul\":8822:8826   */\n      dup3\n        /* \"#utility.yul\":8818:8830   */\n      and\n        /* \"#utility.yul\":8849:8867   */\n      dup1\n        /* \"#utility.yul\":8839:8920   */\n      tag_200\n      jumpi\n        /* \"#utility.yul\":8905:8909   */\n      0x7f\n        /* \"#utility.yul\":8897:8903   */\n      dup3\n        /* \"#utility.yul\":8893:8910   */\n      and\n        /* \"#utility.yul\":8883:8910   */\n      swap2\n      pop\n        /* \"#utility.yul\":8839:8920   */\n    tag_200:\n        /* \"#utility.yul\":8967:8969   */\n      0x20\n        /* \"#utility.yul\":8959:8965   */\n      dup3\n        /* \"#utility.yul\":8956:8970   */\n      lt\n        /* \"#utility.yul\":8936:8954   */\n      dup2\n        /* \"#utility.yul\":8933:8971   */\n      eq\n        /* \"#utility.yul\":8930:9014   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":8986:9004   */\n      tag_202\n      tag_101\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":8930:9014   */\n    tag_201:\n        /* \"#utility.yul\":8751:9020   */\n      pop\n        /* \"#utility.yul\":8700:9020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9026:9173   */\n    tag_102:\n        /* \"#utility.yul\":9127:9138   */\n      0x00\n        /* \"#utility.yul\":9164:9167   */\n      dup2\n        /* \"#utility.yul\":9149:9167   */\n      swap1\n      pop\n        /* \"#utility.yul\":9026:9173   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9179:9319   */\n    tag_103:\n        /* \"#utility.yul\":9227:9231   */\n      0x00\n        /* \"#utility.yul\":9250:9253   */\n      dup2\n        /* \"#utility.yul\":9242:9253   */\n      swap1\n      pop\n        /* \"#utility.yul\":9273:9276   */\n      dup2\n        /* \"#utility.yul\":9270:9271   */\n      0x00\n        /* \"#utility.yul\":9263:9277   */\n      mstore\n        /* \"#utility.yul\":9307:9311   */\n      0x20\n        /* \"#utility.yul\":9304:9305   */\n      0x00\n        /* \"#utility.yul\":9294:9312   */\n      keccak256\n        /* \"#utility.yul\":9286:9312   */\n      swap1\n      pop\n        /* \"#utility.yul\":9179:9319   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9347:10188   */\n    tag_104:\n        /* \"#utility.yul\":9448:9451   */\n      0x00\n        /* \"#utility.yul\":9485:9490   */\n      dup2\n        /* \"#utility.yul\":9479:9491   */\n      sload\n        /* \"#utility.yul\":9514:9550   */\n      tag_206\n        /* \"#utility.yul\":9540:9549   */\n      dup2\n        /* \"#utility.yul\":9514:9550   */\n      tag_64\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":9566:9654   */\n      tag_207\n        /* \"#utility.yul\":9647:9653   */\n      dup2\n        /* \"#utility.yul\":9642:9645   */\n      dup7\n        /* \"#utility.yul\":9566:9654   */\n      tag_102\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":9559:9654   */\n      swap5\n      pop\n        /* \"#utility.yul\":9685:9686   */\n      0x01\n        /* \"#utility.yul\":9674:9683   */\n      dup3\n        /* \"#utility.yul\":9670:9687   */\n      and\n        /* \"#utility.yul\":9701:9702   */\n      0x00\n        /* \"#utility.yul\":9696:9833   */\n      dup2\n      eq\n      tag_209\n      jumpi\n        /* \"#utility.yul\":9847:9848   */\n      0x01\n        /* \"#utility.yul\":9842:10182   */\n      dup2\n      eq\n      tag_210\n      jumpi\n        /* \"#utility.yul\":9663:10182   */\n      jump(tag_208)\n        /* \"#utility.yul\":9696:9833   */\n    tag_209:\n        /* \"#utility.yul\":9780:9784   */\n      0xff\n        /* \"#utility.yul\":9776:9785   */\n      not\n        /* \"#utility.yul\":9765:9774   */\n      dup4\n        /* \"#utility.yul\":9761:9786   */\n      and\n        /* \"#utility.yul\":9756:9759   */\n      dup7\n        /* \"#utility.yul\":9749:9787   */\n      mstore\n        /* \"#utility.yul\":9816:9822   */\n      dup2\n        /* \"#utility.yul\":9811:9814   */\n      dup7\n        /* \"#utility.yul\":9807:9823   */\n      add\n        /* \"#utility.yul\":9800:9823   */\n      swap4\n      pop\n        /* \"#utility.yul\":9696:9833   */\n      jump(tag_208)\n        /* \"#utility.yul\":9842:10182   */\n    tag_210:\n        /* \"#utility.yul\":9909:9946   */\n      tag_211\n        /* \"#utility.yul\":9940:9945   */\n      dup6\n        /* \"#utility.yul\":9909:9946   */\n      tag_103\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":9968:9969   */\n      0x00\n        /* \"#utility.yul\":9982:10136   */\n    tag_212:\n        /* \"#utility.yul\":9996:10002   */\n      dup4\n        /* \"#utility.yul\":9993:9994   */\n      dup2\n        /* \"#utility.yul\":9990:10003   */\n      lt\n        /* \"#utility.yul\":9982:10136   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":10070:10077   */\n      dup2\n        /* \"#utility.yul\":10064:10078   */\n      sload\n        /* \"#utility.yul\":10060:10061   */\n      dup2\n        /* \"#utility.yul\":10055:10058   */\n      dup10\n        /* \"#utility.yul\":10051:10062   */\n      add\n        /* \"#utility.yul\":10044:10079   */\n      mstore\n        /* \"#utility.yul\":10120:10121   */\n      0x01\n        /* \"#utility.yul\":10111:10118   */\n      dup3\n        /* \"#utility.yul\":10107:10122   */\n      add\n        /* \"#utility.yul\":10096:10122   */\n      swap2\n      pop\n        /* \"#utility.yul\":10018:10022   */\n      0x20\n        /* \"#utility.yul\":10015:10016   */\n      dup2\n        /* \"#utility.yul\":10011:10023   */\n      add\n        /* \"#utility.yul\":10006:10023   */\n      swap1\n      pop\n        /* \"#utility.yul\":9982:10136   */\n      jump(tag_212)\n    tag_214:\n        /* \"#utility.yul\":10165:10171   */\n      dup4\n        /* \"#utility.yul\":10160:10163   */\n      dup9\n        /* \"#utility.yul\":10156:10172   */\n      add\n        /* \"#utility.yul\":10149:10172   */\n      swap6\n      pop\n        /* \"#utility.yul\":9849:10182   */\n      pop\n      pop\n        /* \"#utility.yul\":9663:10182   */\n    tag_208:\n      pop\n        /* \"#utility.yul\":9452:10188   */\n      pop\n      pop\n        /* \"#utility.yul\":9347:10188   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10194:10459   */\n    tag_39:\n        /* \"#utility.yul\":10321:10324   */\n      0x00\n        /* \"#utility.yul\":10343:10433   */\n      tag_216\n        /* \"#utility.yul\":10429:10432   */\n      dup3\n        /* \"#utility.yul\":10420:10426   */\n      dup5\n        /* \"#utility.yul\":10343:10433   */\n      tag_104\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":10336:10433   */\n      swap2\n      pop\n        /* \"#utility.yul\":10450:10453   */\n      dup2\n        /* \"#utility.yul\":10443:10453   */\n      swap1\n      pop\n        /* \"#utility.yul\":10194:10459   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10465:10645   */\n    tag_51:\n        /* \"#utility.yul\":10513:10590   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10510:10511   */\n      0x00\n        /* \"#utility.yul\":10503:10591   */\n      mstore\n        /* \"#utility.yul\":10610:10614   */\n      0x32\n        /* \"#utility.yul\":10607:10608   */\n      0x04\n        /* \"#utility.yul\":10600:10615   */\n      mstore\n        /* \"#utility.yul\":10634:10638   */\n      0x24\n        /* \"#utility.yul\":10631:10632   */\n      0x00\n        /* \"#utility.yul\":10624:10639   */\n      revert\n        /* \"#utility.yul\":10651:10831   */\n    tag_105:\n        /* \"#utility.yul\":10699:10776   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10696:10697   */\n      0x00\n        /* \"#utility.yul\":10689:10777   */\n      mstore\n        /* \"#utility.yul\":10796:10800   */\n      0x11\n        /* \"#utility.yul\":10793:10794   */\n      0x04\n        /* \"#utility.yul\":10786:10801   */\n      mstore\n        /* \"#utility.yul\":10820:10824   */\n      0x24\n        /* \"#utility.yul\":10817:10818   */\n      0x00\n        /* \"#utility.yul\":10810:10825   */\n      revert\n        /* \"#utility.yul\":10837:11070   */\n    tag_56:\n        /* \"#utility.yul\":10876:10879   */\n      0x00\n        /* \"#utility.yul\":10899:10923   */\n      tag_220\n        /* \"#utility.yul\":10917:10922   */\n      dup3\n        /* \"#utility.yul\":10899:10923   */\n      tag_91\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":10890:10923   */\n      swap2\n      pop\n        /* \"#utility.yul\":10945:11011   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10938:10943   */\n      dup3\n        /* \"#utility.yul\":10935:11012   */\n      eq\n        /* \"#utility.yul\":10932:11035   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":11015:11033   */\n      tag_222\n      tag_105\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":10932:11035   */\n    tag_221:\n        /* \"#utility.yul\":11062:11063   */\n      0x01\n        /* \"#utility.yul\":11055:11060   */\n      dup3\n        /* \"#utility.yul\":11051:11064   */\n      add\n        /* \"#utility.yul\":11044:11064   */\n      swap1\n      pop\n        /* \"#utility.yul\":10837:11070   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11076:11162   */\n    tag_106:\n        /* \"#utility.yul\":11111:11118   */\n      0x00\n        /* \"#utility.yul\":11151:11155   */\n      0xff\n        /* \"#utility.yul\":11144:11149   */\n      dup3\n        /* \"#utility.yul\":11140:11156   */\n      and\n        /* \"#utility.yul\":11129:11156   */\n      swap1\n      pop\n        /* \"#utility.yul\":11076:11162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11168:11353   */\n    tag_62:\n        /* \"#utility.yul\":11206:11210   */\n      0x00\n        /* \"#utility.yul\":11226:11244   */\n      tag_225\n        /* \"#utility.yul\":11242:11243   */\n      dup3\n        /* \"#utility.yul\":11226:11244   */\n      tag_106\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":11221:11244   */\n      swap2\n      pop\n        /* \"#utility.yul\":11258:11276   */\n      tag_226\n        /* \"#utility.yul\":11274:11275   */\n      dup4\n        /* \"#utility.yul\":11258:11276   */\n      tag_106\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":11253:11276   */\n      swap3\n      pop\n        /* \"#utility.yul\":11295:11296   */\n      dup3\n        /* \"#utility.yul\":11292:11293   */\n      dup3\n        /* \"#utility.yul\":11289:11297   */\n      lt\n        /* \"#utility.yul\":11286:11320   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":11300:11318   */\n      tag_228\n      tag_105\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":11286:11320   */\n    tag_227:\n        /* \"#utility.yul\":11345:11346   */\n      dup3\n        /* \"#utility.yul\":11342:11343   */\n      dup3\n        /* \"#utility.yul\":11338:11347   */\n      sub\n        /* \"#utility.yul\":11330:11347   */\n      swap1\n      pop\n        /* \"#utility.yul\":11168:11353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220870f482920a071982f732bfc17fe8cbef06ea25a2d7d2066f65abfd4bd68d1af64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610b00806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063267561c81461004657806394a72f1c14610062578063fc3a49e014610092575b600080fd5b610060600480360381019061005b91906105a3565b6100b1565b005b61007c600480360381019061007791906105a3565b6101c1565b6040516100899190610674565b60405180910390f35b61009a6101d3565b6040516100a89291906106af565b60405180910390f35b6100b9610228565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610126576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011d9061075b565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff166394a72f1c826040518263ffffffff1660e01b815260040161015f91906107bf565b600060405180830381865afa15801561017c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906101a59190610882565b6000603d0190805190602001906101bd9291906103a6565b5050565b60606101cc8261025b565b9050919050565b600080600080016000603d016040516101ec91906109cb565b90815260200160405180910390205460008001600060060160405161021191906109cb565b908152602001604051809103902054915091509091565b60006102326102f3565b60030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600082905060005b81518110156102e957610294828281518110610284576102836109e2565b5b602001015160f81c60f81b610320565b8282815181106102a7576102a66109e2565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806102e190610a40565b915050610265565b5080915050919050565b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90508091505090565b6000606160f81b827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015801561037e5750607a60f81b827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b1561039d5760208260f81c6103939190610a96565b60f81b90506103a1565b8190505b919050565b8280546103b2906108fa565b90600052602060002090601f0160209004810192826103d4576000855561041b565b82601f106103ed57805160ff191683800117855561041b565b8280016001018555821561041b579182015b8281111561041a5782518255916020019190600101906103ff565b5b509050610428919061042c565b5090565b5b8082111561044557600081600090555060010161042d565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104b082610467565b810181811067ffffffffffffffff821117156104cf576104ce610478565b5b80604052505050565b60006104e2610449565b90506104ee82826104a7565b919050565b600067ffffffffffffffff82111561050e5761050d610478565b5b61051782610467565b9050602081019050919050565b82818337600083830152505050565b6000610546610541846104f3565b6104d8565b90508281526020810184848401111561056257610561610462565b5b61056d848285610524565b509392505050565b600082601f83011261058a5761058961045d565b5b813561059a848260208601610533565b91505092915050565b6000602082840312156105b9576105b8610453565b5b600082013567ffffffffffffffff8111156105d7576105d6610458565b5b6105e384828501610575565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561062657808201518184015260208101905061060b565b83811115610635576000848401525b50505050565b6000610646826105ec565b61065081856105f7565b9350610660818560208601610608565b61066981610467565b840191505092915050565b6000602082019050818103600083015261068e818461063b565b905092915050565b6000819050919050565b6106a981610696565b82525050565b60006040820190506106c460008301856106a0565b6106d160208301846106a0565b9392505050565b600082825260208201905092915050565b7f4163636573732064656e6965642c204f6e6c79206f776e657220697320616c6c60008201527f6f77656421000000000000000000000000000000000000000000000000000000602082015250565b60006107456025836106d8565b9150610750826106e9565b604082019050919050565b6000602082019050818103600083015261077481610738565b9050919050565b600081519050919050565b60006107918261077b565b61079b81856106d8565b93506107ab818560208601610608565b6107b481610467565b840191505092915050565b600060208201905081810360008301526107d98184610786565b905092915050565b600067ffffffffffffffff8211156107fc576107fb610478565b5b61080582610467565b9050602081019050919050565b6000610825610820846107e1565b6104d8565b90508281526020810184848401111561084157610840610462565b5b61084c848285610608565b509392505050565b600082601f8301126108695761086861045d565b5b8151610879848260208601610812565b91505092915050565b60006020828403121561089857610897610453565b5b600082015167ffffffffffffffff8111156108b6576108b5610458565b5b6108c284828501610854565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061091257607f821691505b60208210811415610926576109256108cb565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154610959816108fa565b610963818661092c565b9450600182166000811461097e576001811461098f576109c2565b60ff198316865281860193506109c2565b61099885610937565b60005b838110156109ba5781548189015260018201915060208101905061099b565b838801955050505b50505092915050565b60006109d7828461094c565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a4b82610696565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a7e57610a7d610a11565b5b600182019050919050565b600060ff82169050919050565b6000610aa182610a89565b9150610aac83610a89565b925082821015610abf57610abe610a11565b5b82820390509291505056fea2646970667358221220870f482920a071982f732bfc17fe8cbef06ea25a2d7d2066f65abfd4bd68d1af64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB00 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x267561C8 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x94A72F1C EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xFC3A49E0 EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0xB1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x89 SWAP2 SWAP1 PUSH2 0x674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9A PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP3 SWAP2 SWAP1 PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 PUSH2 0x228 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x126 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D SWAP1 PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x94A72F1C DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x882 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3D ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1BD SWAP3 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1CC DUP3 PUSH2 0x25B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADD PUSH1 0x0 PUSH1 0x3D ADD PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x9CB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 DUP1 ADD PUSH1 0x0 PUSH1 0x6 ADD PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x9CB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x232 PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2E9 JUMPI PUSH2 0x294 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x284 JUMPI PUSH2 0x283 PUSH2 0x9E2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH2 0x320 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A7 JUMPI PUSH2 0x2A6 PUSH2 0x9E2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH2 0x2E1 SWAP1 PUSH2 0xA40 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x265 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x61 PUSH1 0xF8 SHL DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND LT ISZERO DUP1 ISZERO PUSH2 0x37E JUMPI POP PUSH1 0x7A PUSH1 0xF8 SHL DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND GT ISZERO JUMPDEST ISZERO PUSH2 0x39D JUMPI PUSH1 0x20 DUP3 PUSH1 0xF8 SHR PUSH2 0x393 SWAP2 SWAP1 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0xF8 SHL SWAP1 POP PUSH2 0x3A1 JUMP JUMPDEST DUP2 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x3B2 SWAP1 PUSH2 0x8FA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x41B JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x3ED JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x41B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x41B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x41A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3FF JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x42C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x42D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x4B0 DUP3 PUSH2 0x467 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4CF JUMPI PUSH2 0x4CE PUSH2 0x478 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E2 PUSH2 0x449 JUMP JUMPDEST SWAP1 POP PUSH2 0x4EE DUP3 DUP3 PUSH2 0x4A7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x50E JUMPI PUSH2 0x50D PUSH2 0x478 JUMP JUMPDEST JUMPDEST PUSH2 0x517 DUP3 PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x546 PUSH2 0x541 DUP5 PUSH2 0x4F3 JUMP JUMPDEST PUSH2 0x4D8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x562 JUMPI PUSH2 0x561 PUSH2 0x462 JUMP JUMPDEST JUMPDEST PUSH2 0x56D DUP5 DUP3 DUP6 PUSH2 0x524 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x58A JUMPI PUSH2 0x589 PUSH2 0x45D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x59A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x533 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B9 JUMPI PUSH2 0x5B8 PUSH2 0x453 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5D7 JUMPI PUSH2 0x5D6 PUSH2 0x458 JUMP JUMPDEST JUMPDEST PUSH2 0x5E3 DUP5 DUP3 DUP6 ADD PUSH2 0x575 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x626 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x60B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x635 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x646 DUP3 PUSH2 0x5EC JUMP JUMPDEST PUSH2 0x650 DUP2 DUP6 PUSH2 0x5F7 JUMP JUMPDEST SWAP4 POP PUSH2 0x660 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x608 JUMP JUMPDEST PUSH2 0x669 DUP2 PUSH2 0x467 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x68E DUP2 DUP5 PUSH2 0x63B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6A9 DUP2 PUSH2 0x696 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6C4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6A0 JUMP JUMPDEST PUSH2 0x6D1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6A0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4163636573732064656E6965642C204F6E6C79206F776E657220697320616C6C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F77656421000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x745 PUSH1 0x25 DUP4 PUSH2 0x6D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x750 DUP3 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x774 DUP2 PUSH2 0x738 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x791 DUP3 PUSH2 0x77B JUMP JUMPDEST PUSH2 0x79B DUP2 DUP6 PUSH2 0x6D8 JUMP JUMPDEST SWAP4 POP PUSH2 0x7AB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x608 JUMP JUMPDEST PUSH2 0x7B4 DUP2 PUSH2 0x467 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7D9 DUP2 DUP5 PUSH2 0x786 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x7FC JUMPI PUSH2 0x7FB PUSH2 0x478 JUMP JUMPDEST JUMPDEST PUSH2 0x805 DUP3 PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x825 PUSH2 0x820 DUP5 PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x4D8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x841 JUMPI PUSH2 0x840 PUSH2 0x462 JUMP JUMPDEST JUMPDEST PUSH2 0x84C DUP5 DUP3 DUP6 PUSH2 0x608 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x869 JUMPI PUSH2 0x868 PUSH2 0x45D JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x879 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x812 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x898 JUMPI PUSH2 0x897 PUSH2 0x453 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8B6 JUMPI PUSH2 0x8B5 PUSH2 0x458 JUMP JUMPDEST JUMPDEST PUSH2 0x8C2 DUP5 DUP3 DUP6 ADD PUSH2 0x854 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x912 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x926 JUMPI PUSH2 0x925 PUSH2 0x8CB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x959 DUP2 PUSH2 0x8FA JUMP JUMPDEST PUSH2 0x963 DUP2 DUP7 PUSH2 0x92C JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x97E JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x98F JUMPI PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 DUP7 ADD SWAP4 POP PUSH2 0x9C2 JUMP JUMPDEST PUSH2 0x998 DUP6 PUSH2 0x937 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9BA JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x99B JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D7 DUP3 DUP5 PUSH2 0x94C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA4B DUP3 PUSH2 0x696 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xA7E JUMPI PUSH2 0xA7D PUSH2 0xA11 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA1 DUP3 PUSH2 0xA89 JUMP JUMPDEST SWAP2 POP PUSH2 0xAAC DUP4 PUSH2 0xA89 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xABF JUMPI PUSH2 0xABE PUSH2 0xA11 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xF BASEFEE 0x29 KECCAK256 LOG0 PUSH18 0x982F732BFC17FE8CBEF06EA25A2D7D2066F6 GAS 0xBF 0xD4 0xBD PUSH9 0xD1AF64736F6C634300 ADDMOD EXP STOP CALLER ",
							"sourceMap": "165:3000:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_upper_430": {
									"entryPoint": 800,
									"id": 430,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@contractOwner_557": {
									"entryPoint": 552,
									"id": 557,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@converter_358": {
									"entryPoint": 449,
									"id": 358,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@diamondStorage_511": {
									"entryPoint": 755,
									"id": 511,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStakingAndBuyingTokenPrices_343": {
									"entryPoint": 467,
									"id": 343,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@setNairaUSDTicker_323": {
									"entryPoint": 177,
									"id": 323,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upper_401": {
									"entryPoint": 603,
									"id": 401,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr_fromMemory": {
									"entryPoint": 2066,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 1331,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr_fromMemory": {
									"entryPoint": 2132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 1397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_memory_ptr_fromMemory": {
									"entryPoint": 2178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 1443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 1595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_storage_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d609cfa148d3d2d8b38538c06afac2ebdfb0d134cc7da2ba276bd1db3f6e2779_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_storage__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 1652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d609cfa148d3d2d8b38538c06afac2ebdfb0d134cc7da2ba276bd1db3f6e2779__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1711,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1097,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 2017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_bytes_storage": {
									"entryPoint": 2359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 1516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 1527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint8": {
									"entryPoint": 2710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 1316,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 1544,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 2298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 2624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2577,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2251,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2530,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1144,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1117,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1122,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1112,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1107,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_d609cfa148d3d2d8b38538c06afac2ebdfb0d134cc7da2ba276bd1db3f6e2779": {
									"entryPoint": 1769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11356:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:4"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:4"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:4",
														"type": ""
													}
												],
												"src": "580:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:4"
															},
															"nodeType": "YulIf",
															"src": "1030:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:4"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:4",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:4",
														"type": ""
													}
												],
												"src": "874:281:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:4"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:4"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:4"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:4",
														"type": ""
													}
												],
												"src": "1161:129:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:4"
															},
															"nodeType": "YulIf",
															"src": "1434:56:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:4"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:4",
														"type": ""
													}
												],
												"src": "1296:308:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1661:103:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1684:3:4"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1694:6:4"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1671:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1671:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1671:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1742:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1747:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1738:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1738:16:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1756:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1731:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1731:27:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1731:27:4"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1643:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1648:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1653:6:4",
														"type": ""
													}
												],
												"src": "1610:154:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1854:328:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1864:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1931:6:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1889:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1889:49:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1873:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1873:66:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1864:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1955:5:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1962:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1948:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1948:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1948:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1978:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1993:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2000:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1989:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1989:16:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1982:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2043:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2045:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2045:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2045:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2024:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2029:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2020:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2020:16:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2038:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2017:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2017:25:4"
															},
															"nodeType": "YulIf",
															"src": "2014:112:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2159:3:4"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2164:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2169:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2135:23:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:41:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2135:41:4"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1827:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1832:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1840:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1848:5:4",
														"type": ""
													}
												],
												"src": "1770:412:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2264:278:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2313:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2315:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2315:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2315:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2292:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2300:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2288:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2288:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2307:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2284:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2284:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2277:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2277:35:4"
															},
															"nodeType": "YulIf",
															"src": "2274:122:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2405:34:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2432:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2419:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2419:20:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2409:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2448:88:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2509:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2517:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2505:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2505:17:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2524:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2532:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2457:47:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2457:79:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2448:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2242:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2250:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2258:5:4",
														"type": ""
													}
												],
												"src": "2202:340:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2624:433:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2670:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2672:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2672:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2672:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2645:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2654:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2641:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2641:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2666:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2637:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2637:32:4"
															},
															"nodeType": "YulIf",
															"src": "2634:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2763:287:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2778:45:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2809:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2820:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2805:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2805:17:4"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2792:12:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2792:31:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2782:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2870:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2872:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2872:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2872:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2842:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2850:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2839:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2839:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "2836:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2967:73:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3012:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3023:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3008:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3008:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3032:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2977:30:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2977:63:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2967:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2594:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2605:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2617:6:4",
														"type": ""
													}
												],
												"src": "2548:509:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3121:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3132:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3148:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3132:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3104:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3114:6:4",
														"type": ""
													}
												],
												"src": "3063:98:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3262:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3279:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3284:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3272:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3272:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3272:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3300:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3319:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3315:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3315:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3300:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3234:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3239:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3250:11:4",
														"type": ""
													}
												],
												"src": "3167:168:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3390:258:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3400:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3409:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3404:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3469:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3494:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3499:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3490:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3490:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "3513:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3518:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3509:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3509:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3503:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3503:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3483:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3483:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3483:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3430:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3433:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3427:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3427:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3441:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3443:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3452:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3455:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3448:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3448:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3443:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3423:3:4",
																"statements": []
															},
															"src": "3419:113:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3566:76:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3616:3:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "3621:6:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3612:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3612:16:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3630:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3605:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3605:27:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3605:27:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3547:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3550:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3544:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3544:13:4"
															},
															"nodeType": "YulIf",
															"src": "3541:101:4"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3372:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3377:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3382:6:4",
														"type": ""
													}
												],
												"src": "3341:307:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3744:270:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3754:52:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3800:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3768:31:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3768:38:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3758:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3815:77:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3880:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3885:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3822:57:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3822:70:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3815:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3927:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3934:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3923:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3923:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3941:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3946:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3901:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3901:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3901:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3962:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3973:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4000:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3978:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3978:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3969:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3962:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3725:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3732:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3740:3:4",
														"type": ""
													}
												],
												"src": "3654:360:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4136:193:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4146:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4158:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4169:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4154:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4154:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4146:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4193:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4204:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4189:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4189:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4212:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4218:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4208:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4208:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4182:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4182:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4182:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4238:84:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4308:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4317:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4246:61:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4246:76:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4238:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4108:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4120:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4131:4:4",
														"type": ""
													}
												],
												"src": "4020:309:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4380:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4390:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4401:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4390:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4362:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4372:7:4",
														"type": ""
													}
												],
												"src": "4335:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4483:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4500:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4523:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4505:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4505:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4493:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4493:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4493:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4471:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4478:3:4",
														"type": ""
													}
												],
												"src": "4418:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4668:206:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4678:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4690:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4701:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4686:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4686:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4678:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4758:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4771:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4782:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4767:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4767:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4714:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4714:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4714:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4839:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4852:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4863:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4848:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4848:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4795:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4795:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4795:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4632:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4644:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4652:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4663:4:4",
														"type": ""
													}
												],
												"src": "4542:332:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4976:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4993:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4998:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4986:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4986:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4986:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5014:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5033:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5038:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5029:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5029:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5014:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4948:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4953:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4964:11:4",
														"type": ""
													}
												],
												"src": "4880:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5161:118:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5183:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5191:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5179:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5179:14:4"
																	},
																	{
																		"hexValue": "4163636573732064656e6965642c204f6e6c79206f776e657220697320616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5195:34:4",
																		"type": "",
																		"value": "Access denied, Only owner is all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5172:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5172:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5172:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5251:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5259:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5247:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5247:15:4"
																	},
																	{
																		"hexValue": "6f77656421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5264:7:4",
																		"type": "",
																		"value": "owed!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5240:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5240:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5240:32:4"
														}
													]
												},
												"name": "store_literal_in_memory_d609cfa148d3d2d8b38538c06afac2ebdfb0d134cc7da2ba276bd1db3f6e2779",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5153:6:4",
														"type": ""
													}
												],
												"src": "5055:224:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5431:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5441:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5507:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5512:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5448:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5448:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5441:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5613:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d609cfa148d3d2d8b38538c06afac2ebdfb0d134cc7da2ba276bd1db3f6e2779",
																	"nodeType": "YulIdentifier",
																	"src": "5524:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5524:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5524:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5626:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5637:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5642:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5633:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5633:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5626:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d609cfa148d3d2d8b38538c06afac2ebdfb0d134cc7da2ba276bd1db3f6e2779_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5419:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5427:3:4",
														"type": ""
													}
												],
												"src": "5285:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5828:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5838:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5850:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5861:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5846:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5846:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5838:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5885:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5896:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5881:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5881:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5904:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5910:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5900:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5900:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5874:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5874:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5874:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5930:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6064:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d609cfa148d3d2d8b38538c06afac2ebdfb0d134cc7da2ba276bd1db3f6e2779_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5938:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5938:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5930:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d609cfa148d3d2d8b38538c06afac2ebdfb0d134cc7da2ba276bd1db3f6e2779__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5808:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5823:4:4",
														"type": ""
													}
												],
												"src": "5657:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6141:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6152:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6168:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6162:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6162:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6152:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6124:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6134:6:4",
														"type": ""
													}
												],
												"src": "6082:99:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6279:272:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6289:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6336:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6303:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6303:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6293:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6351:78:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6417:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6422:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6358:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6358:71:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6351:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6464:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6471:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6460:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6460:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6478:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6483:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6438:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6438:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6438:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6499:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6510:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6537:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6515:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6515:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6506:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6506:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6499:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6260:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6267:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6275:3:4",
														"type": ""
													}
												],
												"src": "6187:364:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6675:195:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6685:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6697:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6708:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6693:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6693:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6685:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6732:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6743:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6728:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6728:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6751:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6757:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6747:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6747:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6721:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6721:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6721:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6777:86:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6849:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6858:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6785:63:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6785:78:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6777:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6647:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6659:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6670:4:4",
														"type": ""
													}
												],
												"src": "6557:313:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6942:241:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7047:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7049:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7049:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7049:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7019:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7027:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7016:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7016:30:4"
															},
															"nodeType": "YulIf",
															"src": "7013:56:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7079:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7109:6:4"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "7087:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7087:29:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7079:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7153:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7165:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7171:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7161:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7161:15:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7153:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6926:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6937:4:4",
														"type": ""
													}
												],
												"src": "6876:307:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7283:325:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7293:74:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7359:6:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7318:40:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7318:48:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7302:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7302:65:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7293:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7383:5:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7390:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7376:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7376:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7376:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7406:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7421:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7428:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7417:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7417:16:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "7410:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7471:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "7473:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7473:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7473:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "7452:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7457:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7448:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7448:16:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7466:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7445:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7445:25:4"
															},
															"nodeType": "YulIf",
															"src": "7442:112:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7585:3:4"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7590:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7595:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7563:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7563:39:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7563:39:4"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7256:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7261:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7269:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7277:5:4",
														"type": ""
													}
												],
												"src": "7189:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7699:281:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7748:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "7750:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7750:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7750:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7727:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7735:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7723:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7723:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "7742:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7719:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7719:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7712:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7712:35:4"
															},
															"nodeType": "YulIf",
															"src": "7709:122:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7840:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7860:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7854:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7854:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7844:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7876:98:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7947:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7955:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7943:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7943:17:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7962:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7970:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "7885:57:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7885:89:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7876:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7677:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7685:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7693:5:4",
														"type": ""
													}
												],
												"src": "7627:353:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8072:436:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8118:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8120:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8120:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8120:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8093:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8102:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8089:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8089:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8114:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8085:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8085:32:4"
															},
															"nodeType": "YulIf",
															"src": "8082:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "8211:290:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8226:38:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8250:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8261:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8246:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8246:17:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8240:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8240:24:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8230:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8311:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8313:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8313:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8313:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8283:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8291:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8280:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8280:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "8277:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8408:83:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8463:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8459:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8459:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8483:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8418:40:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8418:73:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8408:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8042:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8053:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8065:6:4",
														"type": ""
													}
												],
												"src": "7986:522:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8542:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8559:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8562:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8552:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8552:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8552:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8656:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8659:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8649:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8649:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8649:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8680:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8683:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8673:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8673:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8673:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "8514:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8751:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8761:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8775:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8781:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8771:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8771:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8761:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8792:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8822:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8828:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8818:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8818:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8796:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8869:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8883:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8897:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8905:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8893:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8893:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8883:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8849:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8842:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8842:26:4"
															},
															"nodeType": "YulIf",
															"src": "8839:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8972:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "8986:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8986:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8986:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8936:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8959:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8967:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8956:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8956:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8933:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8933:38:4"
															},
															"nodeType": "YulIf",
															"src": "8930:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8735:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8744:6:4",
														"type": ""
													}
												],
												"src": "8700:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9139:34:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9149:18:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9164:3:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9149:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9111:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9116:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9127:11:4",
														"type": ""
													}
												],
												"src": "9026:147:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9232:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9242:11:4",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "9250:3:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "9242:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9270:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "9273:3:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9263:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9263:14:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9263:14:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9286:26:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9304:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9307:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "9294:9:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9294:18:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "9286:4:4"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_bytes_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "9219:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9227:4:4",
														"type": ""
													}
												],
												"src": "9179:140:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9452:736:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9462:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9485:5:4"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "9479:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9479:12:4"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "9466:9:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9500:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "9540:9:4"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "9514:25:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9514:36:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9504:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9559:95:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9642:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9647:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9566:75:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9566:88:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9559:3:4"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9703:130:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "9756:3:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "9765:9:4"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "9780:4:4",
																											"type": "",
																											"value": "0xff"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "9776:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "9776:9:4"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "9761:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9761:25:4"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "9749:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9749:38:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9749:38:4"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "9800:23:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "9811:3:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "9816:6:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9807:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9807:16:4"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "9800:3:4"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "9696:137:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9701:1:4",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9849:333:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "9894:52:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "9940:5:4"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_bytes_storage",
																						"nodeType": "YulIdentifier",
																						"src": "9909:30:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9909:37:4"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "9898:7:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "9959:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9968:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "9963:1:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10026:110:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nodeType": "YulIdentifier",
																												"src": "10055:3:4"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "10060:1:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "10051:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10051:11:4"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "10070:7:4"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "10064:5:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10064:14:4"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "10044:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10044:35:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "10044:35:4"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "10096:26:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "10111:7:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "10120:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10107:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10107:15:4"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "10096:7:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "9993:1:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "9996:6:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "9990:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9990:13:4"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "10004:21:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "10006:17:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "10015:1:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "10018:4:4",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10011:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10011:12:4"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10006:1:4"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "9986:3:4",
																					"statements": []
																				},
																				"src": "9982:154:4"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "10149:23:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "10160:3:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10165:6:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10156:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10156:16:4"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "10149:3:4"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "9842:340:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9847:1:4",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "9674:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9685:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9670:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9670:17:4"
															},
															"nodeType": "YulSwitch",
															"src": "9663:519:4"
														}
													]
												},
												"name": "abi_encode_t_bytes_storage_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9433:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9440:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9448:3:4",
														"type": ""
													}
												],
												"src": "9347:841:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10325:134:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10336:97:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10420:6:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10429:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_storage_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10343:76:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10343:90:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10336:3:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10443:10:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10450:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10443:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_storage__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10304:3:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10310:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10321:3:4",
														"type": ""
													}
												],
												"src": "10194:265:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10493:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10510:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10513:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10503:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10503:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10503:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10607:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10610:4:4",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10600:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10600:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10600:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10631:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10634:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10624:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10624:15:4"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10465:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10679:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10696:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10699:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10689:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10689:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10689:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10793:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10796:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10786:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10786:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10786:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10817:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10820:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10810:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10810:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10810:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10651:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10880:190:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10890:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10917:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10899:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10899:24:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10890:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11013:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11015:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11015:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11015:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10938:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10945:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10935:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10935:77:4"
															},
															"nodeType": "YulIf",
															"src": "10932:103:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11044:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11055:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11062:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11051:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11051:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11044:3:4"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10866:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10876:3:4",
														"type": ""
													}
												],
												"src": "10837:233:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11119:43:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11129:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11144:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11151:4:4",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11140:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11140:16:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11129:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11101:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11111:7:4",
														"type": ""
													}
												],
												"src": "11076:86:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11211:142:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11221:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11242:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "11226:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11226:18:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11221:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11253:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11274:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "11258:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11258:18:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11253:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11298:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11300:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11300:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11300:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11292:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11295:1:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11289:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11289:8:4"
															},
															"nodeType": "YulIf",
															"src": "11286:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11330:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11342:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11345:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11338:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11338:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11330:4:4"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11197:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11200:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11206:4:4",
														"type": ""
													}
												],
												"src": "11168:185:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d609cfa148d3d2d8b38538c06afac2ebdfb0d134cc7da2ba276bd1db3f6e2779(memPtr) {\n\n        mstore(add(memPtr, 0), \"Access denied, Only owner is all\")\n\n        mstore(add(memPtr, 32), \"owed!\")\n\n    }\n\n    function abi_encode_t_stringliteral_d609cfa148d3d2d8b38538c06afac2ebdfb0d134cc7da2ba276bd1db3f6e2779_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_d609cfa148d3d2d8b38538c06afac2ebdfb0d134cc7da2ba276bd1db3f6e2779(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d609cfa148d3d2d8b38538c06afac2ebdfb0d134cc7da2ba276bd1db3f6e2779__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d609cfa148d3d2d8b38538c06afac2ebdfb0d134cc7da2ba276bd1db3f6e2779_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_bytes_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_storage_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, length)\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_bytes_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_bytes_storage__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_storage_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_sub_t_uint8(x, y) -> diff {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063267561c81461004657806394a72f1c14610062578063fc3a49e014610092575b600080fd5b610060600480360381019061005b91906105a3565b6100b1565b005b61007c600480360381019061007791906105a3565b6101c1565b6040516100899190610674565b60405180910390f35b61009a6101d3565b6040516100a89291906106af565b60405180910390f35b6100b9610228565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610126576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011d9061075b565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff166394a72f1c826040518263ffffffff1660e01b815260040161015f91906107bf565b600060405180830381865afa15801561017c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906101a59190610882565b6000603d0190805190602001906101bd9291906103a6565b5050565b60606101cc8261025b565b9050919050565b600080600080016000603d016040516101ec91906109cb565b90815260200160405180910390205460008001600060060160405161021191906109cb565b908152602001604051809103902054915091509091565b60006102326102f3565b60030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600082905060005b81518110156102e957610294828281518110610284576102836109e2565b5b602001015160f81c60f81b610320565b8282815181106102a7576102a66109e2565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806102e190610a40565b915050610265565b5080915050919050565b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90508091505090565b6000606160f81b827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015801561037e5750607a60f81b827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b1561039d5760208260f81c6103939190610a96565b60f81b90506103a1565b8190505b919050565b8280546103b2906108fa565b90600052602060002090601f0160209004810192826103d4576000855561041b565b82601f106103ed57805160ff191683800117855561041b565b8280016001018555821561041b579182015b8281111561041a5782518255916020019190600101906103ff565b5b509050610428919061042c565b5090565b5b8082111561044557600081600090555060010161042d565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104b082610467565b810181811067ffffffffffffffff821117156104cf576104ce610478565b5b80604052505050565b60006104e2610449565b90506104ee82826104a7565b919050565b600067ffffffffffffffff82111561050e5761050d610478565b5b61051782610467565b9050602081019050919050565b82818337600083830152505050565b6000610546610541846104f3565b6104d8565b90508281526020810184848401111561056257610561610462565b5b61056d848285610524565b509392505050565b600082601f83011261058a5761058961045d565b5b813561059a848260208601610533565b91505092915050565b6000602082840312156105b9576105b8610453565b5b600082013567ffffffffffffffff8111156105d7576105d6610458565b5b6105e384828501610575565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561062657808201518184015260208101905061060b565b83811115610635576000848401525b50505050565b6000610646826105ec565b61065081856105f7565b9350610660818560208601610608565b61066981610467565b840191505092915050565b6000602082019050818103600083015261068e818461063b565b905092915050565b6000819050919050565b6106a981610696565b82525050565b60006040820190506106c460008301856106a0565b6106d160208301846106a0565b9392505050565b600082825260208201905092915050565b7f4163636573732064656e6965642c204f6e6c79206f776e657220697320616c6c60008201527f6f77656421000000000000000000000000000000000000000000000000000000602082015250565b60006107456025836106d8565b9150610750826106e9565b604082019050919050565b6000602082019050818103600083015261077481610738565b9050919050565b600081519050919050565b60006107918261077b565b61079b81856106d8565b93506107ab818560208601610608565b6107b481610467565b840191505092915050565b600060208201905081810360008301526107d98184610786565b905092915050565b600067ffffffffffffffff8211156107fc576107fb610478565b5b61080582610467565b9050602081019050919050565b6000610825610820846107e1565b6104d8565b90508281526020810184848401111561084157610840610462565b5b61084c848285610608565b509392505050565b600082601f8301126108695761086861045d565b5b8151610879848260208601610812565b91505092915050565b60006020828403121561089857610897610453565b5b600082015167ffffffffffffffff8111156108b6576108b5610458565b5b6108c284828501610854565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061091257607f821691505b60208210811415610926576109256108cb565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154610959816108fa565b610963818661092c565b9450600182166000811461097e576001811461098f576109c2565b60ff198316865281860193506109c2565b61099885610937565b60005b838110156109ba5781548189015260018201915060208101905061099b565b838801955050505b50505092915050565b60006109d7828461094c565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a4b82610696565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a7e57610a7d610a11565b5b600182019050919050565b600060ff82169050919050565b6000610aa182610a89565b9150610aac83610a89565b925082821015610abf57610abe610a11565b5b82820390509291505056fea2646970667358221220870f482920a071982f732bfc17fe8cbef06ea25a2d7d2066f65abfd4bd68d1af64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x267561C8 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x94A72F1C EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xFC3A49E0 EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0xB1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x89 SWAP2 SWAP1 PUSH2 0x674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9A PUSH2 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP3 SWAP2 SWAP1 PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 PUSH2 0x228 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x126 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D SWAP1 PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x94A72F1C DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x882 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3D ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1BD SWAP3 SWAP2 SWAP1 PUSH2 0x3A6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1CC DUP3 PUSH2 0x25B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ADD PUSH1 0x0 PUSH1 0x3D ADD PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x9CB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 DUP1 ADD PUSH1 0x0 PUSH1 0x6 ADD PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x9CB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x232 PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2E9 JUMPI PUSH2 0x294 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x284 JUMPI PUSH2 0x283 PUSH2 0x9E2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH2 0x320 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2A7 JUMPI PUSH2 0x2A6 PUSH2 0x9E2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH2 0x2E1 SWAP1 PUSH2 0xA40 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x265 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x61 PUSH1 0xF8 SHL DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND LT ISZERO DUP1 ISZERO PUSH2 0x37E JUMPI POP PUSH1 0x7A PUSH1 0xF8 SHL DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND GT ISZERO JUMPDEST ISZERO PUSH2 0x39D JUMPI PUSH1 0x20 DUP3 PUSH1 0xF8 SHR PUSH2 0x393 SWAP2 SWAP1 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0xF8 SHL SWAP1 POP PUSH2 0x3A1 JUMP JUMPDEST DUP2 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x3B2 SWAP1 PUSH2 0x8FA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x41B JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x3ED JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x41B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x41B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x41A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3FF JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x42C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x42D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x4B0 DUP3 PUSH2 0x467 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4CF JUMPI PUSH2 0x4CE PUSH2 0x478 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E2 PUSH2 0x449 JUMP JUMPDEST SWAP1 POP PUSH2 0x4EE DUP3 DUP3 PUSH2 0x4A7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x50E JUMPI PUSH2 0x50D PUSH2 0x478 JUMP JUMPDEST JUMPDEST PUSH2 0x517 DUP3 PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x546 PUSH2 0x541 DUP5 PUSH2 0x4F3 JUMP JUMPDEST PUSH2 0x4D8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x562 JUMPI PUSH2 0x561 PUSH2 0x462 JUMP JUMPDEST JUMPDEST PUSH2 0x56D DUP5 DUP3 DUP6 PUSH2 0x524 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x58A JUMPI PUSH2 0x589 PUSH2 0x45D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x59A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x533 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B9 JUMPI PUSH2 0x5B8 PUSH2 0x453 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5D7 JUMPI PUSH2 0x5D6 PUSH2 0x458 JUMP JUMPDEST JUMPDEST PUSH2 0x5E3 DUP5 DUP3 DUP6 ADD PUSH2 0x575 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x626 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x60B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x635 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x646 DUP3 PUSH2 0x5EC JUMP JUMPDEST PUSH2 0x650 DUP2 DUP6 PUSH2 0x5F7 JUMP JUMPDEST SWAP4 POP PUSH2 0x660 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x608 JUMP JUMPDEST PUSH2 0x669 DUP2 PUSH2 0x467 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x68E DUP2 DUP5 PUSH2 0x63B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6A9 DUP2 PUSH2 0x696 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6C4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6A0 JUMP JUMPDEST PUSH2 0x6D1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6A0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4163636573732064656E6965642C204F6E6C79206F776E657220697320616C6C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F77656421000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x745 PUSH1 0x25 DUP4 PUSH2 0x6D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x750 DUP3 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x774 DUP2 PUSH2 0x738 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x791 DUP3 PUSH2 0x77B JUMP JUMPDEST PUSH2 0x79B DUP2 DUP6 PUSH2 0x6D8 JUMP JUMPDEST SWAP4 POP PUSH2 0x7AB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x608 JUMP JUMPDEST PUSH2 0x7B4 DUP2 PUSH2 0x467 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7D9 DUP2 DUP5 PUSH2 0x786 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x7FC JUMPI PUSH2 0x7FB PUSH2 0x478 JUMP JUMPDEST JUMPDEST PUSH2 0x805 DUP3 PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x825 PUSH2 0x820 DUP5 PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x4D8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x841 JUMPI PUSH2 0x840 PUSH2 0x462 JUMP JUMPDEST JUMPDEST PUSH2 0x84C DUP5 DUP3 DUP6 PUSH2 0x608 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x869 JUMPI PUSH2 0x868 PUSH2 0x45D JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x879 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x812 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x898 JUMPI PUSH2 0x897 PUSH2 0x453 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8B6 JUMPI PUSH2 0x8B5 PUSH2 0x458 JUMP JUMPDEST JUMPDEST PUSH2 0x8C2 DUP5 DUP3 DUP6 ADD PUSH2 0x854 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x912 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x926 JUMPI PUSH2 0x925 PUSH2 0x8CB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x959 DUP2 PUSH2 0x8FA JUMP JUMPDEST PUSH2 0x963 DUP2 DUP7 PUSH2 0x92C JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x97E JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x98F JUMPI PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 DUP7 ADD SWAP4 POP PUSH2 0x9C2 JUMP JUMPDEST PUSH2 0x998 DUP6 PUSH2 0x937 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9BA JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x99B JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D7 DUP3 DUP5 PUSH2 0x94C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA4B DUP3 PUSH2 0x696 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xA7E JUMPI PUSH2 0xA7D PUSH2 0xA11 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA1 DUP3 PUSH2 0xA89 JUMP JUMPDEST SWAP2 POP PUSH2 0xAAC DUP4 PUSH2 0xA89 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xABF JUMPI PUSH2 0xABE PUSH2 0xA11 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xF BASEFEE 0x29 KECCAK256 LOG0 PUSH18 0x982F732BFC17FE8CBEF06EA25A2D7D2066F6 GAS 0xBF 0xD4 0xBD PUSH9 0xD1AF64736F6C634300 ADDMOD EXP STOP CALLER ",
							"sourceMap": "165:3000:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1881:119;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2551:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2006:174;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1881:119;588:26;:24;:26::i;:::-;574:40;;:10;:40;;;553:124;;;;;;;;;;;;:::i;:::-;;;;;;;;;1970:4:::1;:14;;;1985:7;1970:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1960:1;:7;;:33;;;;;;;;;;;;:::i;:::-;;1881:119:::0;:::o;2551:138::-;2630:12;2667:14;2673:7;2667:5;:14::i;:::-;2654:28;;2551:138;;;:::o;2006:174::-;2095:7;2104;2135:1;:8;;2144:1;:7;;2135:17;;;;;;:::i;:::-;;;;;;;;;;;;;;2154:1;:8;;2163:1;:8;;2154:18;;;;;;:::i;:::-;;;;;;;;;;;;;;2127:46;;;;2006:174;;:::o;1669:136:3:-;1717:22;1768:16;:14;:16::i;:::-;:30;;;;;;;;;;;;1751:47;;1669:136;:::o;2695:280:1:-;2754:13;2779:23;2811:5;2779:38;;2832:6;2827:107;2848:10;:17;2844:1;:21;2827:107;;;2902:21;2909:10;2920:1;2909:13;;;;;;;;:::i;:::-;;;;;;;;;;2902:6;:21::i;:::-;2886:10;2897:1;2886:13;;;;;;;;:::i;:::-;;;;;:37;;;;;;;;;;;2867:3;;;;;:::i;:::-;;;;2827:107;;;;2957:10;2943:25;;;2695:280;;;:::o;1056:225:3:-;1129:25;1170:16;530:45;1170:43;;1257:8;1246:19;;1232:43;1056:225;:::o;2981:182:1:-;3031:6;3060:4;3053:11;;:3;:11;;;;;:26;;;;;3075:4;3068:11;;:3;:11;;;;;3053:26;3049:87;;;3122:2;3115:3;3109:10;;:15;;;;:::i;:::-;3102:23;;3095:30;;;;3049:87;3153:3;3146:10;;2981:182;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:4:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:154::-;1694:6;1689:3;1684;1671:30;1756:1;1747:6;1742:3;1738:16;1731:27;1610:154;;;:::o;1770:412::-;1848:5;1873:66;1889:49;1931:6;1889:49;:::i;:::-;1873:66;:::i;:::-;1864:75;;1962:6;1955:5;1948:21;2000:4;1993:5;1989:16;2038:3;2029:6;2024:3;2020:16;2017:25;2014:112;;;2045:79;;:::i;:::-;2014:112;2135:41;2169:6;2164:3;2159;2135:41;:::i;:::-;1854:328;1770:412;;;;;:::o;2202:340::-;2258:5;2307:3;2300:4;2292:6;2288:17;2284:27;2274:122;;2315:79;;:::i;:::-;2274:122;2432:6;2419:20;2457:79;2532:3;2524:6;2517:4;2509:6;2505:17;2457:79;:::i;:::-;2448:88;;2264:278;2202:340;;;;:::o;2548:509::-;2617:6;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2820:1;2809:9;2805:17;2792:31;2850:18;2842:6;2839:30;2836:117;;;2872:79;;:::i;:::-;2836:117;2977:63;3032:7;3023:6;3012:9;3008:22;2977:63;:::i;:::-;2967:73;;2763:287;2548:509;;;;:::o;3063:98::-;3114:6;3148:5;3142:12;3132:22;;3063:98;;;:::o;3167:168::-;3250:11;3284:6;3279:3;3272:19;3324:4;3319:3;3315:14;3300:29;;3167:168;;;;:::o;3341:307::-;3409:1;3419:113;3433:6;3430:1;3427:13;3419:113;;;3518:1;3513:3;3509:11;3503:18;3499:1;3494:3;3490:11;3483:39;3455:2;3452:1;3448:10;3443:15;;3419:113;;;3550:6;3547:1;3544:13;3541:101;;;3630:1;3621:6;3616:3;3612:16;3605:27;3541:101;3390:258;3341:307;;;:::o;3654:360::-;3740:3;3768:38;3800:5;3768:38;:::i;:::-;3822:70;3885:6;3880:3;3822:70;:::i;:::-;3815:77;;3901:52;3946:6;3941:3;3934:4;3927:5;3923:16;3901:52;:::i;:::-;3978:29;4000:6;3978:29;:::i;:::-;3973:3;3969:39;3962:46;;3744:270;3654:360;;;;:::o;4020:309::-;4131:4;4169:2;4158:9;4154:18;4146:26;;4218:9;4212:4;4208:20;4204:1;4193:9;4189:17;4182:47;4246:76;4317:4;4308:6;4246:76;:::i;:::-;4238:84;;4020:309;;;;:::o;4335:77::-;4372:7;4401:5;4390:16;;4335:77;;;:::o;4418:118::-;4505:24;4523:5;4505:24;:::i;:::-;4500:3;4493:37;4418:118;;:::o;4542:332::-;4663:4;4701:2;4690:9;4686:18;4678:26;;4714:71;4782:1;4771:9;4767:17;4758:6;4714:71;:::i;:::-;4795:72;4863:2;4852:9;4848:18;4839:6;4795:72;:::i;:::-;4542:332;;;;;:::o;4880:169::-;4964:11;4998:6;4993:3;4986:19;5038:4;5033:3;5029:14;5014:29;;4880:169;;;;:::o;5055:224::-;5195:34;5191:1;5183:6;5179:14;5172:58;5264:7;5259:2;5251:6;5247:15;5240:32;5055:224;:::o;5285:366::-;5427:3;5448:67;5512:2;5507:3;5448:67;:::i;:::-;5441:74;;5524:93;5613:3;5524:93;:::i;:::-;5642:2;5637:3;5633:12;5626:19;;5285:366;;;:::o;5657:419::-;5823:4;5861:2;5850:9;5846:18;5838:26;;5910:9;5904:4;5900:20;5896:1;5885:9;5881:17;5874:47;5938:131;6064:4;5938:131;:::i;:::-;5930:139;;5657:419;;;:::o;6082:99::-;6134:6;6168:5;6162:12;6152:22;;6082:99;;;:::o;6187:364::-;6275:3;6303:39;6336:5;6303:39;:::i;:::-;6358:71;6422:6;6417:3;6358:71;:::i;:::-;6351:78;;6438:52;6483:6;6478:3;6471:4;6464:5;6460:16;6438:52;:::i;:::-;6515:29;6537:6;6515:29;:::i;:::-;6510:3;6506:39;6499:46;;6279:272;6187:364;;;;:::o;6557:313::-;6670:4;6708:2;6697:9;6693:18;6685:26;;6757:9;6751:4;6747:20;6743:1;6732:9;6728:17;6721:47;6785:78;6858:4;6849:6;6785:78;:::i;:::-;6777:86;;6557:313;;;;:::o;6876:307::-;6937:4;7027:18;7019:6;7016:30;7013:56;;;7049:18;;:::i;:::-;7013:56;7087:29;7109:6;7087:29;:::i;:::-;7079:37;;7171:4;7165;7161:15;7153:23;;6876:307;;;:::o;7189:419::-;7277:5;7302:65;7318:48;7359:6;7318:48;:::i;:::-;7302:65;:::i;:::-;7293:74;;7390:6;7383:5;7376:21;7428:4;7421:5;7417:16;7466:3;7457:6;7452:3;7448:16;7445:25;7442:112;;;7473:79;;:::i;:::-;7442:112;7563:39;7595:6;7590:3;7585;7563:39;:::i;:::-;7283:325;7189:419;;;;;:::o;7627:353::-;7693:5;7742:3;7735:4;7727:6;7723:17;7719:27;7709:122;;7750:79;;:::i;:::-;7709:122;7860:6;7854:13;7885:89;7970:3;7962:6;7955:4;7947:6;7943:17;7885:89;:::i;:::-;7876:98;;7699:281;7627:353;;;;:::o;7986:522::-;8065:6;8114:2;8102:9;8093:7;8089:23;8085:32;8082:119;;;8120:79;;:::i;:::-;8082:119;8261:1;8250:9;8246:17;8240:24;8291:18;8283:6;8280:30;8277:117;;;8313:79;;:::i;:::-;8277:117;8418:73;8483:7;8474:6;8463:9;8459:22;8418:73;:::i;:::-;8408:83;;8211:290;7986:522;;;;:::o;8514:180::-;8562:77;8559:1;8552:88;8659:4;8656:1;8649:15;8683:4;8680:1;8673:15;8700:320;8744:6;8781:1;8775:4;8771:12;8761:22;;8828:1;8822:4;8818:12;8849:18;8839:81;;8905:4;8897:6;8893:17;8883:27;;8839:81;8967:2;8959:6;8956:14;8936:18;8933:38;8930:84;;;8986:18;;:::i;:::-;8930:84;8751:269;8700:320;;;:::o;9026:147::-;9127:11;9164:3;9149:18;;9026:147;;;;:::o;9179:140::-;9227:4;9250:3;9242:11;;9273:3;9270:1;9263:14;9307:4;9304:1;9294:18;9286:26;;9179:140;;;:::o;9347:841::-;9448:3;9485:5;9479:12;9514:36;9540:9;9514:36;:::i;:::-;9566:88;9647:6;9642:3;9566:88;:::i;:::-;9559:95;;9685:1;9674:9;9670:17;9701:1;9696:137;;;;9847:1;9842:340;;;;9663:519;;9696:137;9780:4;9776:9;9765;9761:25;9756:3;9749:38;9816:6;9811:3;9807:16;9800:23;;9696:137;;9842:340;9909:37;9940:5;9909:37;:::i;:::-;9968:1;9982:154;9996:6;9993:1;9990:13;9982:154;;;10070:7;10064:14;10060:1;10055:3;10051:11;10044:35;10120:1;10111:7;10107:15;10096:26;;10018:4;10015:1;10011:12;10006:17;;9982:154;;;10165:6;10160:3;10156:16;10149:23;;9849:333;;9663:519;;9452:736;;9347:841;;;;:::o;10194:265::-;10321:3;10343:90;10429:3;10420:6;10343:90;:::i;:::-;10336:97;;10450:3;10443:10;;10194:265;;;;:::o;10465:180::-;10513:77;10510:1;10503:88;10610:4;10607:1;10600:15;10634:4;10631:1;10624:15;10651:180;10699:77;10696:1;10689:88;10796:4;10793:1;10786:15;10820:4;10817:1;10810:15;10837:233;10876:3;10899:24;10917:5;10899:24;:::i;:::-;10890:33;;10945:66;10938:5;10935:77;10932:103;;;11015:18;;:::i;:::-;10932:103;11062:1;11055:5;11051:13;11044:20;;10837:233;;;:::o;11076:86::-;11111:7;11151:4;11144:5;11140:16;11129:27;;11076:86;;;:::o;11168:185::-;11206:4;11226:18;11242:1;11226:18;:::i;:::-;11221:23;;11258:18;11274:1;11258:18;:::i;:::-;11253:23;;11295:1;11292;11289:8;11286:34;;;11300:18;;:::i;:::-;11286:34;11345:1;11342;11338:9;11330:17;;11168:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "563200",
								"executionCost": "594",
								"totalCost": "563794"
							},
							"external": {
								"converter(string)": "infinite",
								"getStakingAndBuyingTokenPrices()": "infinite",
								"setNairaUSDTicker(string)": "infinite"
							},
							"internal": {
								"_upper(bytes1)": "infinite",
								"upper(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 165,
									"end": 3165,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 165,
									"end": 3165,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 165,
									"end": 3165,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 165,
									"end": 3165,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 165,
									"end": 3165,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 165,
									"end": 3165,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 165,
									"end": 3165,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 165,
									"end": 3165,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 165,
									"end": 3165,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 3165,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 165,
									"end": 3165,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 165,
									"end": 3165,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 165,
									"end": 3165,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 165,
									"end": 3165,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 165,
									"end": 3165,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 165,
									"end": 3165,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 165,
									"end": 3165,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 165,
									"end": 3165,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 3165,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 165,
									"end": 3165,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 3165,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220870f482920a071982f732bfc17fe8cbef06ea25a2d7d2066f65abfd4bd68d1af64736f6c634300080a0033",
									".code": [
										{
											"begin": 165,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "267561C8"
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "94A72F1C"
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "FC3A49E0"
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 165,
											"end": 3165,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 588,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 588,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 588,
											"end": 614,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 614,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 588,
											"end": 614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 574,
											"end": 614,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 574,
											"end": 614,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 574,
											"end": 584,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 574,
											"end": 614,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 574,
											"end": 614,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 574,
											"end": 614,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 553,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 553,
											"end": 677,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 553,
											"end": 677,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 677,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 677,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 553,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 553,
											"end": 677,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 553,
											"end": 677,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 553,
											"end": 677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 553,
											"end": 677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 553,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 553,
											"end": 677,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 553,
											"end": 677,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 553,
											"end": 677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 553,
											"end": 677,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 677,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 677,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 553,
											"end": 677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 553,
											"end": 677,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 553,
											"end": 677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 553,
											"end": 677,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 553,
											"end": 677,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 553,
											"end": 677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1974,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1984,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1970,
											"end": 1984,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1984,
											"name": "PUSH",
											"source": 1,
											"value": "94A72F1C"
										},
										{
											"begin": 1985,
											"end": 1992,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1967,
											"name": "PUSH",
											"source": 1,
											"value": "3D"
										},
										{
											"begin": 1960,
											"end": 1967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 2000,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2630,
											"end": 2642,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2667,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2673,
											"end": 2680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2667,
											"end": 2681,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2667,
											"end": 2681,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2667,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2689,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2095,
											"end": 2102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2104,
											"end": 2111,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2145,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2151,
											"name": "PUSH",
											"source": 1,
											"value": "3D"
										},
										{
											"begin": 2144,
											"end": 2151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2152,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2152,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2135,
											"end": 2152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2135,
											"end": 2152,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2152,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2135,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2152,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2135,
											"end": 2152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2152,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2135,
											"end": 2152,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2152,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2152,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2152,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2135,
											"end": 2152,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2162,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2171,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2163,
											"end": 2171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2172,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2180,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1669,
											"end": 1805,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1669,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1717,
											"end": 1739,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1768,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1768,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1768,
											"end": 1784,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1768,
											"end": 1784,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1768,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1798,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1768,
											"end": 1798,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1798,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1768,
											"end": 1798,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1798,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1798,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1798,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1768,
											"end": 1798,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1798,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1798,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1798,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1768,
											"end": 1798,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1751,
											"end": 1798,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1751,
											"end": 1798,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1669,
											"end": 1805,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2695,
											"end": 2975,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2695,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2767,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2779,
											"end": 2802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2827,
											"end": 2934,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2827,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2858,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2865,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2934,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2827,
											"end": 2934,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2909,
											"end": 2919,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2922,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2922,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2909,
											"end": 2922,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2909,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2909,
											"end": 2922,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2909,
											"end": 2922,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2909,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2922,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2909,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2922,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2909,
											"end": 2922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2922,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2922,
											"name": "PUSH",
											"source": 1,
											"value": "F8"
										},
										{
											"begin": 2909,
											"end": 2922,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2922,
											"name": "PUSH",
											"source": 1,
											"value": "F8"
										},
										{
											"begin": 2909,
											"end": 2922,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2902,
											"end": 2923,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2902,
											"end": 2923,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2902,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2898,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2899,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2899,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2886,
											"end": 2899,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2886,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2886,
											"end": 2899,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2886,
											"end": 2899,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2886,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2899,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2886,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2899,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2886,
											"end": 2899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2886,
											"end": 2923,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2886,
											"end": 2923,
											"name": "BYTE",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2923,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2923,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2867,
											"end": 2870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2867,
											"end": 2870,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2867,
											"end": 2870,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2867,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2827,
											"end": 2934,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2934,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2827,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2695,
											"end": 2975,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2695,
											"end": 2975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2695,
											"end": 2975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2695,
											"end": 2975,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1056,
											"end": 1281,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1056,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1129,
											"end": 1154,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1186,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 530,
											"end": 575,
											"name": "PUSH",
											"source": 3,
											"value": "C8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C"
										},
										{
											"begin": 1170,
											"end": 1213,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1170,
											"end": 1213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1265,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1246,
											"end": 1265,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1275,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1281,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2981,
											"end": 3163,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2981,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3031,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3053,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "F8"
										},
										{
											"begin": 3053,
											"end": 3064,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3056,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3053,
											"end": 3064,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3064,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3064,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3079,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3079,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3053,
											"end": 3079,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3079,
											"name": "PUSH",
											"source": 1,
											"value": "7A"
										},
										{
											"begin": 3068,
											"end": 3079,
											"name": "PUSH",
											"source": 1,
											"value": "F8"
										},
										{
											"begin": 3068,
											"end": 3079,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3079,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3068,
											"end": 3079,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3079,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3079,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3079,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3079,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3053,
											"end": 3079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3136,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3049,
											"end": 3136,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3115,
											"end": 3118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3119,
											"name": "PUSH",
											"source": 1,
											"value": "F8"
										},
										{
											"begin": 3109,
											"end": 3119,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3109,
											"end": 3124,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3109,
											"end": 3124,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3109,
											"end": 3124,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3109,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3102,
											"end": 3125,
											"name": "PUSH",
											"source": 1,
											"value": "F8"
										},
										{
											"begin": 3102,
											"end": 3125,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3095,
											"end": 3125,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3136,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3049,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 3156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3163,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2981,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3163,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "64"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "66"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "66"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 580,
											"end": 682,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 580,
											"end": 682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 621,
											"end": 627,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 674,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 668,
											"end": 675,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 663,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 656,
											"end": 661,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 652,
											"end": 666,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 648,
											"end": 676,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 638,
											"end": 676,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 638,
											"end": 676,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 580,
											"end": 682,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 580,
											"end": 682,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 688,
											"end": 868,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 688,
											"end": 868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 736,
											"end": 813,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 733,
											"end": 734,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 814,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 833,
											"end": 837,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 823,
											"end": 838,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 857,
											"end": 861,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 854,
											"end": 855,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 862,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 979,
											"end": 983,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 957,
											"end": 984,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 957,
											"end": 984,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 957,
											"end": 984,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 949,
											"end": 955,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 945,
											"end": 985,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1049,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1070,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1033,
											"end": 1095,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1138,
											"end": 1148,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1149,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1195,
											"end": 1201,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1279,
											"end": 1283,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1277,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1466,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1440,
											"end": 1446,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1437,
											"end": 1467,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1530,
											"end": 1536,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1596,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1590,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1582,
											"end": 1597,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1764,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1610,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1700,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1689,
											"end": 1692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1687,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1701,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1757,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1747,
											"end": 1753,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1742,
											"end": 1745,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 1754,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1758,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1610,
											"end": 1764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1610,
											"end": 1764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1610,
											"end": 1764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1610,
											"end": 1764,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1770,
											"end": 2182,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1770,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1889,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1931,
											"end": 1937,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1889,
											"end": 1938,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1889,
											"end": 1938,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1889,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1873,
											"end": 1939,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1873,
											"end": 1939,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1873,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 1939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 1939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 1960,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1948,
											"end": 1969,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2000,
											"end": 2004,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 1998,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2041,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2035,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2027,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2042,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2014,
											"end": 2126,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2014,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2014,
											"end": 2126,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2045,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2045,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2045,
											"end": 2124,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2045,
											"end": 2124,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2045,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2014,
											"end": 2126,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2014,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2167,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2162,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2182,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 2182,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 2182,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 2182,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 2182,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 2182,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 2182,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2202,
											"end": 2542,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2202,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2263,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2310,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2300,
											"end": 2304,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2292,
											"end": 2298,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2288,
											"end": 2305,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2284,
											"end": 2311,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2274,
											"end": 2396,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2315,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2315,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2315,
											"end": 2394,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2315,
											"end": 2394,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2315,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2396,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2274,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2439,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2532,
											"end": 2535,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2524,
											"end": 2530,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2517,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2515,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2522,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2457,
											"end": 2536,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2457,
											"end": 2536,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2457,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2536,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2264,
											"end": 2542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2542,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2542,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2542,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2548,
											"end": 3057,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2548,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2666,
											"end": 2668,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2654,
											"end": 2663,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2652,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2641,
											"end": 2664,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2637,
											"end": 2669,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 2821,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2818,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2822,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2823,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2868,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2842,
											"end": 2848,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2869,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2836,
											"end": 2953,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2836,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2836,
											"end": 2953,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2872,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2872,
											"end": 2951,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2872,
											"end": 2951,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2872,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2836,
											"end": 2953,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2836,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2977,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 3032,
											"end": 3039,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3012,
											"end": 3021,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3030,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2977,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2977,
											"end": 3040,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2977,
											"end": 3040,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2977,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2967,
											"end": 3040,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2967,
											"end": 3040,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2763,
											"end": 3050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 3057,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 3057,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 3057,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 3057,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 3057,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3063,
											"end": 3161,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 3063,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3153,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3142,
											"end": 3154,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3132,
											"end": 3154,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3132,
											"end": 3154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3063,
											"end": 3161,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3063,
											"end": 3161,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3063,
											"end": 3161,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3063,
											"end": 3161,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3167,
											"end": 3335,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3167,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3284,
											"end": 3290,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3279,
											"end": 3282,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3272,
											"end": 3291,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3324,
											"end": 3328,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3322,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3329,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3329,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3167,
											"end": 3335,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3167,
											"end": 3335,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3167,
											"end": 3335,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3167,
											"end": 3335,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3167,
											"end": 3335,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3341,
											"end": 3648,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3341,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3409,
											"end": 3410,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3532,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 3419,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3433,
											"end": 3439,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3440,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3532,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3419,
											"end": 3532,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3518,
											"end": 3519,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3516,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3520,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3494,
											"end": 3497,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3490,
											"end": 3501,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3483,
											"end": 3522,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3448,
											"end": 3458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3443,
											"end": 3458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3443,
											"end": 3458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 3419,
											"end": 3532,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3532,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3419,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3550,
											"end": 3556,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3547,
											"end": 3548,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3557,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3541,
											"end": 3642,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3541,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3541,
											"end": 3642,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3631,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3621,
											"end": 3627,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3619,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3612,
											"end": 3628,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3605,
											"end": 3632,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3541,
											"end": 3642,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3541,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3648,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3654,
											"end": 4014,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3654,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3740,
											"end": 3743,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3768,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3800,
											"end": 3805,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3768,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 3768,
											"end": 3806,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3768,
											"end": 3806,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3768,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3885,
											"end": 3891,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3880,
											"end": 3883,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3822,
											"end": 3892,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3822,
											"end": 3892,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3822,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3815,
											"end": 3892,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3815,
											"end": 3892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3901,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3946,
											"end": 3952,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3944,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3938,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3927,
											"end": 3932,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3923,
											"end": 3939,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3901,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3901,
											"end": 3953,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3901,
											"end": 3953,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3901,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3978,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4000,
											"end": 4006,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3978,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3978,
											"end": 4007,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3978,
											"end": 4007,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3978,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3976,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 4008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3962,
											"end": 4008,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3962,
											"end": 4008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3744,
											"end": 4014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 4014,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 4014,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 4014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 4014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 4014,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4020,
											"end": 4329,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 4020,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4131,
											"end": 4135,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4171,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4158,
											"end": 4167,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4146,
											"end": 4172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4146,
											"end": 4172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4218,
											"end": 4227,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4212,
											"end": 4216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4208,
											"end": 4228,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4205,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4193,
											"end": 4202,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4189,
											"end": 4206,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4182,
											"end": 4229,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4246,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4317,
											"end": 4321,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4314,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4246,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4246,
											"end": 4322,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4246,
											"end": 4322,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4246,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4329,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4329,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4329,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4329,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4329,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4335,
											"end": 4412,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 4335,
											"end": 4412,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4372,
											"end": 4379,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4406,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4390,
											"end": 4406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4390,
											"end": 4406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4335,
											"end": 4412,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4335,
											"end": 4412,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4335,
											"end": 4412,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4335,
											"end": 4412,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4418,
											"end": 4536,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 4418,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4505,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 4523,
											"end": 4528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4505,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 4505,
											"end": 4529,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4505,
											"end": 4529,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 4505,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4503,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4493,
											"end": 4530,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4418,
											"end": 4536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4418,
											"end": 4536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4418,
											"end": 4536,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4542,
											"end": 4874,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 4542,
											"end": 4874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4663,
											"end": 4667,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4701,
											"end": 4703,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4690,
											"end": 4699,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4686,
											"end": 4704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4678,
											"end": 4704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4678,
											"end": 4704,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4714,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4782,
											"end": 4783,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4771,
											"end": 4780,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4784,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4758,
											"end": 4764,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4714,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 4714,
											"end": 4785,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4714,
											"end": 4785,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4714,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4795,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4863,
											"end": 4865,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4852,
											"end": 4861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 4866,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4839,
											"end": 4845,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4795,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 4795,
											"end": 4867,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4795,
											"end": 4867,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4795,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4542,
											"end": 4874,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4542,
											"end": 4874,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4542,
											"end": 4874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4542,
											"end": 4874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4542,
											"end": 4874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4542,
											"end": 4874,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4880,
											"end": 5049,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4880,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4975,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 5004,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4993,
											"end": 4996,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4986,
											"end": 5005,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5038,
											"end": 5042,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5033,
											"end": 5036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5029,
											"end": 5043,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4880,
											"end": 5049,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4880,
											"end": 5049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4880,
											"end": 5049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4880,
											"end": 5049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4880,
											"end": 5049,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5055,
											"end": 5279,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 5055,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5195,
											"end": 5229,
											"name": "PUSH",
											"source": 4,
											"value": "4163636573732064656E6965642C204F6E6C79206F776E657220697320616C6C"
										},
										{
											"begin": 5191,
											"end": 5192,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5179,
											"end": 5193,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5172,
											"end": 5230,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5264,
											"end": 5271,
											"name": "PUSH",
											"source": 4,
											"value": "6F77656421000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5259,
											"end": 5261,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5251,
											"end": 5257,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5247,
											"end": 5262,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5055,
											"end": 5279,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5055,
											"end": 5279,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5285,
											"end": 5651,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5285,
											"end": 5651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5427,
											"end": 5430,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5448,
											"end": 5515,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5512,
											"end": 5514,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 5507,
											"end": 5510,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5448,
											"end": 5515,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 5448,
											"end": 5515,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5448,
											"end": 5515,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5448,
											"end": 5515,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5441,
											"end": 5515,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5441,
											"end": 5515,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5524,
											"end": 5617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 5613,
											"end": 5616,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5524,
											"end": 5617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 5524,
											"end": 5617,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5524,
											"end": 5617,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 5524,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5642,
											"end": 5644,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5637,
											"end": 5640,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5633,
											"end": 5645,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5626,
											"end": 5645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5626,
											"end": 5645,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5285,
											"end": 5651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5285,
											"end": 5651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5285,
											"end": 5651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5285,
											"end": 5651,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5657,
											"end": 6076,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5657,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5823,
											"end": 5827,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5861,
											"end": 5863,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5850,
											"end": 5859,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5846,
											"end": 5864,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5838,
											"end": 5864,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5838,
											"end": 5864,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5904,
											"end": 5908,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5920,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5896,
											"end": 5897,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5885,
											"end": 5894,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5921,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 6064,
											"end": 6068,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5938,
											"end": 6069,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5938,
											"end": 6069,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 5938,
											"end": 6069,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 6069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 6069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5657,
											"end": 6076,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5657,
											"end": 6076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5657,
											"end": 6076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5657,
											"end": 6076,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6082,
											"end": 6181,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 6082,
											"end": 6181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6134,
											"end": 6140,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6168,
											"end": 6173,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6162,
											"end": 6174,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6152,
											"end": 6174,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6152,
											"end": 6174,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6082,
											"end": 6181,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6082,
											"end": 6181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6082,
											"end": 6181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6082,
											"end": 6181,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6187,
											"end": 6551,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 6187,
											"end": 6551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6275,
											"end": 6278,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6303,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 6336,
											"end": 6341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6303,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 6303,
											"end": 6342,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6303,
											"end": 6342,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 6303,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 6422,
											"end": 6428,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6417,
											"end": 6420,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 6358,
											"end": 6429,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6358,
											"end": 6429,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 6358,
											"end": 6429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6351,
											"end": 6429,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6351,
											"end": 6429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6438,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 6483,
											"end": 6489,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6478,
											"end": 6481,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6471,
											"end": 6475,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6464,
											"end": 6469,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6460,
											"end": 6476,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6438,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 6438,
											"end": 6490,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6438,
											"end": 6490,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 6438,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6515,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 6537,
											"end": 6543,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6515,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 6515,
											"end": 6544,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6515,
											"end": 6544,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 6515,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6510,
											"end": 6513,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6506,
											"end": 6545,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6499,
											"end": 6545,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6499,
											"end": 6545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6279,
											"end": 6551,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6187,
											"end": 6551,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6187,
											"end": 6551,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6187,
											"end": 6551,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6187,
											"end": 6551,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6187,
											"end": 6551,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6557,
											"end": 6870,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 6557,
											"end": 6870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6670,
											"end": 6674,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6708,
											"end": 6710,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6697,
											"end": 6706,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6685,
											"end": 6711,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6685,
											"end": 6711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6757,
											"end": 6766,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6751,
											"end": 6755,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6747,
											"end": 6767,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6743,
											"end": 6744,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 6741,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6728,
											"end": 6745,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6721,
											"end": 6768,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6785,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 6858,
											"end": 6862,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6849,
											"end": 6855,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6785,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 6785,
											"end": 6863,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6785,
											"end": 6863,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 6785,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6777,
											"end": 6863,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6777,
											"end": 6863,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6870,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6870,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6870,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6870,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6870,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6876,
											"end": 7183,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 6876,
											"end": 7183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6937,
											"end": 6941,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7027,
											"end": 7045,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7019,
											"end": 7025,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7016,
											"end": 7046,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7013,
											"end": 7069,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7013,
											"end": 7069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 7013,
											"end": 7069,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7049,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 7049,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 7049,
											"end": 7067,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7049,
											"end": 7067,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 7049,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7013,
											"end": 7069,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 7013,
											"end": 7069,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 7109,
											"end": 7115,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 7087,
											"end": 7116,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7087,
											"end": 7116,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 7087,
											"end": 7116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7079,
											"end": 7116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7079,
											"end": 7116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7171,
											"end": 7175,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7165,
											"end": 7169,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7161,
											"end": 7176,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7153,
											"end": 7176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7153,
											"end": 7176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6876,
											"end": 7183,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6876,
											"end": 7183,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6876,
											"end": 7183,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6876,
											"end": 7183,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7189,
											"end": 7608,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 7189,
											"end": 7608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7277,
											"end": 7282,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7302,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7318,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 7359,
											"end": 7365,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7318,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7318,
											"end": 7366,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7318,
											"end": 7366,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 7318,
											"end": 7366,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7302,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 7302,
											"end": 7367,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7302,
											"end": 7367,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7302,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7293,
											"end": 7367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7293,
											"end": 7367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7390,
											"end": 7396,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7383,
											"end": 7388,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7376,
											"end": 7397,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7428,
											"end": 7432,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7421,
											"end": 7426,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7417,
											"end": 7433,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7466,
											"end": 7469,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7457,
											"end": 7463,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7452,
											"end": 7455,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7448,
											"end": 7464,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7445,
											"end": 7470,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7442,
											"end": 7554,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7442,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 7442,
											"end": 7554,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7473,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 7473,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 7473,
											"end": 7552,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7473,
											"end": 7552,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 7473,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7442,
											"end": 7554,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 7442,
											"end": 7554,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7563,
											"end": 7602,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 7595,
											"end": 7601,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7590,
											"end": 7593,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7585,
											"end": 7588,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7563,
											"end": 7602,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 7563,
											"end": 7602,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7563,
											"end": 7602,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 7563,
											"end": 7602,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7283,
											"end": 7608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7189,
											"end": 7608,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7189,
											"end": 7608,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7189,
											"end": 7608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7189,
											"end": 7608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7189,
											"end": 7608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7189,
											"end": 7608,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7627,
											"end": 7980,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7627,
											"end": 7980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7693,
											"end": 7698,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7742,
											"end": 7745,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7735,
											"end": 7739,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7727,
											"end": 7733,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7723,
											"end": 7740,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7719,
											"end": 7746,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 7709,
											"end": 7831,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7750,
											"end": 7829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 7750,
											"end": 7829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 7750,
											"end": 7829,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7750,
											"end": 7829,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 7750,
											"end": 7829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7831,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 7709,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7860,
											"end": 7866,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7854,
											"end": 7867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7885,
											"end": 7974,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 7970,
											"end": 7973,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7962,
											"end": 7968,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7947,
											"end": 7953,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 7960,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7885,
											"end": 7974,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 7885,
											"end": 7974,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7885,
											"end": 7974,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 7885,
											"end": 7974,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7876,
											"end": 7974,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7876,
											"end": 7974,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7699,
											"end": 7980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7627,
											"end": 7980,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7627,
											"end": 7980,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7627,
											"end": 7980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7627,
											"end": 7980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7627,
											"end": 7980,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7986,
											"end": 8508,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 7986,
											"end": 8508,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8065,
											"end": 8071,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8114,
											"end": 8116,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8102,
											"end": 8111,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8093,
											"end": 8100,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8089,
											"end": 8112,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8085,
											"end": 8117,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 8082,
											"end": 8201,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8082,
											"end": 8201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 8082,
											"end": 8201,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8120,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 8120,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 8120,
											"end": 8199,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8120,
											"end": 8199,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 8120,
											"end": 8199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8082,
											"end": 8201,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 8082,
											"end": 8201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8261,
											"end": 8262,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8250,
											"end": 8259,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8246,
											"end": 8263,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8240,
											"end": 8264,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8291,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8283,
											"end": 8289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8280,
											"end": 8310,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 8277,
											"end": 8394,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8277,
											"end": 8394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 8277,
											"end": 8394,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8313,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 8313,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 8313,
											"end": 8392,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8313,
											"end": 8392,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 8313,
											"end": 8392,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8277,
											"end": 8394,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 8277,
											"end": 8394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8418,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 8483,
											"end": 8490,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8474,
											"end": 8480,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8463,
											"end": 8472,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8459,
											"end": 8481,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8418,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 8418,
											"end": 8491,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8418,
											"end": 8491,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 8418,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8408,
											"end": 8491,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8408,
											"end": 8491,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8211,
											"end": 8501,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7986,
											"end": 8508,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7986,
											"end": 8508,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7986,
											"end": 8508,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7986,
											"end": 8508,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7986,
											"end": 8508,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8514,
											"end": 8694,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 8514,
											"end": 8694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8562,
											"end": 8639,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8559,
											"end": 8560,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8552,
											"end": 8640,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8659,
											"end": 8663,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 8656,
											"end": 8657,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8649,
											"end": 8664,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8683,
											"end": 8687,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 8680,
											"end": 8681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8673,
											"end": 8688,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8700,
											"end": 9020,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 8700,
											"end": 9020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8744,
											"end": 8750,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8781,
											"end": 8782,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8775,
											"end": 8779,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8771,
											"end": 8783,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 8761,
											"end": 8783,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8761,
											"end": 8783,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8828,
											"end": 8829,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8822,
											"end": 8826,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8818,
											"end": 8830,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8849,
											"end": 8867,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8839,
											"end": 8920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 8839,
											"end": 8920,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8905,
											"end": 8909,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 8897,
											"end": 8903,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8893,
											"end": 8910,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8883,
											"end": 8910,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8883,
											"end": 8910,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8839,
											"end": 8920,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 8839,
											"end": 8920,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8967,
											"end": 8969,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8959,
											"end": 8965,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8956,
											"end": 8970,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8936,
											"end": 8954,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8933,
											"end": 8971,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8930,
											"end": 9014,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8930,
											"end": 9014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 8930,
											"end": 9014,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 8986,
											"end": 9004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8930,
											"end": 9014,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 8930,
											"end": 9014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8751,
											"end": 9020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8700,
											"end": 9020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8700,
											"end": 9020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8700,
											"end": 9020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8700,
											"end": 9020,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9026,
											"end": 9173,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 9026,
											"end": 9173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9127,
											"end": 9138,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9164,
											"end": 9167,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9149,
											"end": 9167,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9149,
											"end": 9167,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9026,
											"end": 9173,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9026,
											"end": 9173,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9026,
											"end": 9173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9026,
											"end": 9173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9026,
											"end": 9173,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9179,
											"end": 9319,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 9179,
											"end": 9319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9227,
											"end": 9231,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9250,
											"end": 9253,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9242,
											"end": 9253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9242,
											"end": 9253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9273,
											"end": 9276,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9270,
											"end": 9271,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9263,
											"end": 9277,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9307,
											"end": 9311,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9304,
											"end": 9305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9286,
											"end": 9312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9286,
											"end": 9312,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9179,
											"end": 9319,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9179,
											"end": 9319,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9179,
											"end": 9319,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9179,
											"end": 9319,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9347,
											"end": 10188,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 9347,
											"end": 10188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9448,
											"end": 9451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9485,
											"end": 9490,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9479,
											"end": 9491,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 9540,
											"end": 9549,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 9514,
											"end": 9550,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9514,
											"end": 9550,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 9514,
											"end": 9550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9566,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 9647,
											"end": 9653,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9642,
											"end": 9645,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9566,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 9566,
											"end": 9654,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9566,
											"end": 9654,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 9566,
											"end": 9654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9559,
											"end": 9654,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9559,
											"end": 9654,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9685,
											"end": 9686,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9674,
											"end": 9683,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9670,
											"end": 9687,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 9702,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9696,
											"end": 9833,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9696,
											"end": 9833,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9696,
											"end": 9833,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 9696,
											"end": 9833,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9847,
											"end": 9848,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9842,
											"end": 10182,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9842,
											"end": 10182,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9842,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 9842,
											"end": 10182,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9663,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 9663,
											"end": 10182,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9696,
											"end": 9833,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 9696,
											"end": 9833,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9780,
											"end": 9784,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 9776,
											"end": 9785,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 9765,
											"end": 9774,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9761,
											"end": 9786,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9756,
											"end": 9759,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9749,
											"end": 9787,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9816,
											"end": 9822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9811,
											"end": 9814,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9807,
											"end": 9823,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9800,
											"end": 9823,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9800,
											"end": 9823,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9696,
											"end": 9833,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 9696,
											"end": 9833,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9842,
											"end": 10182,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 9842,
											"end": 10182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9909,
											"end": 9946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9909,
											"end": 9946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 9909,
											"end": 9946,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9909,
											"end": 9946,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 9909,
											"end": 9946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9968,
											"end": 9969,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9982,
											"end": 10136,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 9982,
											"end": 10136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9996,
											"end": 10002,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9993,
											"end": 9994,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9990,
											"end": 10003,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9982,
											"end": 10136,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9982,
											"end": 10136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 9982,
											"end": 10136,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10070,
											"end": 10077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10078,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10060,
											"end": 10061,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10055,
											"end": 10058,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10062,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10044,
											"end": 10079,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10120,
											"end": 10121,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10111,
											"end": 10118,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10107,
											"end": 10122,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10096,
											"end": 10122,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10096,
											"end": 10122,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10018,
											"end": 10022,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10015,
											"end": 10016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10011,
											"end": 10023,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9982,
											"end": 10136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 9982,
											"end": 10136,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9982,
											"end": 10136,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 9982,
											"end": 10136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10165,
											"end": 10171,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10160,
											"end": 10163,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 10156,
											"end": 10172,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10149,
											"end": 10172,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 10149,
											"end": 10172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9849,
											"end": 10182,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9849,
											"end": 10182,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9663,
											"end": 10182,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 9663,
											"end": 10182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9663,
											"end": 10182,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 10188,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 10188,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9347,
											"end": 10188,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9347,
											"end": 10188,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9347,
											"end": 10188,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9347,
											"end": 10188,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9347,
											"end": 10188,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10194,
											"end": 10459,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 10194,
											"end": 10459,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10321,
											"end": 10324,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10343,
											"end": 10433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 10429,
											"end": 10432,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10420,
											"end": 10426,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10343,
											"end": 10433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 10343,
											"end": 10433,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10343,
											"end": 10433,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 10343,
											"end": 10433,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10336,
											"end": 10433,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10336,
											"end": 10433,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10450,
											"end": 10453,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10443,
											"end": 10453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10443,
											"end": 10453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10194,
											"end": 10459,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10194,
											"end": 10459,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10194,
											"end": 10459,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10194,
											"end": 10459,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10194,
											"end": 10459,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10465,
											"end": 10645,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 10465,
											"end": 10645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10513,
											"end": 10590,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10510,
											"end": 10511,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10503,
											"end": 10591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10610,
											"end": 10614,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 10607,
											"end": 10608,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10600,
											"end": 10615,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10634,
											"end": 10638,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 10631,
											"end": 10632,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10624,
											"end": 10639,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10651,
											"end": 10831,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 10651,
											"end": 10831,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10699,
											"end": 10776,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10696,
											"end": 10697,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10689,
											"end": 10777,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10796,
											"end": 10800,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 10793,
											"end": 10794,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10786,
											"end": 10801,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10820,
											"end": 10824,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 10817,
											"end": 10818,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10810,
											"end": 10825,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10837,
											"end": 11070,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 10837,
											"end": 11070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10876,
											"end": 10879,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10899,
											"end": 10923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 10917,
											"end": 10922,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10899,
											"end": 10923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 10899,
											"end": 10923,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10899,
											"end": 10923,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 10899,
											"end": 10923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10890,
											"end": 10923,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10890,
											"end": 10923,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10945,
											"end": 11011,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10938,
											"end": 10943,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10935,
											"end": 11012,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10932,
											"end": 11035,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10932,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 10932,
											"end": 11035,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11015,
											"end": 11033,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 11015,
											"end": 11033,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 11015,
											"end": 11033,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11015,
											"end": 11033,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 11015,
											"end": 11033,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10932,
											"end": 11035,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 10932,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11062,
											"end": 11063,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11055,
											"end": 11060,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11051,
											"end": 11064,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11044,
											"end": 11064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11044,
											"end": 11064,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10837,
											"end": 11070,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10837,
											"end": 11070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10837,
											"end": 11070,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10837,
											"end": 11070,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11076,
											"end": 11162,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 11076,
											"end": 11162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11111,
											"end": 11118,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11151,
											"end": 11155,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 11144,
											"end": 11149,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11140,
											"end": 11156,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11129,
											"end": 11156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11129,
											"end": 11156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11076,
											"end": 11162,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11076,
											"end": 11162,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11076,
											"end": 11162,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11076,
											"end": 11162,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11168,
											"end": 11353,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 11168,
											"end": 11353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11206,
											"end": 11210,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11226,
											"end": 11244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 11242,
											"end": 11243,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11226,
											"end": 11244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 11226,
											"end": 11244,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11226,
											"end": 11244,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 11226,
											"end": 11244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11221,
											"end": 11244,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11221,
											"end": 11244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11258,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 11274,
											"end": 11275,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11258,
											"end": 11276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 11258,
											"end": 11276,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11258,
											"end": 11276,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 11258,
											"end": 11276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11253,
											"end": 11276,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11253,
											"end": 11276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11295,
											"end": 11296,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11292,
											"end": 11293,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11289,
											"end": 11297,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11286,
											"end": 11320,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11286,
											"end": 11320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 11286,
											"end": 11320,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11300,
											"end": 11318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 11300,
											"end": 11318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 11300,
											"end": 11318,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11300,
											"end": 11318,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 11300,
											"end": 11318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11286,
											"end": 11320,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 11286,
											"end": 11320,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11345,
											"end": 11346,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11342,
											"end": 11343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11338,
											"end": 11347,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11330,
											"end": 11347,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11330,
											"end": 11347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11168,
											"end": 11353,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11168,
											"end": 11353,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11168,
											"end": 11353,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11168,
											"end": 11353,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11168,
											"end": 11353,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"converter(string)": "94a72f1c",
							"getStakingAndBuyingTokenPrices()": "fc3a49e0",
							"setNairaUSDTicker(string)": "267561c8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_ticker\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_pythia\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"PriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"PrinceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_pythia\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_addBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"PythiaAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_pythia\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_addBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"}],\"name\":\"PythiaSuspended\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_source\",\"type\":\"string\"}],\"name\":\"converter\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingAndBuyingTokenPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ticker\",\"type\":\"string\"}],\"name\":\"setNairaUSDTicker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/facets/PriceOracleFacet.sol\":\"PriceOracleFacet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/facets/AppStorage.sol\":{\"keccak256\":\"0x705e7a7d690d93fd82e486d413c45baae23cf7c5743a799ba721038ba9050bb0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4d139abac2e21c4568acd5271c03207b08e226635f632b6fe1fb570ec019aea\",\"dweb:/ipfs/QmXThTTTfnJp3dT6uQp9fbNRrxAxR3nsFqhk8QSZxCtvWA\"]},\"contracts/facets/PriceOracleFacet.sol\":{\"keccak256\":\"0x0b77d5c6b6e70b148f1f24162f59d4b240cbab326d900fa79b971238fa9fa684\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2593f23ee189584a4bc1cee99b425fa4da1aacd07e48361c95723c7db04e152d\",\"dweb:/ipfs/QmRwiohHit67UkGpm5sgfg7swDgykkHgh1Wfg3JbCvXw7Z\"]},\"contracts/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0x21afb9584ec8e432c2c17acd3700e4c99b2d2c5d941c899fd5997a65cc689d56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a128bfc29cfc74fbfcb1bba3363c88df9521b5de7fc53b9c11fddd9389224abd\",\"dweb:/ipfs/QmNfhvg7Aud1yXTZqzXTGdUf38tpv63Pbbuo3KKrYoRFrj\"]},\"contracts/libraries/LibDiamond.sol\":{\"keccak256\":\"0x4059248e993742cacdf0492134bbf0d504aab17f28299a706c9ca24b1a17fdf5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2940793983c72f0b2cfbe3dae334e0f327f89b1db096647df0494ca7e87f2757\",\"dweb:/ipfs/QmP8GdGLKnQUKN5n1TjVodVAvvFjcDkUgcKNn9vZK9ztL1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 249,
								"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
								"label": "s",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(AppStorage)241_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes_memory_ptr": {
								"encoding": "bytes",
								"label": "bytes",
								"numberOfBytes": "32"
							},
							"t_bytes_storage": {
								"encoding": "bytes",
								"label": "bytes",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_array(t_address)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address[])",
								"numberOfBytes": "32",
								"value": "t_array(t_address)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_bytes_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bytes)",
								"numberOfBytes": "32",
								"value": "t_bytes_storage"
							},
							"t_mapping(t_address,t_mapping(t_bool,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(bool => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_bool,t_uint256)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bool,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bool",
								"label": "mapping(bool => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes_memory_ptr,t_address)": {
								"encoding": "mapping",
								"key": "t_bytes_memory_ptr",
								"label": "mapping(bytes => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_bytes_memory_ptr,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes_memory_ptr",
								"label": "mapping(bytes => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes_memory_ptr,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_bytes_memory_ptr",
								"label": "mapping(bytes => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_bytes_memory_ptr,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes_memory_ptr",
								"label": "mapping(bytes => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => address))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_address)"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AppStorage)241_storage": {
								"encoding": "inplace",
								"label": "struct AppStorage",
								"members": [
									{
										"astId": 5,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "ticker",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_bytes_memory_ptr,t_uint256)"
									},
									{
										"astId": 9,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "pythia",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 14,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "myReferrals",
										"offset": 0,
										"slot": "2",
										"type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
									},
									{
										"astId": 18,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "staffId",
										"offset": 0,
										"slot": "3",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 20,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "eusdAddr",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									},
									{
										"astId": 22,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "egcAddr",
										"offset": 0,
										"slot": "5",
										"type": "t_address"
									},
									{
										"astId": 24,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "egcusd",
										"offset": 0,
										"slot": "6",
										"type": "t_bytes_storage"
									},
									{
										"astId": 28,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "member",
										"offset": 0,
										"slot": "7",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 32,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "plan",
										"offset": 0,
										"slot": "8",
										"type": "t_mapping(t_uint256,t_uint256)"
									},
									{
										"astId": 36,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "stakingPlan",
										"offset": 0,
										"slot": "9",
										"type": "t_mapping(t_uint256,t_uint256)"
									},
									{
										"astId": 40,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "expiryDate",
										"offset": 0,
										"slot": "10",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 44,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "userTotalStake",
										"offset": 0,
										"slot": "11",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 48,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "userTotalStakeUsd",
										"offset": 0,
										"slot": "12",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 52,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "dailyRoyalty",
										"offset": 0,
										"slot": "13",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 56,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "lockPeriod",
										"offset": 0,
										"slot": "14",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 60,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "nextRoyaltyTakePeriod",
										"offset": 0,
										"slot": "15",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 64,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "totalRoyaltyTaken",
										"offset": 0,
										"slot": "16",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 70,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "userTotalSwap",
										"offset": 0,
										"slot": "17",
										"type": "t_mapping(t_address,t_mapping(t_bool,t_uint256))"
									},
									{
										"astId": 74,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "totalSwap",
										"offset": 0,
										"slot": "18",
										"type": "t_mapping(t_bool,t_uint256)"
									},
									{
										"astId": 76,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "_priceOracle",
										"offset": 0,
										"slot": "19",
										"type": "t_address"
									},
									{
										"astId": 78,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "_price",
										"offset": 0,
										"slot": "20",
										"type": "t_bytes_storage"
									},
									{
										"astId": 80,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "nextSpillIndex",
										"offset": 0,
										"slot": "21",
										"type": "t_uint256"
									},
									{
										"astId": 84,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "referredBy",
										"offset": 0,
										"slot": "22",
										"type": "t_mapping(t_address,t_address)"
									},
									{
										"astId": 88,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "referralRewardBalance",
										"offset": 0,
										"slot": "23",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 92,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "referralCount",
										"offset": 0,
										"slot": "24",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 96,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "alreadyMember",
										"offset": 0,
										"slot": "25",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 98,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "referralBurnBalance",
										"offset": 0,
										"slot": "26",
										"type": "t_uint256"
									},
									{
										"astId": 102,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "referralLink",
										"offset": 0,
										"slot": "27",
										"type": "t_mapping(t_address,t_bytes_storage)"
									},
									{
										"astId": 106,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "referralAddress",
										"offset": 0,
										"slot": "28",
										"type": "t_mapping(t_bytes_memory_ptr,t_address)"
									},
									{
										"astId": 110,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "token_address",
										"offset": 0,
										"slot": "29",
										"type": "t_mapping(t_bytes_memory_ptr,t_address)"
									},
									{
										"astId": 114,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "fee",
										"offset": 0,
										"slot": "30",
										"type": "t_mapping(t_bytes_memory_ptr,t_uint256)"
									},
									{
										"astId": 118,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "isListed",
										"offset": 0,
										"slot": "31",
										"type": "t_mapping(t_bytes_memory_ptr,t_bool)"
									},
									{
										"astId": 124,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "liquidity",
										"offset": 0,
										"slot": "32",
										"type": "t_mapping(t_bytes_memory_ptr,t_mapping(t_address,t_uint256))"
									},
									{
										"astId": 130,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "soldProductAmount",
										"offset": 0,
										"slot": "33",
										"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
									},
									{
										"astId": 136,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "soldProductBuyer",
										"offset": 0,
										"slot": "34",
										"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_address))"
									},
									{
										"astId": 138,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "totalStake",
										"offset": 0,
										"slot": "35",
										"type": "t_uint256"
									},
									{
										"astId": 140,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "totalPenaltyStake",
										"offset": 0,
										"slot": "36",
										"type": "t_uint256"
									},
									{
										"astId": 142,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "totalUnStake",
										"offset": 0,
										"slot": "37",
										"type": "t_uint256"
									},
									{
										"astId": 144,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "initProductCount",
										"offset": 0,
										"slot": "38",
										"type": "t_uint256"
									},
									{
										"astId": 150,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "userActivity",
										"offset": 0,
										"slot": "39",
										"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
									},
									{
										"astId": 154,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "allUserActivity",
										"offset": 0,
										"slot": "40",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 158,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "currentAllActivity",
										"offset": 0,
										"slot": "41",
										"type": "t_mapping(t_uint256,t_uint256)"
									},
									{
										"astId": 160,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "allActivity",
										"offset": 0,
										"slot": "42",
										"type": "t_uint256"
									},
									{
										"astId": 162,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "rewardPeriod",
										"offset": 0,
										"slot": "43",
										"type": "t_uint256"
									},
									{
										"astId": 164,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "nextRewardPeriod",
										"offset": 0,
										"slot": "44",
										"type": "t_uint256"
									},
									{
										"astId": 170,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "currentPerfomers",
										"offset": 0,
										"slot": "45",
										"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
									},
									{
										"astId": 172,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "totalRewardTokenRemaining",
										"offset": 0,
										"slot": "46",
										"type": "t_uint256"
									},
									{
										"astId": 174,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "totalRewardDistributed",
										"offset": 0,
										"slot": "47",
										"type": "t_uint256"
									},
									{
										"astId": 178,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "userTotalRewardRecieved",
										"offset": 0,
										"slot": "48",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 182,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "lockedRewardForStaking",
										"offset": 0,
										"slot": "49",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 184,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "stakingPlanForSixMonths",
										"offset": 0,
										"slot": "50",
										"type": "t_uint256"
									},
									{
										"astId": 188,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "dealersPlan",
										"offset": 0,
										"slot": "51",
										"type": "t_mapping(t_uint256,t_uint256)"
									},
									{
										"astId": 190,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "_token_addres",
										"offset": 0,
										"slot": "52",
										"type": "t_address"
									},
									{
										"astId": 194,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "dealerExpiryDate",
										"offset": 0,
										"slot": "53",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 198,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "isADealer",
										"offset": 0,
										"slot": "54",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 202,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "dealerPlan",
										"offset": 0,
										"slot": "55",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 204,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "dealerSubcriptionCollector",
										"offset": 0,
										"slot": "56",
										"type": "t_address"
									},
									{
										"astId": 208,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "referralDealerRewardBalance",
										"offset": 0,
										"slot": "57",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 210,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "dealerSubcriptionCollectorBalance",
										"offset": 0,
										"slot": "58",
										"type": "t_uint256"
									},
									{
										"astId": 214,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "deallerReferredBy",
										"offset": 0,
										"slot": "59",
										"type": "t_mapping(t_address,t_address)"
									},
									{
										"astId": 218,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "deallerReferralCount",
										"offset": 0,
										"slot": "60",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 220,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "naira",
										"offset": 0,
										"slot": "61",
										"type": "t_bytes_storage"
									},
									{
										"astId": 222,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "totalProcurementAmount",
										"offset": 0,
										"slot": "62",
										"type": "t_uint256"
									},
									{
										"astId": 226,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "yesVotes",
										"offset": 0,
										"slot": "63",
										"type": "t_mapping(t_uint256,t_uint256)"
									},
									{
										"astId": 230,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "noVotes",
										"offset": 0,
										"slot": "64",
										"type": "t_mapping(t_uint256,t_uint256)"
									},
									{
										"astId": 234,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "vottingPeriod",
										"offset": 0,
										"slot": "65",
										"type": "t_mapping(t_uint256,t_uint256)"
									},
									{
										"astId": 240,
										"contract": "contracts/facets/PriceOracleFacet.sol:PriceOracleFacet",
										"label": "hasVoted",
										"offset": 0,
										"slot": "66",
										"type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
									}
								],
								"numberOfBytes": "2144"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IDiamondCut.sol": {
				"IDiamondCut": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "facetAddress",
											"type": "address"
										},
										{
											"internalType": "enum IDiamondCut.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "functionSelectors",
											"type": "bytes4[]"
										}
									],
									"indexed": false,
									"internalType": "struct IDiamondCut.FacetCut[]",
									"name": "_diamondCut",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_init",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "_calldata",
									"type": "bytes"
								}
							],
							"name": "DiamondCut",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "facetAddress",
											"type": "address"
										},
										{
											"internalType": "enum IDiamondCut.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "functionSelectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IDiamondCut.FacetCut[]",
									"name": "_diamondCut",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "_init",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_calldata",
									"type": "bytes"
								}
							],
							"name": "diamondCut",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"params": {
									"_calldata": "A function call, including function selector and arguments                  _calldata is executed with delegatecall on _init",
									"_diamondCut": "Contains the facet addresses and function selectors",
									"_init": "The address of the contract or facet to execute _calldata"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": "1f931c1c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"_calldata\":\"A function call, including function selector and arguments                  _calldata is executed with delegatecall on _init\",\"_diamondCut\":\"Contains the facet addresses and function selectors\",\"_init\":\"The address of the contract or facet to execute _calldata\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"Add/replace/remove any number of functions and optionally execute         a function with delegatecall\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDiamondCut.sol\":\"IDiamondCut\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0x21afb9584ec8e432c2c17acd3700e4c99b2d2c5d941c899fd5997a65cc689d56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a128bfc29cfc74fbfcb1bba3363c88df9521b5de7fc53b9c11fddd9389224abd\",\"dweb:/ipfs/QmNfhvg7Aud1yXTZqzXTGdUf38tpv63Pbbuo3KKrYoRFrj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"notice": "Add/replace/remove any number of functions and optionally execute         a function with delegatecall"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/libraries/LibDiamond.sol": {
				"LibDiamond": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "facetAddress",
											"type": "address"
										},
										{
											"internalType": "enum IDiamondCut.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "functionSelectors",
											"type": "bytes4[]"
										}
									],
									"indexed": false,
									"internalType": "struct IDiamondCut.FacetCut[]",
									"name": "_diamondCut",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_init",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "_calldata",
									"type": "bytes"
								}
							],
							"name": "DiamondCut",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/LibDiamond.sol\":453:9978  library LibDiamond {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/LibDiamond.sol\":453:9978  library LibDiamond {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c87ff7f834505be18bb85082419f0df33c797d76d929503fe6645e0ed8c5315464736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c87ff7f834505be18bb85082419f0df33c797d76d929503fe6645e0ed8c5315464736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 PUSH32 0xF7F834505BE18BB85082419F0DF33C797D76D929503FE6645E0ED8C531546473 PUSH16 0x6C634300080A00330000000000000000 ",
							"sourceMap": "453:9525:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c87ff7f834505be18bb85082419f0df33c797d76d929503fe6645e0ed8c5315464736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 PUSH32 0xF7F834505BE18BB85082419F0DF33C797D76D929503FE6645E0ED8C531546473 PUSH16 0x6C634300080A00330000000000000000 ",
							"sourceMap": "453:9525:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"addFunctions(address,bytes4[] memory)": "infinite",
								"contractOwner()": "infinite",
								"diamondCut(struct IDiamondCut.FacetCut memory[] memory,address,bytes memory)": "infinite",
								"diamondStorage()": "infinite",
								"enforceHasContractCode(address,string memory)": "infinite",
								"enforceIsContractOwner()": "infinite",
								"initializeDiamondCut(address,bytes memory)": "infinite",
								"removeFunctions(address,bytes4[] memory)": "infinite",
								"replaceFunctions(address,bytes4[] memory)": "infinite",
								"setContractOwner(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 453,
									"end": 9978,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 453,
									"end": 9978,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c87ff7f834505be18bb85082419f0df33c797d76d929503fe6645e0ed8c5315464736f6c634300080a0033",
									".code": [
										{
											"begin": 453,
											"end": 9978,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 453,
											"end": 9978,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 453,
											"end": 9978,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 453,
											"end": 9978,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 453,
											"end": 9978,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 453,
											"end": 9978,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 453,
											"end": 9978,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 453,
											"end": 9978,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 453,
											"end": 9978,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/LibDiamond.sol\":\"LibDiamond\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0x21afb9584ec8e432c2c17acd3700e4c99b2d2c5d941c899fd5997a65cc689d56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a128bfc29cfc74fbfcb1bba3363c88df9521b5de7fc53b9c11fddd9389224abd\",\"dweb:/ipfs/QmNfhvg7Aud1yXTZqzXTGdUf38tpv63Pbbuo3KKrYoRFrj\"]},\"contracts/libraries/LibDiamond.sol\":{\"keccak256\":\"0x4059248e993742cacdf0492134bbf0d504aab17f28299a706c9ca24b1a17fdf5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2940793983c72f0b2cfbe3dae334e0f327f89b1db096647df0494ca7e87f2757\",\"dweb:/ipfs/QmP8GdGLKnQUKN5n1TjVodVAvvFjcDkUgcKNn9vZK9ztL1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/facets/AppStorage.sol": {
				"ast": {
					"absolutePath": "contracts/facets/AppStorage.sol",
					"exportedSymbols": {
						"AppStorage": [
							241
						]
					},
					"id": 242,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:32:0"
						},
						{
							"canonicalName": "AppStorage",
							"id": 241,
							"members": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "ticker",
									"nameLocation": "116:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "90:32:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_uint256_$",
										"typeString": "mapping(bytes => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "98:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										},
										"nodeType": "Mapping",
										"src": "90:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_uint256_$",
											"typeString": "mapping(bytes => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "107:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "pythia",
									"nameLocation": "153:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "128:31:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 8,
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "136:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "128:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 7,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "147:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 14,
									"mutability": "mutable",
									"name": "myReferrals",
									"nameLocation": "195:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "165:41:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
										"typeString": "mapping(address => address[])"
									},
									"typeName": {
										"id": 13,
										"keyType": {
											"id": 10,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "173:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "165:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
											"typeString": "mapping(address => address[])"
										},
										"valueType": {
											"baseType": {
												"id": 11,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "184:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 12,
											"nodeType": "ArrayTypeName",
											"src": "184:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 18,
									"mutability": "mutable",
									"name": "staffId",
									"nameLocation": "240:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "212:35:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 17,
										"keyType": {
											"id": 15,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "220:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "212:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 16,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "231:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "eusdAddr",
									"nameLocation": "261:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "253:16:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 19,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "253:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "egcAddr",
									"nameLocation": "283:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "275:15:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 21,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "275:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "egcusd",
									"nameLocation": "302:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "296:12:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 23,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "296:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "member",
									"nameLocation": "339:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "314:31:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 27,
										"keyType": {
											"id": 25,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "322:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "314:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 26,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "333:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 32,
									"mutability": "mutable",
									"name": "plan",
									"nameLocation": "379:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "351:32:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 31,
										"keyType": {
											"id": 29,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "359:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "351:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 30,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "370:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 36,
									"mutability": "mutable",
									"name": "stakingPlan",
									"nameLocation": "417:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "389:39:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 35,
										"keyType": {
											"id": 33,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "397:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "389:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 34,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "408:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 40,
									"mutability": "mutable",
									"name": "expiryDate",
									"nameLocation": "462:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "434:38:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 39,
										"keyType": {
											"id": 37,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "442:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "434:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 38,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "453:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 44,
									"mutability": "mutable",
									"name": "userTotalStake",
									"nameLocation": "506:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "478:42:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 43,
										"keyType": {
											"id": 41,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "486:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "478:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 42,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "497:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 48,
									"mutability": "mutable",
									"name": "userTotalStakeUsd",
									"nameLocation": "554:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "526:45:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 47,
										"keyType": {
											"id": 45,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "534:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "526:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 46,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "545:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 52,
									"mutability": "mutable",
									"name": "dailyRoyalty",
									"nameLocation": "605:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "577:40:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 51,
										"keyType": {
											"id": 49,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "585:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "577:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 50,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "596:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 56,
									"mutability": "mutable",
									"name": "lockPeriod",
									"nameLocation": "651:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "623:38:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 55,
										"keyType": {
											"id": 53,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "631:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "623:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 54,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "642:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 60,
									"mutability": "mutable",
									"name": "nextRoyaltyTakePeriod",
									"nameLocation": "695:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "667:49:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 59,
										"keyType": {
											"id": 57,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "675:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "667:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 58,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "686:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 64,
									"mutability": "mutable",
									"name": "totalRoyaltyTaken",
									"nameLocation": "750:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "722:45:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 63,
										"keyType": {
											"id": 61,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "730:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "722:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 62,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "741:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 70,
									"mutability": "mutable",
									"name": "userTotalSwap",
									"nameLocation": "818:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "773:58:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bool_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(bool => uint256))"
									},
									"typeName": {
										"id": 69,
										"keyType": {
											"id": 65,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "781:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "773:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bool_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(bool => uint256))"
										},
										"valueType": {
											"id": 68,
											"keyType": {
												"id": 66,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "800:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"nodeType": "Mapping",
											"src": "792:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bool_$_t_uint256_$",
												"typeString": "mapping(bool => uint256)"
											},
											"valueType": {
												"id": 67,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "808:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 74,
									"mutability": "mutable",
									"name": "totalSwap",
									"nameLocation": "862:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "837:34:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bool_$_t_uint256_$",
										"typeString": "mapping(bool => uint256)"
									},
									"typeName": {
										"id": 73,
										"keyType": {
											"id": 71,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "845:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"nodeType": "Mapping",
										"src": "837:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bool_$_t_uint256_$",
											"typeString": "mapping(bool => uint256)"
										},
										"valueType": {
											"id": 72,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "853:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 76,
									"mutability": "mutable",
									"name": "_priceOracle",
									"nameLocation": "916:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "908:20:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 75,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "908:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 78,
									"mutability": "mutable",
									"name": "_price",
									"nameLocation": "940:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "934:12:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 77,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "934:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 80,
									"mutability": "mutable",
									"name": "nextSpillIndex",
									"nameLocation": "1010:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1002:22:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 79,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1002:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 84,
									"mutability": "mutable",
									"name": "referredBy",
									"nameLocation": "1058:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1030:38:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 83,
										"keyType": {
											"id": 81,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1038:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1030:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 82,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1049:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 88,
									"mutability": "mutable",
									"name": "referralRewardBalance",
									"nameLocation": "1102:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1074:49:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 87,
										"keyType": {
											"id": 85,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1082:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1074:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 86,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1093:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 92,
									"mutability": "mutable",
									"name": "referralCount",
									"nameLocation": "1157:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1129:41:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 91,
										"keyType": {
											"id": 89,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1137:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1129:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 90,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1148:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 96,
									"mutability": "mutable",
									"name": "alreadyMember",
									"nameLocation": "1201:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1176:38:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 95,
										"keyType": {
											"id": 93,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1184:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1176:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 94,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1195:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 98,
									"mutability": "mutable",
									"name": "referralBurnBalance",
									"nameLocation": "1228:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1220:27:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 97,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1220:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 102,
									"mutability": "mutable",
									"name": "referralLink",
									"nameLocation": "1279:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1253:38:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bytes_storage_$",
										"typeString": "mapping(address => bytes)"
									},
									"typeName": {
										"id": 101,
										"keyType": {
											"id": 99,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1261:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1253:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bytes_storage_$",
											"typeString": "mapping(address => bytes)"
										},
										"valueType": {
											"id": 100,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "1272:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 106,
									"mutability": "mutable",
									"name": "referralAddress",
									"nameLocation": "1323:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1297:41:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_address_$",
										"typeString": "mapping(bytes => address)"
									},
									"typeName": {
										"id": 105,
										"keyType": {
											"id": 103,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "1305:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										},
										"nodeType": "Mapping",
										"src": "1297:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_address_$",
											"typeString": "mapping(bytes => address)"
										},
										"valueType": {
											"id": 104,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1314:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 110,
									"mutability": "mutable",
									"name": "token_address",
									"nameLocation": "1370:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1344:39:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_address_$",
										"typeString": "mapping(bytes => address)"
									},
									"typeName": {
										"id": 109,
										"keyType": {
											"id": 107,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "1352:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										},
										"nodeType": "Mapping",
										"src": "1344:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_address_$",
											"typeString": "mapping(bytes => address)"
										},
										"valueType": {
											"id": 108,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1361:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 114,
									"mutability": "mutable",
									"name": "fee",
									"nameLocation": "1412:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1389:26:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_uint256_$",
										"typeString": "mapping(bytes => uint256)"
									},
									"typeName": {
										"id": 113,
										"keyType": {
											"id": 111,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "1397:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										},
										"nodeType": "Mapping",
										"src": "1389:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_uint256_$",
											"typeString": "mapping(bytes => uint256)"
										},
										"valueType": {
											"id": 112,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1406:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 118,
									"mutability": "mutable",
									"name": "isListed",
									"nameLocation": "1444:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1421:31:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_bool_$",
										"typeString": "mapping(bytes => bool)"
									},
									"typeName": {
										"id": 117,
										"keyType": {
											"id": 115,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "1429:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										},
										"nodeType": "Mapping",
										"src": "1421:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_bool_$",
											"typeString": "mapping(bytes => bool)"
										},
										"valueType": {
											"id": 116,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1438:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 124,
									"mutability": "mutable",
									"name": "liquidity",
									"nameLocation": "1501:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1458:52:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(bytes => mapping(address => uint256))"
									},
									"typeName": {
										"id": 123,
										"keyType": {
											"id": 119,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "1466:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										},
										"nodeType": "Mapping",
										"src": "1458:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(bytes => mapping(address => uint256))"
										},
										"valueType": {
											"id": 122,
											"keyType": {
												"id": 120,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1483:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1475:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 121,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1494:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "soldProductAmount",
									"nameLocation": "1555:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1516:56:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 129,
										"keyType": {
											"id": 125,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1524:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1516:38:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 128,
											"keyType": {
												"id": 126,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1540:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "1532:21:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 127,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1548:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 136,
									"mutability": "mutable",
									"name": "soldProductBuyer",
									"nameLocation": "1620:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1578:58:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_address_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => address))"
									},
									"typeName": {
										"id": 135,
										"keyType": {
											"id": 131,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1586:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1578:41:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_address_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => address))"
										},
										"valueType": {
											"id": 134,
											"keyType": {
												"id": 132,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1602:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "1594:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
												"typeString": "mapping(uint256 => address)"
											},
											"valueType": {
												"id": 133,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1610:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 138,
									"mutability": "mutable",
									"name": "totalStake",
									"nameLocation": "1647:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1642:15:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 137,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1642:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 140,
									"mutability": "mutable",
									"name": "totalPenaltyStake",
									"nameLocation": "1668:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1663:22:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 139,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1663:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 142,
									"mutability": "mutable",
									"name": "totalUnStake",
									"nameLocation": "1696:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1691:17:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 141,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1691:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 144,
									"mutability": "mutable",
									"name": "initProductCount",
									"nameLocation": "1719:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1714:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 143,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1714:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 150,
									"mutability": "mutable",
									"name": "userActivity",
									"nameLocation": "1783:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1741:54:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 149,
										"keyType": {
											"id": 145,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1749:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1741:41:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 148,
											"keyType": {
												"id": 146,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1765:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1757:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 147,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1776:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 154,
									"mutability": "mutable",
									"name": "allUserActivity",
									"nameLocation": "1826:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1801:40:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 153,
										"keyType": {
											"id": 151,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1809:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1801:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 152,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1820:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "currentAllActivity",
									"nameLocation": "1869:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1847:40:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 157,
										"keyType": {
											"id": 155,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1855:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1847:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 156,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1863:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 160,
									"mutability": "mutable",
									"name": "allActivity",
									"nameLocation": "1898:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1893:16:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 159,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1893:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 162,
									"mutability": "mutable",
									"name": "rewardPeriod",
									"nameLocation": "1920:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1915:17:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 161,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1915:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 164,
									"mutability": "mutable",
									"name": "nextRewardPeriod",
									"nameLocation": "1943:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1938:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 163,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1938:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 170,
									"mutability": "mutable",
									"name": "currentPerfomers",
									"nameLocation": "2007:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "1965:58:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(address => bool))"
									},
									"typeName": {
										"id": 169,
										"keyType": {
											"id": 165,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1973:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1965:41:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(address => bool))"
										},
										"valueType": {
											"id": 168,
											"keyType": {
												"id": 166,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1989:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1981:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 167,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2000:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 172,
									"mutability": "mutable",
									"name": "totalRewardTokenRemaining",
									"nameLocation": "2034:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "2029:30:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 171,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2029:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 174,
									"mutability": "mutable",
									"name": "totalRewardDistributed",
									"nameLocation": "2070:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "2065:27:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 173,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2065:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 178,
									"mutability": "mutable",
									"name": "userTotalRewardRecieved",
									"nameLocation": "2123:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "2098:48:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 177,
										"keyType": {
											"id": 175,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2106:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2098:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 176,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "2117:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 182,
									"mutability": "mutable",
									"name": "lockedRewardForStaking",
									"nameLocation": "2177:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "2152:47:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 181,
										"keyType": {
											"id": 179,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2160:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2152:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 180,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "2171:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 184,
									"mutability": "mutable",
									"name": "stakingPlanForSixMonths",
									"nameLocation": "2210:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "2205:28:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 183,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2205:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 188,
									"mutability": "mutable",
									"name": "dealersPlan",
									"nameLocation": "2267:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "2239:39:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 187,
										"keyType": {
											"id": 185,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2247:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2239:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 186,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2258:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 190,
									"mutability": "mutable",
									"name": "_token_addres",
									"nameLocation": "2292:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "2284:21:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 189,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2284:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 194,
									"mutability": "mutable",
									"name": "dealerExpiryDate",
									"nameLocation": "2339:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "2311:44:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 193,
										"keyType": {
											"id": 191,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2319:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2311:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 192,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2330:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 198,
									"mutability": "mutable",
									"name": "isADealer",
									"nameLocation": "2386:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "2361:34:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 197,
										"keyType": {
											"id": 195,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2369:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2361:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 196,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2380:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 202,
									"mutability": "mutable",
									"name": "dealerPlan",
									"nameLocation": "2429:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "2401:38:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 201,
										"keyType": {
											"id": 199,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2409:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2401:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 200,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2420:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 204,
									"mutability": "mutable",
									"name": "dealerSubcriptionCollector",
									"nameLocation": "2453:26:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "2445:34:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 203,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2445:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 208,
									"mutability": "mutable",
									"name": "referralDealerRewardBalance",
									"nameLocation": "2513:27:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "2485:55:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 207,
										"keyType": {
											"id": 205,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2493:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2485:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 206,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2504:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 210,
									"mutability": "mutable",
									"name": "dealerSubcriptionCollectorBalance",
									"nameLocation": "2554:33:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "2546:41:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 209,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2546:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 214,
									"mutability": "mutable",
									"name": "deallerReferredBy",
									"nameLocation": "2621:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "2593:45:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 213,
										"keyType": {
											"id": 211,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2601:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2593:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 212,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2612:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 218,
									"mutability": "mutable",
									"name": "deallerReferralCount",
									"nameLocation": "2672:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "2644:48:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 217,
										"keyType": {
											"id": 215,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2652:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2644:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 216,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2663:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 220,
									"mutability": "mutable",
									"name": "naira",
									"nameLocation": "2704:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "2698:11:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 219,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "2698:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 222,
									"mutability": "mutable",
									"name": "totalProcurementAmount",
									"nameLocation": "2723:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "2715:30:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 221,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2715:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 226,
									"mutability": "mutable",
									"name": "yesVotes",
									"nameLocation": "2779:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "2751:36:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 225,
										"keyType": {
											"id": 223,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2759:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2751:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 224,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2770:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 230,
									"mutability": "mutable",
									"name": "noVotes",
									"nameLocation": "2821:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "2793:35:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 229,
										"keyType": {
											"id": 227,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2801:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2793:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 228,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2812:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 234,
									"mutability": "mutable",
									"name": "vottingPeriod",
									"nameLocation": "2862:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "2834:41:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 233,
										"keyType": {
											"id": 231,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2842:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2834:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 232,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2853:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 240,
									"mutability": "mutable",
									"name": "hasVoted",
									"nameLocation": "2926:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 241,
									"src": "2881:53:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 239,
										"keyType": {
											"id": 235,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2889:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2881:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(uint256 => bool))"
										},
										"valueType": {
											"id": 238,
											"keyType": {
												"id": 236,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2908:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "2900:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueType": {
												"id": 237,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2919:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								}
							],
							"name": "AppStorage",
							"nameLocation": "73:10:0",
							"nodeType": "StructDefinition",
							"scope": 242,
							"src": "66:2871:0",
							"visibility": "public"
						}
					],
					"src": "32:2906:0"
				},
				"id": 0
			},
			"contracts/facets/PriceOracleFacet.sol": {
				"ast": {
					"absolutePath": "contracts/facets/PriceOracleFacet.sol",
					"exportedSymbols": {
						"AppStorage": [
							241
						],
						"IDiamondCut": [
							470
						],
						"LibDiamond": [
							1122
						],
						"PriceOracleFacet": [
							431
						]
					},
					"id": 432,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 243,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:32:1"
						},
						{
							"id": 244,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "65:33:1"
						},
						{
							"absolutePath": "contracts/libraries/LibDiamond.sol",
							"file": "../libraries/LibDiamond.sol",
							"id": 245,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 432,
							"sourceUnit": 1123,
							"src": "99:37:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/facets/AppStorage.sol",
							"file": "./AppStorage.sol",
							"id": 246,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 432,
							"sourceUnit": 242,
							"src": "137:26:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PriceOracleFacet",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 431,
							"linearizedBaseContracts": [
								431
							],
							"name": "PriceOracleFacet",
							"nameLocation": "174:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 249,
									"mutability": "mutable",
									"name": "s",
									"nameLocation": "217:1:1",
									"nodeType": "VariableDeclaration",
									"scope": 431,
									"src": "197:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AppStorage_$241_storage",
										"typeString": "struct AppStorage"
									},
									"typeName": {
										"id": 248,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 247,
											"name": "AppStorage",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 241,
											"src": "197:10:1"
										},
										"referencedDeclaration": 241,
										"src": "197:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AppStorage_$241_storage_ptr",
											"typeString": "struct AppStorage"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 257,
									"name": "PythiaAdded",
									"nameLocation": "231:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"indexed": false,
												"mutability": "mutable",
												"name": "_pythia",
												"nameLocation": "251:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "243:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "243:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"indexed": false,
												"mutability": "mutable",
												"name": "_addBy",
												"nameLocation": "268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "260:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "260:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"indexed": false,
												"mutability": "mutable",
												"name": "_time",
												"nameLocation": "281:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "276:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "276:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "242:45:1"
									},
									"src": "225:63:1"
								},
								{
									"anonymous": false,
									"id": 265,
									"name": "PythiaSuspended",
									"nameLocation": "299:15:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"indexed": false,
												"mutability": "mutable",
												"name": "_pythia",
												"nameLocation": "323:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "315:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "315:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"indexed": false,
												"mutability": "mutable",
												"name": "_addBy",
												"nameLocation": "340:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "332:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"indexed": false,
												"mutability": "mutable",
												"name": "_time",
												"nameLocation": "353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "348:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "348:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "314:45:1"
									},
									"src": "293:67:1"
								},
								{
									"anonymous": false,
									"id": 275,
									"name": "PriceUpdated",
									"nameLocation": "371:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"indexed": false,
												"mutability": "mutable",
												"name": "_ticker",
												"nameLocation": "400:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "393:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "393:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"indexed": false,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "422:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "417:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "417:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"indexed": false,
												"mutability": "mutable",
												"name": "_pythia",
												"nameLocation": "446:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "438:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"indexed": false,
												"mutability": "mutable",
												"name": "_time",
												"nameLocation": "468:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "463:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "463:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:96:1"
									},
									"src": "365:115:1"
								},
								{
									"anonymous": false,
									"id": 279,
									"name": "PrinceChanged",
									"nameLocation": "491:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"indexed": false,
												"mutability": "mutable",
												"name": "_time",
												"nameLocation": "510:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "505:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "505:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:12:1"
									},
									"src": "485:32:1"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "543:152:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 282,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "574:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "574:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 284,
																		"name": "LibDiamond",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1122,
																		"src": "588:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_LibDiamond_$1122_$",
																			"typeString": "type(library LibDiamond)"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "contractOwner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 557,
																	"src": "588:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "588:26:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "574:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636573732064656e6965642c204f6e6c79206f776e657220697320616c6c6f77656421",
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "628:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d609cfa148d3d2d8b38538c06afac2ebdfb0d134cc7da2ba276bd1db3f6e2779",
																"typeString": "literal_string \"Access denied, Only owner is allowed!\""
															},
															"value": "Access denied, Only owner is allowed!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d609cfa148d3d2d8b38538c06afac2ebdfb0d134cc7da2ba276bd1db3f6e2779",
																"typeString": "literal_string \"Access denied, Only owner is allowed!\""
															}
														],
														"id": 281,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "553:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "553:124:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "553:124:1"
											},
											{
												"id": 291,
												"nodeType": "PlaceholderStatement",
												"src": "687:1:1"
											}
										]
									},
									"id": 293,
									"name": "onlyOwner",
									"nameLocation": "531:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "540:2:1"
									},
									"src": "522:173:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "723:99:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"expression": {
																	"id": 296,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "741:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AppStorage_$241_storage",
																		"typeString": "struct AppStorage storage ref"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "pythia",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 9,
																"src": "741:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 300,
															"indexExpression": {
																"expression": {
																	"id": 298,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "750:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "750:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "741:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636573732064656e6965642e204f6e6c792050797468696120697320616c6c6f77656421",
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "763:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c914d8916683eb124e5149cd7cd8411368b9ce0276856c83a5a47bae21383b2",
																"typeString": "literal_string \"Access denied. Only Pythia is allowed!\""
															},
															"value": "Access denied. Only Pythia is allowed!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c914d8916683eb124e5149cd7cd8411368b9ce0276856c83a5a47bae21383b2",
																"typeString": "literal_string \"Access denied. Only Pythia is allowed!\""
															}
														],
														"id": 295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "733:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "733:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "733:71:1"
											},
											{
												"id": 304,
												"nodeType": "PlaceholderStatement",
												"src": "814:1:1"
											}
										]
									},
									"id": 306,
									"name": "onlyPythia",
									"nameLocation": "710:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "720:2:1"
									},
									"src": "701:121:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "1950:50:1",
										"statements": [
											{
												"expression": {
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 313,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "1960:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AppStorage_$241_storage",
																"typeString": "struct AppStorage storage ref"
															}
														},
														"id": 315,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "naira",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "1960:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage",
															"typeString": "bytes storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 318,
																"name": "_ticker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "1985:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 316,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1970:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_PriceOracleFacet_$431",
																	"typeString": "contract PriceOracleFacet"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "converter",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 358,
															"src": "1970:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																"typeString": "function (string memory) pure external returns (bytes memory)"
															}
														},
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1970:23:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "1960:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage",
														"typeString": "bytes storage ref"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "1960:33:1"
											}
										]
									},
									"functionSelector": "267561c8",
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 311,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 310,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 293,
												"src": "1940:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1940:9:1"
										}
									],
									"name": "setNairaUSDTicker",
									"nameLocation": "1890:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "_ticker",
												"nameLocation": "1922:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "1908:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 307,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:23:1"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1950:0:1"
									},
									"scope": 431,
									"src": "1881:119:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "2117:63:1",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"baseExpression": {
																"expression": {
																	"id": 330,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "2135:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AppStorage_$241_storage",
																		"typeString": "struct AppStorage storage ref"
																	}
																},
																"id": 331,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "ticker",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "2135:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_uint256_$",
																	"typeString": "mapping(bytes memory => uint256)"
																}
															},
															"id": 334,
															"indexExpression": {
																"expression": {
																	"id": 332,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "2144:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AppStorage_$241_storage",
																		"typeString": "struct AppStorage storage ref"
																	}
																},
																"id": 333,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "naira",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 220,
																"src": "2144:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_storage",
																	"typeString": "bytes storage ref"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2135:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"expression": {
																	"id": 335,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "2154:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AppStorage_$241_storage",
																		"typeString": "struct AppStorage storage ref"
																	}
																},
																"id": 336,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "ticker",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "2154:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_uint256_$",
																	"typeString": "mapping(bytes memory => uint256)"
																}
															},
															"id": 339,
															"indexExpression": {
																"expression": {
																	"id": 337,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "2163:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AppStorage_$241_storage",
																		"typeString": "struct AppStorage storage ref"
																	}
																},
																"id": 338,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "egcusd",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 24,
																"src": "2163:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_storage",
																	"typeString": "bytes storage ref"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2154:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 340,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2134:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 329,
												"id": 341,
												"nodeType": "Return",
												"src": "2127:46:1"
											}
										]
									},
									"functionSelector": "fc3a49e0",
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakingAndBuyingTokenPrices",
									"nameLocation": "2015:30:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2045:2:1"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "2095:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2095:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "2104:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2094:18:1"
									},
									"scope": 431,
									"src": "2006:174:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "2644:45:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 353,
																	"name": "_source",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "2673:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 352,
																"name": "upper",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2667:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (string memory)"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2667:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2661:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 350,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2661:5:1",
															"typeDescriptions": {}
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2661:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 349,
												"id": 356,
												"nodeType": "Return",
												"src": "2654:28:1"
											}
										]
									},
									"functionSelector": "94a72f1c",
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "converter",
									"nameLocation": "2560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "_source",
												"nameLocation": "2593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "2579:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2579:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:37:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "2630:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 347,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2630:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2629:14:1"
									},
									"scope": 431,
									"src": "2551:138:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "2769:206:1",
										"statements": [
											{
												"assignments": [
													366
												],
												"declarations": [
													{
														"constant": false,
														"id": 366,
														"mutability": "mutable",
														"name": "_baseBytes",
														"nameLocation": "2792:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 400,
														"src": "2779:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 365,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2779:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [
														{
															"id": 369,
															"name": "_base",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "2811:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2805:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 367,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2805:5:1",
															"typeDescriptions": {}
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2805:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2779:38:1"
											},
											{
												"body": {
													"id": 393,
													"nodeType": "Block",
													"src": "2872:62:1",
													"statements": [
														{
															"expression": {
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 383,
																		"name": "_baseBytes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "2886:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 385,
																	"indexExpression": {
																		"id": 384,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "2897:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2886:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 387,
																				"name": "_baseBytes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 366,
																				"src": "2909:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 389,
																			"indexExpression": {
																				"id": 388,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 373,
																				"src": "2920:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2909:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		],
																		"id": 386,
																		"name": "_upper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 430,
																		"src": "2902:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes1_$returns$_t_bytes1_$",
																			"typeString": "function (bytes1) pure returns (bytes1)"
																		}
																	},
																	"id": 390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2902:21:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2886:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 392,
															"nodeType": "ExpressionStatement",
															"src": "2886:37:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 376,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "2844:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 377,
															"name": "_baseBytes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "2848:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2844:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 394,
												"initializationExpression": {
													"assignments": [
														373
													],
													"declarations": [
														{
															"constant": false,
															"id": 373,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2837:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 394,
															"src": "2832:6:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 372,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2832:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 375,
													"initialValue": {
														"hexValue": "30",
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2841:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2832:10:1"
												},
												"loopExpression": {
													"expression": {
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2867:3:1",
														"subExpression": {
															"id": 380,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "2867:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 382,
													"nodeType": "ExpressionStatement",
													"src": "2867:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2827:107:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 397,
															"name": "_baseBytes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "2957:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2950:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 395,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2950:6:1",
															"typeDescriptions": {}
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2950:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 364,
												"id": 399,
												"nodeType": "Return",
												"src": "2943:25:1"
											}
										]
									},
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upper",
									"nameLocation": "2704:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "_base",
												"nameLocation": "2724:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2710:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 359,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:21:1"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2754:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 362,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2754:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:15:1"
									},
									"scope": 431,
									"src": "2695:280:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "3039:124:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														},
														"id": 410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 408,
															"name": "_b1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "3053:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"hexValue": "30783631",
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3060:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_97_by_1",
																"typeString": "int_const 97"
															},
															"value": "0x61"
														},
														"src": "3053:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 411,
															"name": "_b1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "3068:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"hexValue": "30783741",
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3075:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_122_by_1",
																"typeString": "int_const 122"
															},
															"value": "0x7A"
														},
														"src": "3068:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3053:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 426,
												"nodeType": "IfStatement",
												"src": "3049:87:1",
												"trueBody": {
													"id": 425,
													"nodeType": "Block",
													"src": "3081:55:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 419,
																					"name": "_b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "3115:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 418,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3109:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 417,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "3109:5:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3109:10:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "3332",
																			"id": 421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3122:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "3109:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3102:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes1_$",
																		"typeString": "type(bytes1)"
																	},
																	"typeName": {
																		"id": 415,
																		"name": "bytes1",
																		"nodeType": "ElementaryTypeName",
																		"src": "3102:6:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3102:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"functionReturnParameters": 407,
															"id": 424,
															"nodeType": "Return",
															"src": "3095:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 427,
													"name": "_b1",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 403,
													"src": "3153:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"functionReturnParameters": 407,
												"id": 428,
												"nodeType": "Return",
												"src": "3146:10:1"
											}
										]
									},
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upper",
									"nameLocation": "2990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "_b1",
												"nameLocation": "3004:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "2997:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 402,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "2997:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2996:12:1"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "3031:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 405,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "3031:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3030:8:1"
									},
									"scope": 431,
									"src": "2981:182:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 432,
							"src": "165:3000:1",
							"usedErrors": []
						}
					],
					"src": "32:3134:1"
				},
				"id": 1
			},
			"contracts/interfaces/IDiamondCut.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IDiamondCut.sol",
					"exportedSymbols": {
						"IDiamondCut": [
							470
						]
					},
					"id": 471,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 433,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:32:2"
						},
						{
							"id": 434,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "65:33:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDiamondCut",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 470,
							"linearizedBaseContracts": [
								470
							],
							"name": "IDiamondCut",
							"nameLocation": "423:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IDiamondCut.FacetCutAction",
									"id": 438,
									"members": [
										{
											"id": 435,
											"name": "Add",
											"nameLocation": "471:3:2",
											"nodeType": "EnumValue",
											"src": "471:3:2"
										},
										{
											"id": 436,
											"name": "Replace",
											"nameLocation": "484:7:2",
											"nodeType": "EnumValue",
											"src": "484:7:2"
										},
										{
											"id": 437,
											"name": "Remove",
											"nameLocation": "501:6:2",
											"nodeType": "EnumValue",
											"src": "501:6:2"
										}
									],
									"name": "FacetCutAction",
									"nameLocation": "446:14:2",
									"nodeType": "EnumDefinition",
									"src": "441:72:2"
								},
								{
									"canonicalName": "IDiamondCut.FacetCut",
									"id": 447,
									"members": [
										{
											"constant": false,
											"id": 440,
											"mutability": "mutable",
											"name": "facetAddress",
											"nameLocation": "587:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 447,
											"src": "579:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 439,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "579:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 443,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "624:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 447,
											"src": "609:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_FacetCutAction_$438",
												"typeString": "enum IDiamondCut.FacetCutAction"
											},
											"typeName": {
												"id": 442,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 441,
													"name": "FacetCutAction",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 438,
													"src": "609:14:2"
												},
												"referencedDeclaration": 438,
												"src": "609:14:2",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_FacetCutAction_$438",
													"typeString": "enum IDiamondCut.FacetCutAction"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 446,
											"mutability": "mutable",
											"name": "functionSelectors",
											"nameLocation": "649:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 447,
											"src": "640:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
												"typeString": "bytes4[]"
											},
											"typeName": {
												"baseType": {
													"id": 444,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "640:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 445,
												"nodeType": "ArrayTypeName",
												"src": "640:8:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
													"typeString": "bytes4[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FacetCut",
									"nameLocation": "560:8:2",
									"nodeType": "StructDefinition",
									"scope": 470,
									"src": "553:120:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "679:438:2",
										"text": "@notice Add/replace/remove any number of functions and optionally execute\n         a function with delegatecall\n @param _diamondCut Contains the facet addresses and function selectors\n @param _init The address of the contract or facet to execute _calldata\n @param _calldata A function call, including function selector and arguments\n                  _calldata is executed with delegatecall on _init"
									},
									"functionSelector": "1f931c1c",
									"id": 459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "diamondCut",
									"nameLocation": "1131:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "_diamondCut",
												"nameLocation": "1171:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1151:31:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FacetCut_$447_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IDiamondCut.FacetCut[]"
												},
												"typeName": {
													"baseType": {
														"id": 450,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 449,
															"name": "FacetCut",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 447,
															"src": "1151:8:2"
														},
														"referencedDeclaration": 447,
														"src": "1151:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$447_storage_ptr",
															"typeString": "struct IDiamondCut.FacetCut"
														}
													},
													"id": 451,
													"nodeType": "ArrayTypeName",
													"src": "1151:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$447_storage_$dyn_storage_ptr",
														"typeString": "struct IDiamondCut.FacetCut[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "_init",
												"nameLocation": "1200:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1192:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1192:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "_calldata",
												"nameLocation": "1230:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1215:24:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 455,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1215:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:104:2"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1254:0:2"
									},
									"scope": 470,
									"src": "1122:133:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 469,
									"name": "DiamondCut",
									"nameLocation": "1267:10:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"indexed": false,
												"mutability": "mutable",
												"name": "_diamondCut",
												"nameLocation": "1289:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "1278:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FacetCut_$447_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDiamondCut.FacetCut[]"
												},
												"typeName": {
													"baseType": {
														"id": 461,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 460,
															"name": "FacetCut",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 447,
															"src": "1278:8:2"
														},
														"referencedDeclaration": 447,
														"src": "1278:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$447_storage_ptr",
															"typeString": "struct IDiamondCut.FacetCut"
														}
													},
													"id": 462,
													"nodeType": "ArrayTypeName",
													"src": "1278:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$447_storage_$dyn_storage_ptr",
														"typeString": "struct IDiamondCut.FacetCut[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"indexed": false,
												"mutability": "mutable",
												"name": "_init",
												"nameLocation": "1310:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "1302:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"indexed": false,
												"mutability": "mutable",
												"name": "_calldata",
												"nameLocation": "1323:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "1317:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 466,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1317:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:56:2"
									},
									"src": "1261:73:2"
								}
							],
							"scope": 471,
							"src": "413:923:2",
							"usedErrors": []
						}
					],
					"src": "32:1305:2"
				},
				"id": 2
			},
			"contracts/libraries/LibDiamond.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/LibDiamond.sol",
					"exportedSymbols": {
						"IDiamondCut": [
							470
						],
						"LibDiamond": [
							1122
						]
					},
					"id": 1123,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 472,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:32:3"
						},
						{
							"id": 473,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "65:33:3"
						},
						{
							"absolutePath": "contracts/interfaces/IDiamondCut.sol",
							"file": "../interfaces/IDiamondCut.sol",
							"id": 474,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1123,
							"sourceUnit": 471,
							"src": "412:39:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LibDiamond",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1122,
							"linearizedBaseContracts": [
								1122
							],
							"name": "LibDiamond",
							"nameLocation": "461:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 479,
									"mutability": "constant",
									"name": "DIAMOND_STORAGE_POSITION",
									"nameLocation": "495:24:3",
									"nodeType": "VariableDeclaration",
									"scope": 1122,
									"src": "478:97:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 475,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "478:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "6469616d6f6e642e7374616e646172642e6469616d6f6e642e73746f72616765",
												"id": 477,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "540:34:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c",
													"typeString": "literal_string \"diamond.standard.diamond.storage\""
												},
												"value": "diamond.standard.diamond.storage"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c",
													"typeString": "literal_string \"diamond.standard.diamond.storage\""
												}
											],
											"id": 476,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "530:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 478,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "530:45:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "LibDiamond.FacetAddressAndSelectorPosition",
									"id": 484,
									"members": [
										{
											"constant": false,
											"id": 481,
											"mutability": "mutable",
											"name": "facetAddress",
											"nameLocation": "639:12:3",
											"nodeType": "VariableDeclaration",
											"scope": 484,
											"src": "631:20:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 480,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "631:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 483,
											"mutability": "mutable",
											"name": "selectorPosition",
											"nameLocation": "668:16:3",
											"nodeType": "VariableDeclaration",
											"scope": 484,
											"src": "661:23:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 482,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "661:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FacetAddressAndSelectorPosition",
									"nameLocation": "589:31:3",
									"nodeType": "StructDefinition",
									"scope": 1122,
									"src": "582:109:3",
									"visibility": "public"
								},
								{
									"canonicalName": "LibDiamond.DiamondStorage",
									"id": 499,
									"members": [
										{
											"constant": false,
											"id": 489,
											"mutability": "mutable",
											"name": "facetAddressAndSelectorPosition",
											"nameLocation": "867:31:3",
											"nodeType": "VariableDeclaration",
											"scope": 499,
											"src": "816:82:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndSelectorPosition_$484_storage_$",
												"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndSelectorPosition)"
											},
											"typeName": {
												"id": 488,
												"keyType": {
													"id": 485,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "824:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"nodeType": "Mapping",
												"src": "816:50:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndSelectorPosition_$484_storage_$",
													"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndSelectorPosition)"
												},
												"valueType": {
													"id": 487,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 486,
														"name": "FacetAddressAndSelectorPosition",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 484,
														"src": "834:31:3"
													},
													"referencedDeclaration": 484,
													"src": "834:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FacetAddressAndSelectorPosition_$484_storage_ptr",
														"typeString": "struct LibDiamond.FacetAddressAndSelectorPosition"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 492,
											"mutability": "mutable",
											"name": "selectors",
											"nameLocation": "917:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 499,
											"src": "908:18:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
												"typeString": "bytes4[]"
											},
											"typeName": {
												"baseType": {
													"id": 490,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "908:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 491,
												"nodeType": "ArrayTypeName",
												"src": "908:8:3",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
													"typeString": "bytes4[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 496,
											"mutability": "mutable",
											"name": "supportedInterfaces",
											"nameLocation": "960:19:3",
											"nodeType": "VariableDeclaration",
											"scope": 499,
											"src": "936:43:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
												"typeString": "mapping(bytes4 => bool)"
											},
											"typeName": {
												"id": 495,
												"keyType": {
													"id": 493,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "944:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"nodeType": "Mapping",
												"src": "936:23:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
													"typeString": "mapping(bytes4 => bool)"
												},
												"valueType": {
													"id": 494,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "954:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 498,
											"mutability": "mutable",
											"name": "contractOwner",
											"nameLocation": "1030:13:3",
											"nodeType": "VariableDeclaration",
											"scope": 499,
											"src": "1022:21:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 497,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DiamondStorage",
									"nameLocation": "704:14:3",
									"nodeType": "StructDefinition",
									"scope": 1122,
									"src": "697:353:3",
									"visibility": "public"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "1160:121:3",
										"statements": [
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "1178:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 510,
														"src": "1170:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 505,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1170:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 508,
												"initialValue": {
													"id": 507,
													"name": "DIAMOND_STORAGE_POSITION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 479,
													"src": "1189:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1170:43:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1232:43:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1246:19:3",
															"value": {
																"name": "position",
																"nodeType": "YulIdentifier",
																"src": "1257:8:3"
															},
															"variableNames": [
																{
																	"name": "ds.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1246:7:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 503,
														"isOffset": false,
														"isSlot": true,
														"src": "1246:7:3",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 506,
														"isOffset": false,
														"isSlot": false,
														"src": "1257:8:3",
														"valueSize": 1
													}
												],
												"id": 509,
												"nodeType": "InlineAssembly",
												"src": "1223:52:3"
											}
										]
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "diamondStorage",
									"nameLocation": "1065:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1079:2:3"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "ds",
												"nameLocation": "1152:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1129:25:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
													"typeString": "struct LibDiamond.DiamondStorage"
												},
												"typeName": {
													"id": 502,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 501,
														"name": "DiamondStorage",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 499,
														"src": "1129:14:3"
													},
													"referencedDeclaration": 499,
													"src": "1129:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
														"typeString": "struct LibDiamond.DiamondStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:27:3"
									},
									"scope": 1122,
									"src": "1056:225:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 517,
									"name": "OwnershipTransferred",
									"nameLocation": "1293:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1339:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "1323:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1378:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "1362:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1362:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1313:79:3"
									},
									"src": "1287:106:3"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "1453:210:3",
										"statements": [
											{
												"assignments": [
													524
												],
												"declarations": [
													{
														"constant": false,
														"id": 524,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "1486:2:3",
														"nodeType": "VariableDeclaration",
														"scope": 544,
														"src": "1463:25:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
															"typeString": "struct LibDiamond.DiamondStorage"
														},
														"typeName": {
															"id": 523,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 522,
																"name": "DiamondStorage",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 499,
																"src": "1463:14:3"
															},
															"referencedDeclaration": 499,
															"src": "1463:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 527,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 525,
														"name": "diamondStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "1491:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$499_storage_ptr_$",
															"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1491:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
														"typeString": "struct LibDiamond.DiamondStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1463:44:3"
											},
											{
												"assignments": [
													529
												],
												"declarations": [
													{
														"constant": false,
														"id": 529,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "1525:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 544,
														"src": "1517:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 528,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1517:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 532,
												"initialValue": {
													"expression": {
														"id": 530,
														"name": "ds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "1541:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
															"typeString": "struct LibDiamond.DiamondStorage storage pointer"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "contractOwner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 498,
													"src": "1541:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1517:40:3"
											},
											{
												"expression": {
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 533,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "1567:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage storage pointer"
															}
														},
														"id": 535,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "contractOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 498,
														"src": "1567:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 536,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "1586:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1567:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "1567:28:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 540,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "1631:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "1646:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 539,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "1610:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1610:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "EmitStatement",
												"src": "1605:51:3"
											}
										]
									},
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setContractOwner",
									"nameLocation": "1408:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "1433:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "1425:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1424:19:3"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1453:0:3"
									},
									"scope": 1122,
									"src": "1399:264:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "1741:64:3",
										"statements": [
											{
												"expression": {
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 550,
														"name": "contractOwner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1751:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 551,
																"name": "diamondStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "1768:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$499_storage_ptr_$",
																	"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1768:16:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage storage pointer"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "contractOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 498,
														"src": "1768:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1751:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "1751:47:3"
											}
										]
									},
									"id": 557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contractOwner",
									"nameLocation": "1678:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1691:2:3"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "contractOwner_",
												"nameLocation": "1725:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "1717:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1717:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1716:24:3"
									},
									"scope": 1122,
									"src": "1669:136:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "1859:142:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 561,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1890:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1890:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 563,
																		"name": "diamondStorage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 511,
																		"src": "1904:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$499_storage_ptr_$",
																			"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
																		}
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1904:16:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
																		"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "contractOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 498,
																"src": "1904:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1890:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e6572",
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1948:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d4ae41009c51fd276653a54d7793c24f266ddc8c56ce21f8be5e2c6595ab3ac",
																"typeString": "literal_string \"LibDiamond: Must be contract owner\""
															},
															"value": "LibDiamond: Must be contract owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d4ae41009c51fd276653a54d7793c24f266ddc8c56ce21f8be5e2c6595ab3ac",
																"typeString": "literal_string \"LibDiamond: Must be contract owner\""
															}
														],
														"id": 560,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1869:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1869:125:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "1869:125:3"
											}
										]
									},
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enforceIsContractOwner",
									"nameLocation": "1820:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1842:2:3"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1859:0:3"
									},
									"scope": 1122,
									"src": "1811:190:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 581,
									"name": "DiamondCut",
									"nameLocation": "2013:10:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"indexed": false,
												"mutability": "mutable",
												"name": "_diamondCut",
												"nameLocation": "2056:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "2033:34:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FacetCut_$447_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDiamondCut.FacetCut[]"
												},
												"typeName": {
													"baseType": {
														"id": 573,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 572,
															"name": "IDiamondCut.FacetCut",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 447,
															"src": "2033:20:3"
														},
														"referencedDeclaration": 447,
														"src": "2033:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$447_storage_ptr",
															"typeString": "struct IDiamondCut.FacetCut"
														}
													},
													"id": 574,
													"nodeType": "ArrayTypeName",
													"src": "2033:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$447_storage_$dyn_storage_ptr",
														"typeString": "struct IDiamondCut.FacetCut[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"indexed": false,
												"mutability": "mutable",
												"name": "_init",
												"nameLocation": "2085:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "2077:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2077:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"indexed": false,
												"mutability": "mutable",
												"name": "_calldata",
												"nameLocation": "2106:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "2100:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 578,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2100:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2023:98:3"
									},
									"src": "2007:115:3"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "2316:1146:3",
										"statements": [
											{
												"body": {
													"id": 671,
													"nodeType": "Block",
													"src": "2444:908:3",
													"statements": [
														{
															"assignments": [
																606
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 606,
																	"mutability": "mutable",
																	"name": "action",
																	"nameLocation": "2485:6:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 671,
																	"src": "2458:33:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_FacetCutAction_$438",
																		"typeString": "enum IDiamondCut.FacetCutAction"
																	},
																	"typeName": {
																		"id": 605,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 604,
																			"name": "IDiamondCut.FacetCutAction",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 438,
																			"src": "2458:26:3"
																		},
																		"referencedDeclaration": 438,
																		"src": "2458:26:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_FacetCutAction_$438",
																			"typeString": "enum IDiamondCut.FacetCutAction"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 611,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 607,
																		"name": "_diamondCut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "2494:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_FacetCut_$447_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct IDiamondCut.FacetCut memory[] memory"
																		}
																	},
																	"id": 609,
																	"indexExpression": {
																		"id": 608,
																		"name": "facetIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "2506:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2494:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetCut_$447_memory_ptr",
																		"typeString": "struct IDiamondCut.FacetCut memory"
																	}
																},
																"id": 610,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "action",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 443,
																"src": "2494:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_FacetCutAction_$438",
																	"typeString": "enum IDiamondCut.FacetCutAction"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2458:66:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_FacetCutAction_$438",
																	"typeString": "enum IDiamondCut.FacetCutAction"
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 612,
																	"name": "action",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "2542:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_FacetCutAction_$438",
																		"typeString": "enum IDiamondCut.FacetCutAction"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 613,
																			"name": "IDiamondCut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 470,
																			"src": "2552:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IDiamondCut_$470_$",
																				"typeString": "type(contract IDiamondCut)"
																			}
																		},
																		"id": 614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "FacetCutAction",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 438,
																		"src": "2552:26:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$438_$",
																			"typeString": "type(enum IDiamondCut.FacetCutAction)"
																		}
																	},
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 435,
																	"src": "2552:30:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_FacetCutAction_$438",
																		"typeString": "enum IDiamondCut.FacetCutAction"
																	}
																},
																"src": "2542:40:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_FacetCutAction_$438",
																		"typeString": "enum IDiamondCut.FacetCutAction"
																	},
																	"id": 633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 629,
																		"name": "action",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 606,
																		"src": "2778:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_FacetCutAction_$438",
																			"typeString": "enum IDiamondCut.FacetCutAction"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"expression": {
																				"id": 630,
																				"name": "IDiamondCut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 470,
																				"src": "2788:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IDiamondCut_$470_$",
																					"typeString": "type(contract IDiamondCut)"
																				}
																			},
																			"id": 631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "FacetCutAction",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 438,
																			"src": "2788:26:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$438_$",
																				"typeString": "type(enum IDiamondCut.FacetCutAction)"
																			}
																		},
																		"id": 632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "Replace",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 436,
																		"src": "2788:34:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_FacetCutAction_$438",
																			"typeString": "enum IDiamondCut.FacetCutAction"
																		}
																	},
																	"src": "2778:44:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_FacetCutAction_$438",
																			"typeString": "enum IDiamondCut.FacetCutAction"
																		},
																		"id": 650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 646,
																			"name": "action",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 606,
																			"src": "3022:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_FacetCutAction_$438",
																				"typeString": "enum IDiamondCut.FacetCutAction"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"id": 647,
																					"name": "IDiamondCut",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 470,
																					"src": "3032:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IDiamondCut_$470_$",
																						"typeString": "type(contract IDiamondCut)"
																					}
																				},
																				"id": 648,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "FacetCutAction",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 438,
																				"src": "3032:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$438_$",
																					"typeString": "type(enum IDiamondCut.FacetCutAction)"
																				}
																			},
																			"id": 649,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "Remove",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 437,
																			"src": "3032:33:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_FacetCutAction_$438",
																				"typeString": "enum IDiamondCut.FacetCutAction"
																			}
																		},
																		"src": "3022:43:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 667,
																		"nodeType": "Block",
																		"src": "3260:82:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "4c69624469616d6f6e644375743a20496e636f7272656374204661636574437574416374696f6e",
																							"id": 664,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3285:41:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_48267d8daf5ea9c6bbad1fe9c53dc4c04a2a01b2b85bad432956cf42f45b2f54",
																								"typeString": "literal_string \"LibDiamondCut: Incorrect FacetCutAction\""
																							},
																							"value": "LibDiamondCut: Incorrect FacetCutAction"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_48267d8daf5ea9c6bbad1fe9c53dc4c04a2a01b2b85bad432956cf42f45b2f54",
																								"typeString": "literal_string \"LibDiamondCut: Incorrect FacetCutAction\""
																							}
																						],
																						"id": 663,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "3278:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 665,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3278:49:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 666,
																				"nodeType": "ExpressionStatement",
																				"src": "3278:49:3"
																			}
																		]
																	},
																	"id": 668,
																	"nodeType": "IfStatement",
																	"src": "3018:324:3",
																	"trueBody": {
																		"id": 662,
																		"nodeType": "Block",
																		"src": "3067:187:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"baseExpression": {
																									"id": 652,
																									"name": "_diamondCut",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 585,
																									"src": "3122:11:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_FacetCut_$447_memory_ptr_$dyn_memory_ptr",
																										"typeString": "struct IDiamondCut.FacetCut memory[] memory"
																									}
																								},
																								"id": 654,
																								"indexExpression": {
																									"id": 653,
																									"name": "facetIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 593,
																									"src": "3134:10:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "3122:23:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_FacetCut_$447_memory_ptr",
																									"typeString": "struct IDiamondCut.FacetCut memory"
																								}
																							},
																							"id": 655,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "facetAddress",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 440,
																							"src": "3122:36:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"expression": {
																								"baseExpression": {
																									"id": 656,
																									"name": "_diamondCut",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 585,
																									"src": "3180:11:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_FacetCut_$447_memory_ptr_$dyn_memory_ptr",
																										"typeString": "struct IDiamondCut.FacetCut memory[] memory"
																									}
																								},
																								"id": 658,
																								"indexExpression": {
																									"id": 657,
																									"name": "facetIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 593,
																									"src": "3192:10:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "3180:23:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_FacetCut_$447_memory_ptr",
																									"typeString": "struct IDiamondCut.FacetCut memory"
																								}
																							},
																							"id": 659,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "functionSelectors",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 446,
																							"src": "3180:41:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																								"typeString": "bytes4[] memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																								"typeString": "bytes4[] memory"
																							}
																						],
																						"id": 651,
																						"name": "removeFunctions",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1025,
																						"src": "3085:15:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_bytes4_$dyn_memory_ptr_$returns$__$",
																							"typeString": "function (address,bytes4[] memory)"
																						}
																					},
																					"id": 660,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3085:154:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 661,
																				"nodeType": "ExpressionStatement",
																				"src": "3085:154:3"
																			}
																		]
																	}
																},
																"id": 669,
																"nodeType": "IfStatement",
																"src": "2774:568:3",
																"trueBody": {
																	"id": 645,
																	"nodeType": "Block",
																	"src": "2824:188:3",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 635,
																								"name": "_diamondCut",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 585,
																								"src": "2880:11:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_FacetCut_$447_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct IDiamondCut.FacetCut memory[] memory"
																								}
																							},
																							"id": 637,
																							"indexExpression": {
																								"id": 636,
																								"name": "facetIndex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 593,
																								"src": "2892:10:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "2880:23:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_FacetCut_$447_memory_ptr",
																								"typeString": "struct IDiamondCut.FacetCut memory"
																							}
																						},
																						"id": 638,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "facetAddress",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 440,
																						"src": "2880:36:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 639,
																								"name": "_diamondCut",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 585,
																								"src": "2938:11:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_FacetCut_$447_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct IDiamondCut.FacetCut memory[] memory"
																								}
																							},
																							"id": 641,
																							"indexExpression": {
																								"id": 640,
																								"name": "facetIndex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 593,
																								"src": "2950:10:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "2938:23:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_FacetCut_$447_memory_ptr",
																								"typeString": "struct IDiamondCut.FacetCut memory"
																							}
																						},
																						"id": 642,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "functionSelectors",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 446,
																						"src": "2938:41:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																							"typeString": "bytes4[] memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																							"typeString": "bytes4[] memory"
																						}
																					],
																					"id": 634,
																					"name": "replaceFunctions",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 890,
																					"src": "2842:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_bytes4_$dyn_memory_ptr_$returns$__$",
																						"typeString": "function (address,bytes4[] memory)"
																					}
																				},
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2842:155:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 644,
																			"nodeType": "ExpressionStatement",
																			"src": "2842:155:3"
																		}
																	]
																}
															},
															"id": 670,
															"nodeType": "IfStatement",
															"src": "2538:804:3",
															"trueBody": {
																"id": 628,
																"nodeType": "Block",
																"src": "2584:184:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 618,
																							"name": "_diamondCut",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 585,
																							"src": "2636:11:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_FacetCut_$447_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IDiamondCut.FacetCut memory[] memory"
																							}
																						},
																						"id": 620,
																						"indexExpression": {
																							"id": 619,
																							"name": "facetIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 593,
																							"src": "2648:10:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "2636:23:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_FacetCut_$447_memory_ptr",
																							"typeString": "struct IDiamondCut.FacetCut memory"
																						}
																					},
																					"id": 621,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "facetAddress",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 440,
																					"src": "2636:36:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 622,
																							"name": "_diamondCut",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 585,
																							"src": "2694:11:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_FacetCut_$447_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IDiamondCut.FacetCut memory[] memory"
																							}
																						},
																						"id": 624,
																						"indexExpression": {
																							"id": 623,
																							"name": "facetIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 593,
																							"src": "2706:10:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "2694:23:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_FacetCut_$447_memory_ptr",
																							"typeString": "struct IDiamondCut.FacetCut memory"
																						}
																					},
																					"id": 625,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "functionSelectors",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 446,
																					"src": "2694:41:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																						"typeString": "bytes4[] memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																						"typeString": "bytes4[] memory"
																					}
																				],
																				"id": 617,
																				"name": "addFunctions",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 790,
																				"src": "2602:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_bytes4_$dyn_memory_ptr_$returns$__$",
																					"typeString": "function (address,bytes4[] memory)"
																				}
																			},
																			"id": 626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2602:151:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 627,
																		"nodeType": "ExpressionStatement",
																		"src": "2602:151:3"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 595,
														"name": "facetIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "2376:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 596,
															"name": "_diamondCut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "2389:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$447_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IDiamondCut.FacetCut memory[] memory"
															}
														},
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2389:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2376:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 672,
												"initializationExpression": {
													"assignments": [
														593
													],
													"declarations": [
														{
															"constant": false,
															"id": 593,
															"mutability": "mutable",
															"name": "facetIndex",
															"nameLocation": "2352:10:3",
															"nodeType": "VariableDeclaration",
															"scope": 672,
															"src": "2344:18:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 592,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2344:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 594,
													"nodeType": "VariableDeclarationStatement",
													"src": "2344:18:3"
												},
												"loopExpression": {
													"expression": {
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2421:12:3",
														"subExpression": {
															"id": 599,
															"name": "facetIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "2421:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 601,
													"nodeType": "ExpressionStatement",
													"src": "2421:12:3"
												},
												"nodeType": "ForStatement",
												"src": "2326:1026:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 674,
															"name": "_diamondCut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "3377:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$447_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IDiamondCut.FacetCut memory[] memory"
															}
														},
														{
															"id": 675,
															"name": "_init",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "3390:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 676,
															"name": "_calldata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "3397:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$447_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IDiamondCut.FacetCut memory[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 673,
														"name": "DiamondCut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "3366:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_struct$_FacetCut_$447_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (struct IDiamondCut.FacetCut memory[] memory,address,bytes memory)"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3366:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 678,
												"nodeType": "EmitStatement",
												"src": "3361:46:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 680,
															"name": "_init",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "3438:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 681,
															"name": "_calldata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "3445:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 679,
														"name": "initializeDiamondCut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "3417:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3417:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "3417:38:3"
											}
										]
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "diamondCut",
									"nameLocation": "2184:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "_diamondCut",
												"nameLocation": "2234:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "2204:41:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FacetCut_$447_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDiamondCut.FacetCut[]"
												},
												"typeName": {
													"baseType": {
														"id": 583,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 582,
															"name": "IDiamondCut.FacetCut",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 447,
															"src": "2204:20:3"
														},
														"referencedDeclaration": 447,
														"src": "2204:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$447_storage_ptr",
															"typeString": "struct IDiamondCut.FacetCut"
														}
													},
													"id": 584,
													"nodeType": "ArrayTypeName",
													"src": "2204:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$447_storage_$dyn_storage_ptr",
														"typeString": "struct IDiamondCut.FacetCut[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "_init",
												"nameLocation": "2263:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "2255:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2255:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "_calldata",
												"nameLocation": "2291:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "2278:22:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 588,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2278:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:112:3"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2316:0:3"
									},
									"scope": 1122,
									"src": "2175:1287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "3580:1280:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 694,
																	"name": "_functionSelectors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "3611:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3611:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3639:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3611:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e20666163657420746f20637574",
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3654:45:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0",
																"typeString": "literal_string \"LibDiamondCut: No selectors in facet to cut\""
															},
															"value": "LibDiamondCut: No selectors in facet to cut"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0",
																"typeString": "literal_string \"LibDiamondCut: No selectors in facet to cut\""
															}
														],
														"id": 693,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3590:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3590:119:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "3590:119:3"
											},
											{
												"assignments": [
													703
												],
												"declarations": [
													{
														"constant": false,
														"id": 703,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "3742:2:3",
														"nodeType": "VariableDeclaration",
														"scope": 789,
														"src": "3719:25:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
															"typeString": "struct LibDiamond.DiamondStorage"
														},
														"typeName": {
															"id": 702,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 701,
																"name": "DiamondStorage",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 499,
																"src": "3719:14:3"
															},
															"referencedDeclaration": 499,
															"src": "3719:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 706,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 704,
														"name": "diamondStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "3747:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$499_storage_ptr_$",
															"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3747:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
														"typeString": "struct LibDiamond.DiamondStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3719:44:3"
											},
											{
												"assignments": [
													708
												],
												"declarations": [
													{
														"constant": false,
														"id": 708,
														"mutability": "mutable",
														"name": "selectorCount",
														"nameLocation": "3780:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 789,
														"src": "3773:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 707,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "3773:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 715,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 711,
																	"name": "ds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "3803:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
																		"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																	}
																},
																"id": 712,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selectors",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 492,
																"src": "3803:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																	"typeString": "bytes4[] storage ref"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3803:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 710,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3796:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 709,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "3796:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3796:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3773:50:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 717,
																"name": "_facetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "3854:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3879:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3871:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 718,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3871:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3871:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3854:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e644375743a204164642066616365742063616e27742062652061646472657373283029",
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3895:46:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64609d8b93c93a06b98d7db7a87b04044cd4a52c5661d603bb9b90ad8b914a3a",
																"typeString": "literal_string \"LibDiamondCut: Add facet can't be address(0)\""
															},
															"value": "LibDiamondCut: Add facet can't be address(0)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64609d8b93c93a06b98d7db7a87b04044cd4a52c5661d603bb9b90ad8b914a3a",
																"typeString": "literal_string \"LibDiamondCut: Add facet can't be address(0)\""
															}
														],
														"id": 716,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3833:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3833:118:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "3833:118:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 727,
															"name": "_facetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "3997:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e644375743a2041646420666163657420686173206e6f20636f6465",
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4024:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_343e33adc9ef80d2a3b19196e3a71ee2d793419943c19ad2b2a6875f7dd42e8d",
																"typeString": "literal_string \"LibDiamondCut: Add facet has no code\""
															},
															"value": "LibDiamondCut: Add facet has no code"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_343e33adc9ef80d2a3b19196e3a71ee2d793419943c19ad2b2a6875f7dd42e8d",
																"typeString": "literal_string \"LibDiamondCut: Add facet has no code\""
															}
														],
														"id": 726,
														"name": "enforceHasContractCode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "3961:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,string memory) view"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3961:111:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "3961:111:3"
											},
											{
												"body": {
													"id": 787,
													"nodeType": "Block",
													"src": "4216:638:3",
													"statements": [
														{
															"assignments": [
																742
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 742,
																	"mutability": "mutable",
																	"name": "selector",
																	"nameLocation": "4237:8:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 787,
																	"src": "4230:15:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "4230:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 746,
															"initialValue": {
																"baseExpression": {
																	"id": 743,
																	"name": "_functionSelectors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "4248:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 745,
																"indexExpression": {
																	"id": 744,
																	"name": "selectorIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 732,
																	"src": "4267:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4248:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4230:51:3"
														},
														{
															"assignments": [
																748
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 748,
																	"mutability": "mutable",
																	"name": "oldFacetAddress",
																	"nameLocation": "4303:15:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 787,
																	"src": "4295:23:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 747,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4295:7:3",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 754,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"id": 749,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 703,
																			"src": "4321:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 750,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "facetAddressAndSelectorPosition",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 489,
																		"src": "4321:51:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndSelectorPosition_$484_storage_$",
																			"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndSelectorPosition storage ref)"
																		}
																	},
																	"id": 752,
																	"indexExpression": {
																		"id": 751,
																		"name": "selector",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 742,
																		"src": "4373:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4321:61:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetAddressAndSelectorPosition_$484_storage",
																		"typeString": "struct LibDiamond.FacetAddressAndSelectorPosition storage ref"
																	}
																},
																"id": 753,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "facetAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 481,
																"src": "4321:91:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4295:117:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 756,
																			"name": "oldFacetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 748,
																			"src": "4451:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 759,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4478:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 758,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4470:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 757,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "4470:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4470:10:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "4451:29:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f6e207468617420616c726561647920657869737473",
																		"id": 762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4498:55:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_99a7418ee014d613f46da44561258cdbb58064508097483a319062b99fa37700",
																			"typeString": "literal_string \"LibDiamondCut: Can't add function that already exists\""
																		},
																		"value": "LibDiamondCut: Can't add function that already exists"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_99a7418ee014d613f46da44561258cdbb58064508097483a319062b99fa37700",
																			"typeString": "literal_string \"LibDiamondCut: Can't add function that already exists\""
																		}
																	],
																	"id": 755,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4426:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4426:141:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 764,
															"nodeType": "ExpressionStatement",
															"src": "4426:141:3"
														},
														{
															"expression": {
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 765,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 703,
																			"src": "4581:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 768,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "facetAddressAndSelectorPosition",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 489,
																		"src": "4581:34:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndSelectorPosition_$484_storage_$",
																			"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndSelectorPosition storage ref)"
																		}
																	},
																	"id": 769,
																	"indexExpression": {
																		"id": 767,
																		"name": "selector",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 742,
																		"src": "4637:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4581:82:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetAddressAndSelectorPosition_$484_storage",
																		"typeString": "struct LibDiamond.FacetAddressAndSelectorPosition storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 771,
																			"name": "_facetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 687,
																			"src": "4715:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 772,
																			"name": "selectorCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 708,
																			"src": "4746:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		],
																		"id": 770,
																		"name": "FacetAddressAndSelectorPosition",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 484,
																		"src": "4666:31:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_FacetAddressAndSelectorPosition_$484_storage_ptr_$",
																			"typeString": "type(struct LibDiamond.FacetAddressAndSelectorPosition storage pointer)"
																		}
																	},
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4666:107:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetAddressAndSelectorPosition_$484_memory_ptr",
																		"typeString": "struct LibDiamond.FacetAddressAndSelectorPosition memory"
																	}
																},
																"src": "4581:192:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FacetAddressAndSelectorPosition_$484_storage",
																	"typeString": "struct LibDiamond.FacetAddressAndSelectorPosition storage ref"
																}
															},
															"id": 775,
															"nodeType": "ExpressionStatement",
															"src": "4581:192:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 781,
																		"name": "selector",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 742,
																		"src": "4805:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 776,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 703,
																			"src": "4787:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 779,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "selectors",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 492,
																		"src": "4787:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																			"typeString": "bytes4[] storage ref"
																		}
																	},
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "4787:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes4_$dyn_storage_ptr_$_t_bytes4_$returns$__$bound_to$_t_array$_t_bytes4_$dyn_storage_ptr_$",
																		"typeString": "function (bytes4[] storage pointer,bytes4)"
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4787:27:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 783,
															"nodeType": "ExpressionStatement",
															"src": "4787:27:3"
														},
														{
															"expression": {
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "4828:15:3",
																"subExpression": {
																	"id": 784,
																	"name": "selectorCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 708,
																	"src": "4828:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 786,
															"nodeType": "ExpressionStatement",
															"src": "4828:15:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 734,
														"name": "selectorIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "4135:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 735,
															"name": "_functionSelectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "4151:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4151:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4135:41:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 788,
												"initializationExpression": {
													"assignments": [
														732
													],
													"declarations": [
														{
															"constant": false,
															"id": 732,
															"mutability": "mutable",
															"name": "selectorIndex",
															"nameLocation": "4108:13:3",
															"nodeType": "VariableDeclaration",
															"scope": 788,
															"src": "4100:21:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 731,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4100:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 733,
													"nodeType": "VariableDeclarationStatement",
													"src": "4100:21:3"
												},
												"loopExpression": {
													"expression": {
														"id": 739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4190:15:3",
														"subExpression": {
															"id": 738,
															"name": "selectorIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "4190:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 740,
													"nodeType": "ExpressionStatement",
													"src": "4190:15:3"
												},
												"nodeType": "ForStatement",
												"src": "4082:772:3"
											}
										]
									},
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addFunctions",
									"nameLocation": "3477:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "_facetAddress",
												"nameLocation": "3507:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "3499:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "_functionSelectors",
												"nameLocation": "3546:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "3530:34:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
													"typeString": "bytes4[]"
												},
												"typeName": {
													"baseType": {
														"id": 688,
														"name": "bytes4",
														"nodeType": "ElementaryTypeName",
														"src": "3530:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"id": 689,
													"nodeType": "ArrayTypeName",
													"src": "3530:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
														"typeString": "bytes4[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3489:81:3"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3580:0:3"
									},
									"scope": 1122,
									"src": "3468:1392:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "4982:1524:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 799,
																	"name": "_functionSelectors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 795,
																	"src": "5013:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5013:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5041:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5013:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e20666163657420746f20637574",
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5056:45:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0",
																"typeString": "literal_string \"LibDiamondCut: No selectors in facet to cut\""
															},
															"value": "LibDiamondCut: No selectors in facet to cut"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0",
																"typeString": "literal_string \"LibDiamondCut: No selectors in facet to cut\""
															}
														],
														"id": 798,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4992:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4992:119:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "4992:119:3"
											},
											{
												"assignments": [
													808
												],
												"declarations": [
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "5144:2:3",
														"nodeType": "VariableDeclaration",
														"scope": 889,
														"src": "5121:25:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
															"typeString": "struct LibDiamond.DiamondStorage"
														},
														"typeName": {
															"id": 807,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 806,
																"name": "DiamondStorage",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 499,
																"src": "5121:14:3"
															},
															"referencedDeclaration": 499,
															"src": "5121:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 811,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 809,
														"name": "diamondStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "5149:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$499_storage_ptr_$",
															"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
														"typeString": "struct LibDiamond.DiamondStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5121:44:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 813,
																"name": "_facetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "5196:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5221:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5213:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 814,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5213:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5213:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5196:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e644375743a205265706c6163652066616365742063616e27742062652061646472657373283029",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5237:50:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_66dfaadf0155b20fc867584d3f487a53d3efb088d10b1384d9e62f129e22df7e",
																"typeString": "literal_string \"LibDiamondCut: Replace facet can't be address(0)\""
															},
															"value": "LibDiamondCut: Replace facet can't be address(0)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_66dfaadf0155b20fc867584d3f487a53d3efb088d10b1384d9e62f129e22df7e",
																"typeString": "literal_string \"LibDiamondCut: Replace facet can't be address(0)\""
															}
														],
														"id": 812,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5175:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5175:122:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "5175:122:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 823,
															"name": "_facetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "5343:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e644375743a205265706c61636520666163657420686173206e6f20636f6465",
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5370:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_de246aa8052f872d61bcd9cfb620b8012f8bc6e512400178c0e967944dadacfe",
																"typeString": "literal_string \"LibDiamondCut: Replace facet has no code\""
															},
															"value": "LibDiamondCut: Replace facet has no code"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_de246aa8052f872d61bcd9cfb620b8012f8bc6e512400178c0e967944dadacfe",
																"typeString": "literal_string \"LibDiamondCut: Replace facet has no code\""
															}
														],
														"id": 822,
														"name": "enforceHasContractCode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "5307:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,string memory) view"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5307:115:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "5307:115:3"
											},
											{
												"body": {
													"id": 887,
													"nodeType": "Block",
													"src": "5566:934:3",
													"statements": [
														{
															"assignments": [
																838
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 838,
																	"mutability": "mutable",
																	"name": "selector",
																	"nameLocation": "5587:8:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 887,
																	"src": "5580:15:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 837,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "5580:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 842,
															"initialValue": {
																"baseExpression": {
																	"id": 839,
																	"name": "_functionSelectors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 795,
																	"src": "5598:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 841,
																"indexExpression": {
																	"id": 840,
																	"name": "selectorIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "5617:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5598:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5580:51:3"
														},
														{
															"assignments": [
																844
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 844,
																	"mutability": "mutable",
																	"name": "oldFacetAddress",
																	"nameLocation": "5653:15:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 887,
																	"src": "5645:23:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 843,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5645:7:3",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 850,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"id": 845,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 808,
																			"src": "5671:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 846,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "facetAddressAndSelectorPosition",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 489,
																		"src": "5671:51:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndSelectorPosition_$484_storage_$",
																			"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndSelectorPosition storage ref)"
																		}
																	},
																	"id": 848,
																	"indexExpression": {
																		"id": 847,
																		"name": "selector",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 838,
																		"src": "5723:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5671:61:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetAddressAndSelectorPosition_$484_storage",
																		"typeString": "struct LibDiamond.FacetAddressAndSelectorPosition storage ref"
																	}
																},
																"id": 849,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "facetAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 481,
																"src": "5671:91:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5645:117:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 852,
																			"name": "oldFacetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 844,
																			"src": "5895:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 855,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "5922:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_LibDiamond_$1122",
																						"typeString": "library LibDiamond"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_LibDiamond_$1122",
																						"typeString": "library LibDiamond"
																					}
																				],
																				"id": 854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5914:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 853,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5914:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5914:13:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "5895:32:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c69624469616d6f6e644375743a2043616e2774207265706c61636520696d6d757461626c652066756e6374696f6e",
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5945:49:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_bc092c5482a00c884fa1f253704de1ecfc09ab44224ecb0a6bcc96f204a18406",
																			"typeString": "literal_string \"LibDiamondCut: Can't replace immutable function\""
																		},
																		"value": "LibDiamondCut: Can't replace immutable function"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_bc092c5482a00c884fa1f253704de1ecfc09ab44224ecb0a6bcc96f204a18406",
																			"typeString": "literal_string \"LibDiamondCut: Can't replace immutable function\""
																		}
																	],
																	"id": 851,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5870:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5870:138:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 860,
															"nodeType": "ExpressionStatement",
															"src": "5870:138:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 862,
																			"name": "oldFacetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 844,
																			"src": "6047:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 863,
																			"name": "_facetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 792,
																			"src": "6066:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6047:32:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e6374696f6e20776974682073616d652066756e6374696f6e",
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6097:58:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b5a7112edf707196456f338fdcc19cd849be6cb8c0d166bcd035f4cfb00e7078",
																			"typeString": "literal_string \"LibDiamondCut: Can't replace function with same function\""
																		},
																		"value": "LibDiamondCut: Can't replace function with same function"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b5a7112edf707196456f338fdcc19cd849be6cb8c0d166bcd035f4cfb00e7078",
																			"typeString": "literal_string \"LibDiamondCut: Can't replace function with same function\""
																		}
																	],
																	"id": 861,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6022:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6022:147:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 867,
															"nodeType": "ExpressionStatement",
															"src": "6022:147:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 869,
																			"name": "oldFacetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 844,
																			"src": "6208:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 872,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6235:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 871,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6227:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 870,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6227:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6227:10:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6208:29:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e6374696f6e207468617420646f65736e2774206578697374",
																		"id": 875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6255:58:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d892bd27dc0c8d49d915b3e60c25134cc414f42af82f893e12496f80a14730a1",
																			"typeString": "literal_string \"LibDiamondCut: Can't replace function that doesn't exist\""
																		},
																		"value": "LibDiamondCut: Can't replace function that doesn't exist"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_d892bd27dc0c8d49d915b3e60c25134cc414f42af82f893e12496f80a14730a1",
																			"typeString": "literal_string \"LibDiamondCut: Can't replace function that doesn't exist\""
																		}
																	],
																	"id": 868,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6183:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6183:144:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 877,
															"nodeType": "ExpressionStatement",
															"src": "6183:144:3"
														},
														{
															"expression": {
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 878,
																				"name": "ds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 808,
																				"src": "6382:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
																					"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																				}
																			},
																			"id": 881,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "facetAddressAndSelectorPosition",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 489,
																			"src": "6382:51:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndSelectorPosition_$484_storage_$",
																				"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndSelectorPosition storage ref)"
																			}
																		},
																		"id": 882,
																		"indexExpression": {
																			"id": 880,
																			"name": "selector",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 838,
																			"src": "6434:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6382:61:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetAddressAndSelectorPosition_$484_storage",
																			"typeString": "struct LibDiamond.FacetAddressAndSelectorPosition storage ref"
																		}
																	},
																	"id": 883,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "facetAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 481,
																	"src": "6382:91:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 884,
																	"name": "_facetAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "6476:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6382:107:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 886,
															"nodeType": "ExpressionStatement",
															"src": "6382:107:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 830,
														"name": "selectorIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "5485:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 831,
															"name": "_functionSelectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "5501:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5501:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5485:41:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 888,
												"initializationExpression": {
													"assignments": [
														828
													],
													"declarations": [
														{
															"constant": false,
															"id": 828,
															"mutability": "mutable",
															"name": "selectorIndex",
															"nameLocation": "5458:13:3",
															"nodeType": "VariableDeclaration",
															"scope": 888,
															"src": "5450:21:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 827,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5450:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 829,
													"nodeType": "VariableDeclarationStatement",
													"src": "5450:21:3"
												},
												"loopExpression": {
													"expression": {
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5540:15:3",
														"subExpression": {
															"id": 834,
															"name": "selectorIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "5540:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 836,
													"nodeType": "ExpressionStatement",
													"src": "5540:15:3"
												},
												"nodeType": "ForStatement",
												"src": "5432:1068:3"
											}
										]
									},
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "replaceFunctions",
									"nameLocation": "4875:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "_facetAddress",
												"nameLocation": "4909:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "4901:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4901:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "_functionSelectors",
												"nameLocation": "4948:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "4932:34:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
													"typeString": "bytes4[]"
												},
												"typeName": {
													"baseType": {
														"id": 793,
														"name": "bytes4",
														"nodeType": "ElementaryTypeName",
														"src": "4932:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"id": 794,
													"nodeType": "ArrayTypeName",
													"src": "4932:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
														"typeString": "bytes4[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4891:81:3"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4982:0:3"
									},
									"scope": 1122,
									"src": "4866:1640:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "6627:2021:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 899,
																	"name": "_functionSelectors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "6658:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6658:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6686:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6658:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e20666163657420746f20637574",
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6701:45:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0",
																"typeString": "literal_string \"LibDiamondCut: No selectors in facet to cut\""
															},
															"value": "LibDiamondCut: No selectors in facet to cut"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0",
																"typeString": "literal_string \"LibDiamondCut: No selectors in facet to cut\""
															}
														],
														"id": 898,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6637:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6637:119:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "6637:119:3"
											},
											{
												"assignments": [
													908
												],
												"declarations": [
													{
														"constant": false,
														"id": 908,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "6789:2:3",
														"nodeType": "VariableDeclaration",
														"scope": 1024,
														"src": "6766:25:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
															"typeString": "struct LibDiamond.DiamondStorage"
														},
														"typeName": {
															"id": 907,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 906,
																"name": "DiamondStorage",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 499,
																"src": "6766:14:3"
															},
															"referencedDeclaration": 499,
															"src": "6766:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 911,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 909,
														"name": "diamondStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "6794:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$499_storage_ptr_$",
															"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6794:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
														"typeString": "struct LibDiamond.DiamondStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6766:44:3"
											},
											{
												"assignments": [
													913
												],
												"declarations": [
													{
														"constant": false,
														"id": 913,
														"mutability": "mutable",
														"name": "selectorCount",
														"nameLocation": "6828:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1024,
														"src": "6820:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 912,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6820:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 917,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 914,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "6844:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage storage pointer"
															}
														},
														"id": 915,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "selectors",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 492,
														"src": "6844:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
															"typeString": "bytes4[] storage ref"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "6844:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6820:43:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 919,
																"name": "_facetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "6894:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6919:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6911:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 920,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6911:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6911:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6894:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472657373206d7573742062652061646472657373283029",
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6935:56:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b739aae768f79b96e91d9f66398733516895e39eb09ee54a795b49dcc77504d4",
																"typeString": "literal_string \"LibDiamondCut: Remove facet address must be address(0)\""
															},
															"value": "LibDiamondCut: Remove facet address must be address(0)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b739aae768f79b96e91d9f66398733516895e39eb09ee54a795b49dcc77504d4",
																"typeString": "literal_string \"LibDiamondCut: Remove facet address must be address(0)\""
															}
														],
														"id": 918,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6873:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6873:128:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "6873:128:3"
											},
											{
												"body": {
													"id": 1022,
													"nodeType": "Block",
													"src": "7145:1497:3",
													"statements": [
														{
															"assignments": [
																939
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 939,
																	"mutability": "mutable",
																	"name": "selector",
																	"nameLocation": "7166:8:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1022,
																	"src": "7159:15:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 938,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "7159:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 943,
															"initialValue": {
																"baseExpression": {
																	"id": 940,
																	"name": "_functionSelectors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "7177:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 942,
																"indexExpression": {
																	"id": 941,
																	"name": "selectorIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 929,
																	"src": "7196:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7177:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7159:51:3"
														},
														{
															"assignments": [
																946
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 946,
																	"mutability": "mutable",
																	"name": "oldFacetAddressAndSelectorPosition",
																	"nameLocation": "7279:34:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1022,
																	"src": "7224:89:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetAddressAndSelectorPosition_$484_memory_ptr",
																		"typeString": "struct LibDiamond.FacetAddressAndSelectorPosition"
																	},
																	"typeName": {
																		"id": 945,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 944,
																			"name": "FacetAddressAndSelectorPosition",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 484,
																			"src": "7224:31:3"
																		},
																		"referencedDeclaration": 484,
																		"src": "7224:31:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetAddressAndSelectorPosition_$484_storage_ptr",
																			"typeString": "struct LibDiamond.FacetAddressAndSelectorPosition"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 951,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 947,
																		"name": "ds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 908,
																		"src": "7316:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
																			"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																		}
																	},
																	"id": 948,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "facetAddressAndSelectorPosition",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 489,
																	"src": "7316:55:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndSelectorPosition_$484_storage_$",
																		"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndSelectorPosition storage ref)"
																	}
																},
																"id": 950,
																"indexExpression": {
																	"id": 949,
																	"name": "selector",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 939,
																	"src": "7372:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7316:65:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FacetAddressAndSelectorPosition_$484_storage",
																	"typeString": "struct LibDiamond.FacetAddressAndSelectorPosition storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7224:157:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 953,
																				"name": "oldFacetAddressAndSelectorPosition",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 946,
																				"src": "7420:34:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FacetAddressAndSelectorPosition_$484_memory_ptr",
																					"typeString": "struct LibDiamond.FacetAddressAndSelectorPosition memory"
																				}
																			},
																			"id": 954,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "facetAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 481,
																			"src": "7420:47:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 957,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7479:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 956,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7471:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 955,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7471:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7471:10:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "7420:61:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6374696f6e207468617420646f65736e2774206578697374",
																		"id": 960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7499:57:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2c590e498c4d56c984a7092fd5e89a68b9f4541ce9f97252fb74e44a00ffbb71",
																			"typeString": "literal_string \"LibDiamondCut: Can't remove function that doesn't exist\""
																		},
																		"value": "LibDiamondCut: Can't remove function that doesn't exist"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_2c590e498c4d56c984a7092fd5e89a68b9f4541ce9f97252fb74e44a00ffbb71",
																			"typeString": "literal_string \"LibDiamondCut: Can't remove function that doesn't exist\""
																		}
																	],
																	"id": 952,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7395:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7395:175:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 962,
															"nodeType": "ExpressionStatement",
															"src": "7395:175:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 964,
																				"name": "oldFacetAddressAndSelectorPosition",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 946,
																				"src": "7702:34:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FacetAddressAndSelectorPosition_$484_memory_ptr",
																					"typeString": "struct LibDiamond.FacetAddressAndSelectorPosition memory"
																				}
																			},
																			"id": 965,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "facetAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 481,
																			"src": "7702:47:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 968,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "7781:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_LibDiamond_$1122",
																						"typeString": "library LibDiamond"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_LibDiamond_$1122",
																						"typeString": "library LibDiamond"
																					}
																				],
																				"id": 967,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7773:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 966,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7773:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7773:13:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "7702:84:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d757461626c652066756e6374696f6e2e",
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7804:49:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c6a52664129be47da819a0317986043f34e57e4ed32b851280767afbec47326b",
																			"typeString": "literal_string \"LibDiamondCut: Can't remove immutable function.\""
																		},
																		"value": "LibDiamondCut: Can't remove immutable function."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c6a52664129be47da819a0317986043f34e57e4ed32b851280767afbec47326b",
																			"typeString": "literal_string \"LibDiamondCut: Can't remove immutable function.\""
																		}
																	],
																	"id": 963,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7677:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7677:190:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 973,
															"nodeType": "ExpressionStatement",
															"src": "7677:190:3"
														},
														{
															"expression": {
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "--",
																"prefix": false,
																"src": "7932:15:3",
																"subExpression": {
																	"id": 974,
																	"name": "selectorCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "7932:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 976,
															"nodeType": "ExpressionStatement",
															"src": "7932:15:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 977,
																		"name": "oldFacetAddressAndSelectorPosition",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 946,
																		"src": "7982:34:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetAddressAndSelectorPosition_$484_memory_ptr",
																			"typeString": "struct LibDiamond.FacetAddressAndSelectorPosition memory"
																		}
																	},
																	"id": 978,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selectorPosition",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 483,
																	"src": "7982:51:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 979,
																	"name": "selectorCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "8053:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7982:84:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1008,
															"nodeType": "IfStatement",
															"src": "7961:538:3",
															"trueBody": {
																"id": 1007,
																"nodeType": "Block",
																"src": "8081:418:3",
																"statements": [
																	{
																		"assignments": [
																			982
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 982,
																				"mutability": "mutable",
																				"name": "lastSelector",
																				"nameLocation": "8106:12:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1007,
																				"src": "8099:19:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 981,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "8099:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 987,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 983,
																					"name": "ds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 908,
																					"src": "8121:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
																						"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																					}
																				},
																				"id": 984,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "selectors",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 492,
																				"src": "8121:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																					"typeString": "bytes4[] storage ref"
																				}
																			},
																			"id": 986,
																			"indexExpression": {
																				"id": 985,
																				"name": "selectorCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 913,
																				"src": "8134:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8121:27:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "8099:49:3"
																	},
																	{
																		"expression": {
																			"id": 995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 988,
																						"name": "ds",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 908,
																						"src": "8166:2:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
																							"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																						}
																					},
																					"id": 992,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "selectors",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 492,
																					"src": "8166:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																						"typeString": "bytes4[] storage ref"
																					}
																				},
																				"id": 993,
																				"indexExpression": {
																					"expression": {
																						"id": 990,
																						"name": "oldFacetAddressAndSelectorPosition",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 946,
																						"src": "8200:34:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_FacetAddressAndSelectorPosition_$484_memory_ptr",
																							"typeString": "struct LibDiamond.FacetAddressAndSelectorPosition memory"
																						}
																					},
																					"id": 991,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "selectorPosition",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 483,
																					"src": "8200:51:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "8166:103:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 994,
																				"name": "lastSelector",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 982,
																				"src": "8272:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"src": "8166:118:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"id": 996,
																		"nodeType": "ExpressionStatement",
																		"src": "8166:118:3"
																	},
																	{
																		"expression": {
																			"id": 1005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"id": 997,
																							"name": "ds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 908,
																							"src": "8302:2:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
																								"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																							}
																						},
																						"id": 1000,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "facetAddressAndSelectorPosition",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 489,
																						"src": "8302:55:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndSelectorPosition_$484_storage_$",
																							"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndSelectorPosition storage ref)"
																						}
																					},
																					"id": 1001,
																					"indexExpression": {
																						"id": 999,
																						"name": "lastSelector",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 982,
																						"src": "8358:12:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8302:69:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_FacetAddressAndSelectorPosition_$484_storage",
																						"typeString": "struct LibDiamond.FacetAddressAndSelectorPosition storage ref"
																					}
																				},
																				"id": 1002,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "selectorPosition",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 483,
																				"src": "8302:107:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 1003,
																					"name": "oldFacetAddressAndSelectorPosition",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 946,
																					"src": "8412:34:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_FacetAddressAndSelectorPosition_$484_memory_ptr",
																						"typeString": "struct LibDiamond.FacetAddressAndSelectorPosition memory"
																					}
																				},
																				"id": 1004,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "selectorPosition",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 483,
																				"src": "8412:72:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "8302:182:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"id": 1006,
																		"nodeType": "ExpressionStatement",
																		"src": "8302:182:3"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 1009,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 908,
																			"src": "8548:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "selectors",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 492,
																		"src": "8548:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																			"typeString": "bytes4[] storage ref"
																		}
																	},
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "8548:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes4_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes4_$dyn_storage_ptr_$",
																		"typeString": "function (bytes4[] storage pointer)"
																	}
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8548:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1015,
															"nodeType": "ExpressionStatement",
															"src": "8548:18:3"
														},
														{
															"expression": {
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "8580:51:3",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1016,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 908,
																			"src": "8587:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$499_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 1017,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "facetAddressAndSelectorPosition",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 489,
																		"src": "8587:34:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndSelectorPosition_$484_storage_$",
																			"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndSelectorPosition storage ref)"
																		}
																	},
																	"id": 1019,
																	"indexExpression": {
																		"id": 1018,
																		"name": "selector",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "8622:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8587:44:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetAddressAndSelectorPosition_$484_storage",
																		"typeString": "struct LibDiamond.FacetAddressAndSelectorPosition storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1021,
															"nodeType": "ExpressionStatement",
															"src": "8580:51:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 931,
														"name": "selectorIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "7064:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 932,
															"name": "_functionSelectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "7080:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 933,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7080:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7064:41:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1023,
												"initializationExpression": {
													"assignments": [
														929
													],
													"declarations": [
														{
															"constant": false,
															"id": 929,
															"mutability": "mutable",
															"name": "selectorIndex",
															"nameLocation": "7037:13:3",
															"nodeType": "VariableDeclaration",
															"scope": 1023,
															"src": "7029:21:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 928,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7029:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 930,
													"nodeType": "VariableDeclarationStatement",
													"src": "7029:21:3"
												},
												"loopExpression": {
													"expression": {
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7119:15:3",
														"subExpression": {
															"id": 935,
															"name": "selectorIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "7119:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 937,
													"nodeType": "ExpressionStatement",
													"src": "7119:15:3"
												},
												"nodeType": "ForStatement",
												"src": "7011:1631:3"
											}
										]
									},
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeFunctions",
									"nameLocation": "6521:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "_facetAddress",
												"nameLocation": "6554:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "6546:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6546:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "_functionSelectors",
												"nameLocation": "6593:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "6577:34:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
													"typeString": "bytes4[]"
												},
												"typeName": {
													"baseType": {
														"id": 893,
														"name": "bytes4",
														"nodeType": "ElementaryTypeName",
														"src": "6577:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"id": 894,
													"nodeType": "ArrayTypeName",
													"src": "6577:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
														"typeString": "bytes4[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6536:81:3"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6627:0:3"
									},
									"scope": 1122,
									"src": "6512:2136:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1101,
										"nodeType": "Block",
										"src": "8744:943:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1032,
														"name": "_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "8758:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8767:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1033,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8767:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8767:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8758:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1099,
													"nodeType": "Block",
													"src": "8950:731:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1048,
																				"name": "_calldata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1029,
																				"src": "8989:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "8989:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9008:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "8989:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d70747920627574205f696e6974206973206e6f742061646472657373283029",
																		"id": 1052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9027:63:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_868d165ec2461661b624442252aed6a645399bfae7b60083a77ea1b61b084042",
																			"typeString": "literal_string \"LibDiamondCut: _calldata is empty but _init is not address(0)\""
																		},
																		"value": "LibDiamondCut: _calldata is empty but _init is not address(0)"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_868d165ec2461661b624442252aed6a645399bfae7b60083a77ea1b61b084042",
																			"typeString": "literal_string \"LibDiamondCut: _calldata is empty but _init is not address(0)\""
																		}
																	],
																	"id": 1047,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8964:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8964:140:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1054,
															"nodeType": "ExpressionStatement",
															"src": "8964:140:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1055,
																	"name": "_init",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "9122:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1058,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "9139:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LibDiamond_$1122",
																				"typeString": "library LibDiamond"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_LibDiamond_$1122",
																				"typeString": "library LibDiamond"
																			}
																		],
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9131:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1056,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9131:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9131:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "9122:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1067,
															"nodeType": "IfStatement",
															"src": "9118:192:3",
															"trueBody": {
																"id": 1066,
																"nodeType": "Block",
																"src": "9146:164:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1062,
																					"name": "_init",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1027,
																					"src": "9208:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f6465",
																					"id": 1063,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9235:42:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_460f8f0920c649146ef02741816b1cf9ce4f02ea288ceb73adf027cefe9069a0",
																						"typeString": "literal_string \"LibDiamondCut: _init address has no code\""
																					},
																					"value": "LibDiamondCut: _init address has no code"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_460f8f0920c649146ef02741816b1cf9ce4f02ea288ceb73adf027cefe9069a0",
																						"typeString": "literal_string \"LibDiamondCut: _init address has no code\""
																					}
																				],
																				"id": 1061,
																				"name": "enforceHasContractCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1121,
																				"src": "9164:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (address,string memory) view"
																				}
																			},
																			"id": 1064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9164:131:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1065,
																		"nodeType": "ExpressionStatement",
																		"src": "9164:131:3"
																	}
																]
															}
														},
														{
															"assignments": [
																1069,
																1071
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1069,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "9329:7:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1099,
																	"src": "9324:12:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1068,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "9324:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1071,
																	"mutability": "mutable",
																	"name": "error",
																	"nameLocation": "9351:5:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1099,
																	"src": "9338:18:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1070,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "9338:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1076,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1074,
																		"name": "_calldata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "9379:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1072,
																		"name": "_init",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1027,
																		"src": "9360:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "delegatecall",
																	"nodeType": "MemberAccess",
																	"src": "9360:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) returns (bool,bytes memory)"
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9360:29:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9323:66:3"
														},
														{
															"condition": {
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "9407:8:3",
																"subExpression": {
																	"id": 1077,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "9408:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1098,
															"nodeType": "IfStatement",
															"src": "9403:268:3",
															"trueBody": {
																"id": 1097,
																"nodeType": "Block",
																"src": "9417:254:3",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1079,
																					"name": "error",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1071,
																					"src": "9439:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1080,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "9439:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1081,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9454:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "9439:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 1095,
																			"nodeType": "Block",
																			"src": "9568:89:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"hexValue": "4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e207265766572746564",
																								"id": 1092,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "9597:40:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_080b2fe78815767d522290509c8fce2af708c8a54455ca1b0cc978c92822465d",
																									"typeString": "literal_string \"LibDiamondCut: _init function reverted\""
																								},
																								"value": "LibDiamondCut: _init function reverted"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_stringliteral_080b2fe78815767d522290509c8fce2af708c8a54455ca1b0cc978c92822465d",
																									"typeString": "literal_string \"LibDiamondCut: _init function reverted\""
																								}
																							],
																							"id": 1091,
																							"name": "revert",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967277,
																								4294967277
																							],
																							"referencedDeclaration": 4294967277,
																							"src": "9590:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (string memory) pure"
																							}
																						},
																						"id": 1093,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9590:48:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1094,
																					"nodeType": "ExpressionStatement",
																					"src": "9590:48:3"
																				}
																			]
																		},
																		"id": 1096,
																		"nodeType": "IfStatement",
																		"src": "9435:222:3",
																		"trueBody": {
																			"id": 1090,
																			"nodeType": "Block",
																			"src": "9457:105:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1086,
																										"name": "error",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1071,
																										"src": "9536:5:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes_memory_ptr",
																											"typeString": "bytes memory"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes_memory_ptr",
																											"typeString": "bytes memory"
																										}
																									],
																									"id": 1085,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "9529:6:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																										"typeString": "type(string storage pointer)"
																									},
																									"typeName": {
																										"id": 1084,
																										"name": "string",
																										"nodeType": "ElementaryTypeName",
																										"src": "9529:6:3",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1087,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "9529:13:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_string_memory_ptr",
																									"typeString": "string memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_string_memory_ptr",
																									"typeString": "string memory"
																								}
																							],
																							"id": 1083,
																							"name": "revert",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967277,
																								4294967277
																							],
																							"referencedDeclaration": 4294967277,
																							"src": "9522:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (string memory) pure"
																							}
																						},
																						"id": 1088,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9522:21:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1089,
																					"nodeType": "ExpressionStatement",
																					"src": "9522:21:3"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												},
												"id": 1100,
												"nodeType": "IfStatement",
												"src": "8754:927:3",
												"trueBody": {
													"id": 1046,
													"nodeType": "Block",
													"src": "8779:165:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1039,
																				"name": "_calldata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1029,
																				"src": "8818:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "8818:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8838:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "8818:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c69624469616d6f6e644375743a205f696e69742069732061646472657373283029206275745f63616c6c64617461206973206e6f7420656d707479",
																		"id": 1043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8857:62:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_046c761a688d1dc3c500562bc5aaa3544f01f394f9bb3b69aa2a950a45afb1f8",
																			"typeString": "literal_string \"LibDiamondCut: _init is address(0) but_calldata is not empty\""
																		},
																		"value": "LibDiamondCut: _init is address(0) but_calldata is not empty"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_046c761a688d1dc3c500562bc5aaa3544f01f394f9bb3b69aa2a950a45afb1f8",
																			"typeString": "literal_string \"LibDiamondCut: _init is address(0) but_calldata is not empty\""
																		}
																	],
																	"id": 1038,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8793:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8793:140:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1045,
															"nodeType": "ExpressionStatement",
															"src": "8793:140:3"
														}
													]
												}
											}
										]
									},
									"id": 1102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initializeDiamondCut",
									"nameLocation": "8663:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "_init",
												"nameLocation": "8692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "8684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8684:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "_calldata",
												"nameLocation": "8712:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "8699:22:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1028,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8699:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8683:39:3"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8744:0:3"
									},
									"scope": 1122,
									"src": "8654:1033:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "9809:167:3",
										"statements": [
											{
												"assignments": [
													1110
												],
												"declarations": [
													{
														"constant": false,
														"id": 1110,
														"mutability": "mutable",
														"name": "contractSize",
														"nameLocation": "9827:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "9819:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1109,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9819:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1111,
												"nodeType": "VariableDeclarationStatement",
												"src": "9819:20:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9858:62:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9872:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "_contract",
																		"nodeType": "YulIdentifier",
																		"src": "9900:9:3"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "9888:11:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9888:22:3"
															},
															"variableNames": [
																{
																	"name": "contractSize",
																	"nodeType": "YulIdentifier",
																	"src": "9872:12:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1104,
														"isOffset": false,
														"isSlot": false,
														"src": "9900:9:3",
														"valueSize": 1
													},
													{
														"declaration": 1110,
														"isOffset": false,
														"isSlot": false,
														"src": "9872:12:3",
														"valueSize": 1
													}
												],
												"id": 1112,
												"nodeType": "InlineAssembly",
												"src": "9849:71:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1114,
																"name": "contractSize",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "9937:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9952:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9937:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1117,
															"name": "_errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "9955:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9929:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9929:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "9929:40:3"
											}
										]
									},
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enforceHasContractCode",
									"nameLocation": "9702:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "_contract",
												"nameLocation": "9742:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "9734:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "_errorMessage",
												"nameLocation": "9775:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "9761:27:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1105,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9761:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9724:70:3"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9809:0:3"
									},
									"scope": 1122,
									"src": "9693:283:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1123,
							"src": "453:9525:3",
							"usedErrors": []
						}
					],
					"src": "32:9947:3"
				},
				"id": 3
			}
		}
	}
}